{"version":3,"sources":["Applications/CocosCreator.app/Contents/Resources/app.asar/node_modules/browser-pack/_prelude.js","Script/HelloWorld.js","project.js","Script/common.js","Script/game_manager.js","Script/main.js","Script/player.js","Script/scroll.js","Script/lib/simple-request.js","Script/target.js","Script/ui/ui_begin.js","Script/ui/ui.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","HelloWorld","module","cc","_RF","push","Class","extends","Component","properties","label","default","type","Label","text","onLoad","this","string","update","dt","pop","common","targetSpeedCfg","liuyifei","eva_green","gakki","playerInfo","mountInfo","base_speed","float_speed","float_speed_acceleration","targetInfo","speed","name","SelectTarget","index","game_manager","player","Node","bg","ui","manager","director","getCollisionManager","enabled","console","log","bgScript","getComponent","init","playerScript","uiScript","main","MaxPlayerBaseSpeed","PlayerAcceleration","MaxSpeedFloated","SpeedFloatRecovery","SpeedFloatAcceleration","touchParticle","ParticleSystem","game","current_speed","enableInput","baseSpeed","current_speed_float","registerInput","self","eventManager","addListener","event","EventListener","TOUCH_ONE_BY_ONE","onTouchBegan","touch","position","node","parent","convertTouchToNodeSpaceAR","x","y","resetSystem","onTouchMoved","onTouchEnded","Math","min","emit","msg","max","current","onCollisionEnter","other","nickname","loadScene","scroll","playerController","dur","topY","childrenCount","child","children","_i","_child","height","simple-request","Object","defineProperty","value","timeoutLimit","SRequest","that","get","baseURL","handlerURL","params","cb","xhr","XMLHttpRequest","paramStr","getURLParamsString","open","timeout","onload","data","JSON","parse","responseText","undefined","ontimeout","send","post","urlParams","setRequestHeader","bodyContent","stringify","onerror","jump","url","window","location","href","isStart","start","target","speakDuration","speakTextBox","speak_duration_now","sprite","Sprite","spriteFrame","SpriteFrame","raw","ui_begin","ebox_nickname","EditBox","toggleGroup","ToggleGroup","on","alert","toggleItems","item","isChecked","speed_progress","ProgressBar","speed_progress_float","lb","progress","detail"],"mappings":"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","file":"project.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\ncc._RF.push(module, '280c3rsZJJKnZ9RqbALVwtK', 'HelloWorld');\n// Script/HelloWorld.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!'\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.label.string = this.text;\n    },\n\n    // called every frame\n    update: function update(dt) {}\n});\n\ncc._RF.pop();","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"HelloWorld\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, '280c3rsZJJKnZ9RqbALVwtK', 'HelloWorld');\n// Script/HelloWorld.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!'\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.label.string = this.text;\n    },\n\n    // called every frame\n    update: function update(dt) {}\n});\n\ncc._RF.pop();\n},{}],\"common\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, '0aff6ovTK5N44pO+pA+DbVM', 'common');\n// Script/common.js\n\n\"use strict\";\n\nvar targetSpeedCfg = {\n    \"liuyifei\": 400,\n    \"eva_green\": 470,\n    \"gakki\": 450\n};\n\nmodule.exports = {\n    playerInfo: {},\n    mountInfo: {\n        base_speed: 300,\n        float_speed: 1.6,\n        float_speed_acceleration: 0.05\n    },\n    targetInfo: {\n        speed: 400,\n        name: \"gakki\"\n    },\n    SelectTarget: function SelectTarget(index) {\n        var name = [\"gakki\", \"eva_green\", \"liuyifei\"][index];\n        this.targetInfo.name = name;\n        if (targetSpeedCfg[name]) {\n            this.targetInfo.speed = targetSpeedCfg[name];\n        }\n    }\n};\n\ncc._RF.pop();\n},{}],\"game_manager\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, 'b92e3N9npRHXaRjHudJNxd2', 'game_manager');\n// Script/game_manager.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        player: cc.Node,\n        bg: cc.Node,\n        ui: cc.Node\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        var manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        console.log(\"init bg script\");\n        var bgScript = this.bg.getComponent(\"scroll\");\n        bgScript.init(this);\n\n        console.log(\"init player script\");\n        var playerScript = this.player.getComponent(\"player\");\n        playerScript.init(this);\n\n        console.log(\"init ui script\");\n        var uiScript = this.ui.getComponent(\"ui\");\n        uiScript.init(this);\n    }\n\n});\n\ncc._RF.pop();\n},{}],\"main\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, 'bee3a1CvJNBoYhcZiC5zxvX', 'main');\n// Script/main.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {}\n\n});\n\ncc._RF.pop();\n},{}],\"player\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, '10cf4JEH8FKy5o9XIyEOnR6', 'player');\n// Script/player.js\n\n\"use strict\";\n\nvar common = require(\"common\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        MaxPlayerBaseSpeed: 200,\n        PlayerAcceleration: 600,\n        MaxSpeedFloated: 1.6,\n        SpeedFloatRecovery: 0.6,\n        SpeedFloatAcceleration: 0.1,\n        touchParticle: cc.ParticleSystem\n\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.MaxPlayerBaseSpeed = common.mountInfo.base_speed;\n        this.MaxSpeedFloated = common.mountInfo.float_speed;\n        this.SpeedFloatAcceleration = common.mountInfo.float_speed_acceleration;\n    },\n    init: function init(game) {\n        this.game = game;\n        this.current_speed = 0;\n        this.enableInput = false;\n        this.baseSpeed = 0;\n        this.MaxSpeedFloated = common.mountInfo.float_speed;\n        this.current_speed_float = 1;\n        this.registerInput();\n    },\n    registerInput: function registerInput() {\n        var self = this;\n        // touch input\n        cc.eventManager.addListener({\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\n            onTouchBegan: function onTouchBegan(touch, event) {\n                if (!self.enableInput) {\n                    return;\n                }\n\n                var position = self.node.parent.convertTouchToNodeSpaceAR(touch);\n                self.touchParticle.node.x = position.x;\n                self.touchParticle.node.y = position.y;\n                self.touchParticle.resetSystem();\n                self.touchParticle.enabled = true;\n                return true;\n            },\n            onTouchMoved: function onTouchMoved(touch, event) {\n                if (!self.enableInput) {\n                    return;\n                }\n            },\n            onTouchEnded: function onTouchEnded(touch, event) {\n                if (!self.enableInput) {\n                    return;\n                }\n\n                self.current_speed_float += self.SpeedFloatAcceleration;\n                self.current_speed_float = Math.min(self.current_speed_float, self.MaxSpeedFloated);\n                self.game.node.emit(\"player_speed_floating\", { msg: { max: self.MaxSpeedFloated, current: self.current_speed_float } });\n            }\n        }, self.node);\n    },\n\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        this.baseSpeed += this.PlayerAcceleration * dt;\n        if (this.baseSpeed > this.MaxPlayerBaseSpeed) {\n            this.baseSpeed = this.MaxPlayerBaseSpeed;\n            this.enableInput = true;\n        }\n        this.game.node.emit(\"player_base_speed_change\", { max: this.MaxPlayerBaseSpeed, current: this.baseSpeed });\n\n        this.current_speed_float -= this.SpeedFloatRecovery * dt;\n        this.game.node.emit(\"player_speed_floating\", { max: this.MaxSpeedFloated, current: this.current_speed_float });\n\n        this.current_speed_float = Math.max(this.current_speed_float, 1);\n        this.current_speed = this.baseSpeed * this.current_speed_float;\n    },\n    /**\n    * 当碰撞产生的时候调用\n    * @param  {Collider} other 产生碰撞的另一个碰撞组件\n    * @param  {Collider} self  产生碰撞的自身的碰撞组件\n     */\n    onCollisionEnter: function onCollisionEnter(other, self) {\n        console.log(common.playerInfo.nickname + ' catch lolita!!!');\n        cc.director.loadScene('begin');\n    }\n});\n\ncc._RF.pop();\n},{\"common\":\"common\"}],\"scroll\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, '2efa475NSNPNrsh+QanyzHg', 'scroll');\n// Script/scroll.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        player: cc.Node\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {},\n\n    init: function init(game) {\n        this.playerController = this.player.getComponent(\"player\");\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        var dur = this.playerController.current_speed * dt;\n        var topY = 0;\n        for (var i = 0; i < this.node.childrenCount; i++) {\n            var child = this.node.children[i];\n            child.y -= dur;\n            if (child.y > topY) {\n                topY = child.y;\n            }\n        }\n        for (var _i = 0; _i < this.node.childrenCount; _i++) {\n            var _child = this.node.children[_i];\n            if (_child.y < -(_child.height * 1.5)) {\n                _child.y = topY + _child.height;\n            }\n        }\n    }\n});\n\ncc._RF.pop();\n},{}],\"simple-request\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, '363391WEHNNLpzBRKb/3v+U', 'simple-request');\n// Script/lib/simple-request.js\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by wizard on 16/4/1.\n */\n\nvar timeoutLimit = 30 * 1000;\n\n//SRequest.get(defines.gameHomeURL, \"s/Info/GetBag\", {test: 1, name: \"haha\"}, data=> {\n//  console.log('resp 1' + JSON.stringify(data));\n//});\n//\n//SRequest.post(defines.gameHomeURL, \"s/Info/RenamePet\", {\"pet_id\": 1000}, data=> {\n//  console.log('resp 2' + JSON.stringify(data));\n//})\n\nvar SRequest = SRequest || function () {\n  var that = {};\n\n  that.get = function (baseURL, handlerURL, params, cb) {\n    var xhr = new XMLHttpRequest();\n\n    var paramStr = getURLParamsString(params);\n    console.log(\"get string: \" + baseURL + handlerURL + paramStr);\n\n    xhr.open(\"GET\", baseURL + handlerURL + paramStr, true);\n    xhr.timeout = timeoutLimit;\n    xhr.onload = function () {\n      var data = JSON.parse(xhr.responseText);\n      if (cb) {\n        cb.call(undefined, data);\n      }\n    };\n    xhr.ontimeout = function () {\n      if (cb) {\n        cb.call(undefined, { timeout: true });\n      }\n    };\n    xhr.send();\n  };\n\n  that.post = function (baseURL, handlerURL, urlParams, params, cb) {\n\n    var xhr = new XMLHttpRequest(); // new HttpRequest instance\n    console.log('post', baseURL + handlerURL + getURLParamsString(urlParams));\n    xhr.open(\"POST\", baseURL + handlerURL + getURLParamsString(urlParams), true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.timeout = timeoutLimit;\n    xhr.onload = function () {\n      //console.log('xhr.onload',xhr.responseText);\n      var data = JSON.parse(xhr.responseText);\n      if (cb) {\n        cb.call(undefined, data);\n      }\n    };\n    xhr.ontimeout = function () {\n      if (cb) {\n        cb.call(undefined, { timeout: true });\n      }\n    };\n    console.log('xhr.onload', params);\n    var bodyContent = params ? JSON.stringify(params) : \"\";\n    xhr.onerror = function (e) {\n      console.log('server error ' + e);\n      if (cb) {\n        cb.call(this, { timeout: true });\n      }\n    };\n    xhr.send(bodyContent);\n  };\n\n  that.jump = function (url, params) {\n    var paramStr = getURLParamsString(params);\n    console.log(\"jump to url: \" + url + paramStr);\n    window.location.href = url + paramStr;\n  };\n\n  var getURLParamsString = function getURLParamsString(params, isStart) {\n    var paramStr = \"\";\n    if (params) {\n      var start = isStart != undefined ? isStart : true;\n      for (var index in params) {\n        if (start) {\n          start = false;\n          paramStr += \"?\";\n        } else {\n          paramStr += \"&\";\n        }\n        paramStr += index + \"=\" + params[index];\n      }\n    }\n\n    return paramStr;\n  };\n\n  return that;\n}();\n\nexports.default = SRequest;\nmodule.exports = exports[\"default\"];\n\ncc._RF.pop();\n},{}],\"target\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, '6a305F/xYBFj6frW/RuNUTZ', 'target');\n// Script/target.js\n\n\"use strict\";\n\nvar common = require(\"common\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        player: cc.Node,\n        speed: 400,\n        speakDuration: 3,\n        speakTextBox: cc.Label\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        console.log(\"target on loaded\");\n        console.log(common.targetInfo);\n        this.playerController = this.player.getComponent(\"player\");\n\n        this.speak_duration_now = 0;\n        this.speed = common.targetInfo.speed;\n        var sprite = this.node.getComponent(cc.Sprite);\n        sprite.spriteFrame = new cc.SpriteFrame(cc.url.raw(\"Texture/\" + \"target_\" + common.targetInfo.name + \".png\"));\n\n        // cc.loader.load(cc.url.raw(\"Texture/\"+\"target_\"+common.targetInfo.name+\".png\"),cc.SpriteFrame,function (err, spriteFrame) {\n        //     if(err){\n        //         console.log(err);\n        //         return\n        //     }\n        //     sprite.spriteFrame=spriteFrame;\n        // });\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        var speed = this.speed - this.playerController.current_speed;\n        this.node.y += speed * dt;\n\n        this.speak_duration_now += dt;\n        if (this.speak_duration_now > this.speakDuration) {\n            this.speakTextBox.enabled = false;\n        }\n    }\n});\n\ncc._RF.pop();\n},{\"common\":\"common\"}],\"ui_begin\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, '67655elHOdPsp2u/VSmhf6P', 'ui_begin');\n// Script/ui/ui_begin.js\n\n'use strict';\n\nvar common = require(\"common\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        ebox_nickname: cc.EditBox,\n        toggleGroup: cc.ToggleGroup\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        var self = this;\n        this.node.on('touchend', function (event) {\n            console.log('touchend');\n            common.playerInfo.nickname = self.ebox_nickname.string;\n            if (common.playerInfo.nickname == \"\") {\n                alert(\"昵称不能为空\");\n                return;\n            }\n\n            for (var i = 0; i < self.toggleGroup.toggleItems.length; i++) {\n                var item = self.toggleGroup.toggleItems[i];\n                console.log(item.name);\n                if (item.isChecked) {\n                    common.SelectTarget(i);\n                }\n            }\n            cc.director.loadScene('main');\n        }, this);\n    }\n\n});\n\ncc._RF.pop();\n},{\"common\":\"common\"}],\"ui\":[function(require,module,exports){\n\"use strict\";\ncc._RF.push(module, 'a191bhJYSpCOLGrL0KJ9P9a', 'ui');\n// Script/ui/ui.js\n\n\"use strict\";\n\nvar common = require(\"common\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed_progress: cc.ProgressBar,\n        speed_progress_float: cc.ProgressBar,\n        lb: cc.Label\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.speed_progress.progress = 0.0;\n        this.speed_progress_float.progress = 0.0;\n        var text = \"基础速度:\" + common.mountInfo.base_speed + \"\\n\";\n        text += \"浮动速度:\" + common.mountInfo.float_speed + \"\\n\";\n        text += \"加速效果:\" + common.mountInfo.float_speed_acceleration + \"\\n\";\n        this.lb.string = text;\n    },\n\n    init: function init(game) {\n        console.log(this.speed_progress);\n        this.game = game;\n        var self = this;\n        self.game.node.on(\"player_base_speed_change\", function (event) {\n            self.speed_progress.progress = event.detail.current / event.detail.max;\n        });\n        self.game.node.on(\"player_speed_floating\", function (event) {\n            self.speed_progress_float.progress = (event.detail.current - 1) / (event.detail.max - 1);\n        });\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {}\n});\n\ncc._RF.pop();\n},{\"common\":\"common\"}]},{},[\"HelloWorld\",\"common\",\"game_manager\",\"simple-request\",\"main\",\"player\",\"scroll\",\"target\",\"ui\",\"ui_begin\"])\n\n","\"use strict\";\ncc._RF.push(module, '0aff6ovTK5N44pO+pA+DbVM', 'common');\n// Script/common.js\n\n\"use strict\";\n\nvar targetSpeedCfg = {\n    \"liuyifei\": 400,\n    \"eva_green\": 470,\n    \"gakki\": 450\n};\n\nmodule.exports = {\n    playerInfo: {},\n    mountInfo: {\n        base_speed: 300,\n        float_speed: 1.6,\n        float_speed_acceleration: 0.05\n    },\n    targetInfo: {\n        speed: 400,\n        name: \"gakki\"\n    },\n    SelectTarget: function SelectTarget(index) {\n        var name = [\"gakki\", \"eva_green\", \"liuyifei\"][index];\n        this.targetInfo.name = name;\n        if (targetSpeedCfg[name]) {\n            this.targetInfo.speed = targetSpeedCfg[name];\n        }\n    }\n};\n\ncc._RF.pop();","\"use strict\";\ncc._RF.push(module, 'b92e3N9npRHXaRjHudJNxd2', 'game_manager');\n// Script/game_manager.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        player: cc.Node,\n        bg: cc.Node,\n        ui: cc.Node\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        var manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        console.log(\"init bg script\");\n        var bgScript = this.bg.getComponent(\"scroll\");\n        bgScript.init(this);\n\n        console.log(\"init player script\");\n        var playerScript = this.player.getComponent(\"player\");\n        playerScript.init(this);\n\n        console.log(\"init ui script\");\n        var uiScript = this.ui.getComponent(\"ui\");\n        uiScript.init(this);\n    }\n\n});\n\ncc._RF.pop();","\"use strict\";\ncc._RF.push(module, 'bee3a1CvJNBoYhcZiC5zxvX', 'main');\n// Script/main.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {}\n\n});\n\ncc._RF.pop();","\"use strict\";\ncc._RF.push(module, '10cf4JEH8FKy5o9XIyEOnR6', 'player');\n// Script/player.js\n\n\"use strict\";\n\nvar common = require(\"common\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        MaxPlayerBaseSpeed: 200,\n        PlayerAcceleration: 600,\n        MaxSpeedFloated: 1.6,\n        SpeedFloatRecovery: 0.6,\n        SpeedFloatAcceleration: 0.1,\n        touchParticle: cc.ParticleSystem\n\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.MaxPlayerBaseSpeed = common.mountInfo.base_speed;\n        this.MaxSpeedFloated = common.mountInfo.float_speed;\n        this.SpeedFloatAcceleration = common.mountInfo.float_speed_acceleration;\n    },\n    init: function init(game) {\n        this.game = game;\n        this.current_speed = 0;\n        this.enableInput = false;\n        this.baseSpeed = 0;\n        this.MaxSpeedFloated = common.mountInfo.float_speed;\n        this.current_speed_float = 1;\n        this.registerInput();\n    },\n    registerInput: function registerInput() {\n        var self = this;\n        // touch input\n        cc.eventManager.addListener({\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\n            onTouchBegan: function onTouchBegan(touch, event) {\n                if (!self.enableInput) {\n                    return;\n                }\n\n                var position = self.node.parent.convertTouchToNodeSpaceAR(touch);\n                self.touchParticle.node.x = position.x;\n                self.touchParticle.node.y = position.y;\n                self.touchParticle.resetSystem();\n                self.touchParticle.enabled = true;\n                return true;\n            },\n            onTouchMoved: function onTouchMoved(touch, event) {\n                if (!self.enableInput) {\n                    return;\n                }\n            },\n            onTouchEnded: function onTouchEnded(touch, event) {\n                if (!self.enableInput) {\n                    return;\n                }\n\n                self.current_speed_float += self.SpeedFloatAcceleration;\n                self.current_speed_float = Math.min(self.current_speed_float, self.MaxSpeedFloated);\n                self.game.node.emit(\"player_speed_floating\", { msg: { max: self.MaxSpeedFloated, current: self.current_speed_float } });\n            }\n        }, self.node);\n    },\n\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        this.baseSpeed += this.PlayerAcceleration * dt;\n        if (this.baseSpeed > this.MaxPlayerBaseSpeed) {\n            this.baseSpeed = this.MaxPlayerBaseSpeed;\n            this.enableInput = true;\n        }\n        this.game.node.emit(\"player_base_speed_change\", { max: this.MaxPlayerBaseSpeed, current: this.baseSpeed });\n\n        this.current_speed_float -= this.SpeedFloatRecovery * dt;\n        this.game.node.emit(\"player_speed_floating\", { max: this.MaxSpeedFloated, current: this.current_speed_float });\n\n        this.current_speed_float = Math.max(this.current_speed_float, 1);\n        this.current_speed = this.baseSpeed * this.current_speed_float;\n    },\n    /**\n    * 当碰撞产生的时候调用\n    * @param  {Collider} other 产生碰撞的另一个碰撞组件\n    * @param  {Collider} self  产生碰撞的自身的碰撞组件\n     */\n    onCollisionEnter: function onCollisionEnter(other, self) {\n        console.log(common.playerInfo.nickname + ' catch lolita!!!');\n        cc.director.loadScene('begin');\n    }\n});\n\ncc._RF.pop();","\"use strict\";\ncc._RF.push(module, '2efa475NSNPNrsh+QanyzHg', 'scroll');\n// Script/scroll.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        player: cc.Node\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {},\n\n    init: function init(game) {\n        this.playerController = this.player.getComponent(\"player\");\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        var dur = this.playerController.current_speed * dt;\n        var topY = 0;\n        for (var i = 0; i < this.node.childrenCount; i++) {\n            var child = this.node.children[i];\n            child.y -= dur;\n            if (child.y > topY) {\n                topY = child.y;\n            }\n        }\n        for (var _i = 0; _i < this.node.childrenCount; _i++) {\n            var _child = this.node.children[_i];\n            if (_child.y < -(_child.height * 1.5)) {\n                _child.y = topY + _child.height;\n            }\n        }\n    }\n});\n\ncc._RF.pop();","\"use strict\";\ncc._RF.push(module, '363391WEHNNLpzBRKb/3v+U', 'simple-request');\n// Script/lib/simple-request.js\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by wizard on 16/4/1.\n */\n\nvar timeoutLimit = 30 * 1000;\n\n//SRequest.get(defines.gameHomeURL, \"s/Info/GetBag\", {test: 1, name: \"haha\"}, data=> {\n//  console.log('resp 1' + JSON.stringify(data));\n//});\n//\n//SRequest.post(defines.gameHomeURL, \"s/Info/RenamePet\", {\"pet_id\": 1000}, data=> {\n//  console.log('resp 2' + JSON.stringify(data));\n//})\n\nvar SRequest = SRequest || function () {\n  var that = {};\n\n  that.get = function (baseURL, handlerURL, params, cb) {\n    var xhr = new XMLHttpRequest();\n\n    var paramStr = getURLParamsString(params);\n    console.log(\"get string: \" + baseURL + handlerURL + paramStr);\n\n    xhr.open(\"GET\", baseURL + handlerURL + paramStr, true);\n    xhr.timeout = timeoutLimit;\n    xhr.onload = function () {\n      var data = JSON.parse(xhr.responseText);\n      if (cb) {\n        cb.call(undefined, data);\n      }\n    };\n    xhr.ontimeout = function () {\n      if (cb) {\n        cb.call(undefined, { timeout: true });\n      }\n    };\n    xhr.send();\n  };\n\n  that.post = function (baseURL, handlerURL, urlParams, params, cb) {\n\n    var xhr = new XMLHttpRequest(); // new HttpRequest instance\n    console.log('post', baseURL + handlerURL + getURLParamsString(urlParams));\n    xhr.open(\"POST\", baseURL + handlerURL + getURLParamsString(urlParams), true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.timeout = timeoutLimit;\n    xhr.onload = function () {\n      //console.log('xhr.onload',xhr.responseText);\n      var data = JSON.parse(xhr.responseText);\n      if (cb) {\n        cb.call(undefined, data);\n      }\n    };\n    xhr.ontimeout = function () {\n      if (cb) {\n        cb.call(undefined, { timeout: true });\n      }\n    };\n    console.log('xhr.onload', params);\n    var bodyContent = params ? JSON.stringify(params) : \"\";\n    xhr.onerror = function (e) {\n      console.log('server error ' + e);\n      if (cb) {\n        cb.call(this, { timeout: true });\n      }\n    };\n    xhr.send(bodyContent);\n  };\n\n  that.jump = function (url, params) {\n    var paramStr = getURLParamsString(params);\n    console.log(\"jump to url: \" + url + paramStr);\n    window.location.href = url + paramStr;\n  };\n\n  var getURLParamsString = function getURLParamsString(params, isStart) {\n    var paramStr = \"\";\n    if (params) {\n      var start = isStart != undefined ? isStart : true;\n      for (var index in params) {\n        if (start) {\n          start = false;\n          paramStr += \"?\";\n        } else {\n          paramStr += \"&\";\n        }\n        paramStr += index + \"=\" + params[index];\n      }\n    }\n\n    return paramStr;\n  };\n\n  return that;\n}();\n\nexports.default = SRequest;\nmodule.exports = exports[\"default\"];\n\ncc._RF.pop();","\"use strict\";\ncc._RF.push(module, '6a305F/xYBFj6frW/RuNUTZ', 'target');\n// Script/target.js\n\n\"use strict\";\n\nvar common = require(\"common\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        player: cc.Node,\n        speed: 400,\n        speakDuration: 3,\n        speakTextBox: cc.Label\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        console.log(\"target on loaded\");\n        console.log(common.targetInfo);\n        this.playerController = this.player.getComponent(\"player\");\n\n        this.speak_duration_now = 0;\n        this.speed = common.targetInfo.speed;\n        var sprite = this.node.getComponent(cc.Sprite);\n        sprite.spriteFrame = new cc.SpriteFrame(cc.url.raw(\"Texture/\" + \"target_\" + common.targetInfo.name + \".png\"));\n\n        // cc.loader.load(cc.url.raw(\"Texture/\"+\"target_\"+common.targetInfo.name+\".png\"),cc.SpriteFrame,function (err, spriteFrame) {\n        //     if(err){\n        //         console.log(err);\n        //         return\n        //     }\n        //     sprite.spriteFrame=spriteFrame;\n        // });\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        var speed = this.speed - this.playerController.current_speed;\n        this.node.y += speed * dt;\n\n        this.speak_duration_now += dt;\n        if (this.speak_duration_now > this.speakDuration) {\n            this.speakTextBox.enabled = false;\n        }\n    }\n});\n\ncc._RF.pop();","\"use strict\";\ncc._RF.push(module, '67655elHOdPsp2u/VSmhf6P', 'ui_begin');\n// Script/ui/ui_begin.js\n\n'use strict';\n\nvar common = require(\"common\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        ebox_nickname: cc.EditBox,\n        toggleGroup: cc.ToggleGroup\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        var self = this;\n        this.node.on('touchend', function (event) {\n            console.log('touchend');\n            common.playerInfo.nickname = self.ebox_nickname.string;\n            if (common.playerInfo.nickname == \"\") {\n                alert(\"昵称不能为空\");\n                return;\n            }\n\n            for (var i = 0; i < self.toggleGroup.toggleItems.length; i++) {\n                var item = self.toggleGroup.toggleItems[i];\n                console.log(item.name);\n                if (item.isChecked) {\n                    common.SelectTarget(i);\n                }\n            }\n            cc.director.loadScene('main');\n        }, this);\n    }\n\n});\n\ncc._RF.pop();","\"use strict\";\ncc._RF.push(module, 'a191bhJYSpCOLGrL0KJ9P9a', 'ui');\n// Script/ui/ui.js\n\n\"use strict\";\n\nvar common = require(\"common\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed_progress: cc.ProgressBar,\n        speed_progress_float: cc.ProgressBar,\n        lb: cc.Label\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.speed_progress.progress = 0.0;\n        this.speed_progress_float.progress = 0.0;\n        var text = \"基础速度:\" + common.mountInfo.base_speed + \"\\n\";\n        text += \"浮动速度:\" + common.mountInfo.float_speed + \"\\n\";\n        text += \"加速效果:\" + common.mountInfo.float_speed_acceleration + \"\\n\";\n        this.lb.string = text;\n    },\n\n    init: function init(game) {\n        console.log(this.speed_progress);\n        this.game = game;\n        var self = this;\n        self.game.node.on(\"player_base_speed_change\", function (event) {\n            self.speed_progress.progress = event.detail.current / event.detail.max;\n        });\n        self.game.node.on(\"player_speed_floating\", function (event) {\n            self.speed_progress_float.progress = (event.detail.current - 1) / (event.detail.max - 1);\n        });\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {}\n});\n\ncc._RF.pop();"],"sourceRoot":"/source/"}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=