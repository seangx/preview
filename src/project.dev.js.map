{"version":3,"sources":["assets/scripts/game/component/DragonBonesCtrl.js","assets/scripts/data/account.js","assets/scripts/game/bg-controller.js","assets/scripts/game/prefab/coin.js","assets/scripts/game/component/dargon-bone-ctl.js","assets/scripts/game/prefab/enemy.js","assets/scripts/utility/event-listener.js","assets/scripts/data/game-ctl.js","assets/scripts/game/game.js","assets/scripts/global.js","assets/scripts/game/component/jump.js","assets/scripts/game/component/mask-progress.js","assets/scripts/data/player-data.js","assets/scripts/game/player.js","assets/scripts/game/stub-controller.js","assets/scripts/game/prefab/stub.js","assets/scripts/game/component/tips-ctl.js","assets/scripts/game/ui-controller.js"],"names":["cc","runtime","NORMAL_ANIMATION_GROUP","AIM_ANIMATION_GROUP","ATTACK_ANIMATION_GROUP","JUMP_SPEED","NORMALIZE_MOVE_SPEED","MAX_MOVE_SPEED_FRONT","MAX_MOVE_SPEED_BACK","WEAPON_R_LIST","WEAPON_L_LIST","GROUND","G","Class","extends","Component","editor","requireComponent","dragonBones","ArmatureDisplay","properties","touchHandler","default","type","Node","upButton","downButton","leftButton","rightButton","_bullets","_left","_right","_isJumpingA","_isJumpingB","_isSquating","_isAttackingA","_isAttackingB","_weaponRIndex","_weaponLIndex","_faceDir","_aimDir","_moveDir","_aimRadian","_speedX","_speedY","_armature","_armatureDisplay","_weaponR","_weaponL","_aimState","_walkState","_attackState","_target","p","onLoad","_this","this","getComponent","armature","addEventListener","EventObject","FADE_IN_COMPLETE","_animationEventHandler","FADE_OUT_COMPLETE","getSlot","displayController","childArmature","FRAME_EVENT","_frameEventHandler","_updateAnimation","WorldClock","clock","add","on","EventType","TOUCH_START","event","attack","TOUCH_END","TOUCH_MOVE","touches","getTouches","touchLoc","getLocation","aim","x","y","jump","squat","TOUCH_CANCEL","_updateMove","eventManager","addListener","EventListener","KEYBOARD","onKeyPressed","keyCode","_keyHandler","onKeyReleased","node","isDown","KEY","a","left","d","right","w","up","s","down","q","switchWeaponR","e","switchWeaponL","space","dir","move","animation","fadeIn","isSquating","isAttacking","removeEventListener","length","newWeaponName","buildArmature","parent","convertToNodeSpaceAR","update","dt","_updatePosition","_updateAim","_updateAttack","_enterFrameHandler","onDisable","i","bullet","doClean","remove","addBullet","push","splice","advanceTime","detail","animationState","name","firePointBone","getBone","localPoint","global","display","globalPoint","convertToWorldSpace","_fire","firePoint","timeScale","minX","visibleRect","width","maxX","scaleX","aimOffsetY","scaleY","Math","atan2","PI","aimDir","AnimationFadeOutMode","SameGroup","weight","abs","autoFadeOutTime","fadeTotalTime","addBoneMask","DragonBullet","_effect","init","parentNode","effect","radian","speed","position","cos","sin","thePos","convertToNodeSpace","setPosition","rotation","DragonBones","RADIAN_TO_ANGLE","play","effectDisplay","random","addChild","worldPos","getPosition","height","removeFromParent","dispose","_playerData","require","_gameCtl","Account","that","playerData","_playerData2","gameCtl","_gameCtl2","exports","_global","bgList","bgSpeed","_global2","account","isRunning","defines","_i","index","console","log","action","bezierTo","runAction","sequence","callFunc","dead","scaleTo","onDestroy","AnimateState","invalid","idle","walk","run","defaultAnimate","idleAnimate","walkAnimate","jumpAnimate","attackAnimate","animateCompleteListener","state","setState","oldState","animateSpeed","onRun","animateFrameListener","playAnimate","EnemyState","tipsBegan","tipsEnd","action1","raaction","rotateTo","scal1","isFly","winSize","obj","Register","method","hasOwnProperty","fire","handlerList","args","j","arguments","handler","apply","_eventListener","GameState","pause","resume","GameCtl","_event","_eventListener2","_state","_timeSpeed","undefined","data","JSON","stringify","attackEnd","onAttackEnd","onTipsBegan","onTipsEnd","onPause","onResume","onTimeScale","playerNode","director","getCollisionManager","enabled","emit","moveTo","start","_account","_account2","accY","jumpSpeed","bind","initPosY","timeSubSpeed","speedY","progress","currentWidth","setProgress","TitleType","say","listen","Title","PlayerData","titleList","goldCount","gameData","initTitle","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","body","jumpAudio","AudioClip","attackAudio","eatAudio","tipsResult","result","zIndex","onJump","com","audioEngine","onCollisionEnter","other","self","onCollisionStay","onCollisionExit","gameNode","stubPrefab","Prefab","prizePrefab","enemyPrefabList","stubSpeedX","initPosNode","initPrizePosNode","stubList","addStubIndex","prizeList","enemyList","coinList","addStub","addCoinFlag","addCoinFlagDurection","addCoinDurection","enemy","destroy","coin","addEnemy","floor","addCoin","createStub","stub","addPrize","initPos","prefab","instantiate","initWithData","stubSpriteFrameList","SpriteFrame","speedX","addComponent","Sprite","spriteFrame","collider","BoxCollider","size","fly","timeCutDownLabel","Label","resultLabel","active","timeCutDown","_this2","string","setTimeout","totalTime","player","runProgress","runButton","coinCountLabel","currentTime","opacity","onButtonClick","customData"],"mappings":"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","sourcesContent":["\nif (!cc.runtime) {\n// runtime not support dragonbones.\n\nvar NORMAL_ANIMATION_GROUP = \"normal\";\nvar AIM_ANIMATION_GROUP = \"aim\";\nvar ATTACK_ANIMATION_GROUP = \"attack\";\nvar JUMP_SPEED = -20;\nvar NORMALIZE_MOVE_SPEED = 3.6;\nvar MAX_MOVE_SPEED_FRONT = NORMALIZE_MOVE_SPEED * 1.4;\nvar MAX_MOVE_SPEED_BACK = NORMALIZE_MOVE_SPEED * 1.0;\nvar WEAPON_R_LIST = [\"weapon_1502b_r\", \"weapon_1005\", \"weapon_1005b\", \"weapon_1005c\", \"weapon_1005d\", \"weapon_1005e\"];\nvar WEAPON_L_LIST = [\"weapon_1502b_l\", \"weapon_1005\", \"weapon_1005b\", \"weapon_1005c\", \"weapon_1005d\"];\nvar GROUND = -200;\nvar G = -0.6;\n\ncc.Class({\n    extends: cc.Component,\n    editor: {\n        requireComponent: dragonBones.ArmatureDisplay\n    },\n\n    properties: {\n        touchHandler : {\n            default: null,\n            type: cc.Node\n        },\n\n        upButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        downButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        leftButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        rightButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        _bullets : [],\n        _left : false,\n        _right : false,\n        _isJumpingA : false,\n        _isJumpingB : false,\n        _isSquating : false,\n        _isAttackingA : false,\n        _isAttackingB : false,\n        _weaponRIndex : 0,\n        _weaponLIndex : 0,\n        _faceDir : 1,\n        _aimDir : 0,\n        _moveDir : 0,\n        _aimRadian : 0,\n        _speedX : 0,\n        _speedY : 0,\n        _armature : null,\n        _armatureDisplay : null,\n        _weaponR : null,\n        _weaponL : null,\n        _aimState : null,\n        _walkState : null,\n        _attackState : null,\n        _target : cc.p(0, 0),\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this._armatureDisplay = this.getComponent(dragonBones.ArmatureDisplay);\n        this._armature = this._armatureDisplay.armature();\n\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE, this._animationEventHandler, this);\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_OUT_COMPLETE, this._animationEventHandler, this);\n\n        this._armature.getSlot('effects_1').displayController = NORMAL_ANIMATION_GROUP;\n        this._armature.getSlot('effects_2').displayController = NORMAL_ANIMATION_GROUP;\n\n        this._weaponR = this._armature.getSlot('weapon_r').childArmature;\n        this._weaponL = this._armature.getSlot('weapon_l').childArmature;\n        this._weaponR.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n        this._weaponL.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._updateAnimation();\n        dragonBones.WorldClock.clock.add(this._armature);\n\n        if (this.touchHandler) {\n            // touch events\n            this.touchHandler.on(cc.Node.EventType.TOUCH_START, event => {\n                this.attack(true);\n            }, this);\n            this.touchHandler.on(cc.Node.EventType.TOUCH_END, event => {\n                this.attack(false);\n            }, this);\n            this.touchHandler.on(cc.Node.EventType.TOUCH_MOVE, event => {\n                var touches = event.getTouches();\n                var touchLoc = touches[0].getLocation();\n                this.aim(touchLoc.x, touchLoc.y);\n            }, this);\n        }\n\n        if (this.upButton) {\n            this.upButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this.jump();\n            }, this);\n        }\n\n        if (this.downButton) {\n            this.downButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this.squat(true);\n            }, this);\n            this.downButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this.squat(false);\n            }, this);\n            this.downButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this.squat(false);\n            }, this);\n        }\n\n        if (this.leftButton) {\n            this.leftButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this._left = true;\n                this._updateMove(-1);\n            }, this);\n            this.leftButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this._left = false;\n                this._updateMove(-1);\n            }, this);\n            this.leftButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this._left = false;\n                this._updateMove(-1);\n            }, this);\n        }\n\n        if (this.rightButton) {\n            this.rightButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this._right = true;\n                this._updateMove(1);\n            }, this);\n            this.rightButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this._right = false;\n                this._updateMove(1);\n            }, this);\n            this.rightButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this._right = false;\n                this._updateMove(1);\n            }, this);\n        }\n\n        // keyboard events\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            onKeyPressed: (keyCode, event) => {\n                this._keyHandler(keyCode, true);\n            },\n            onKeyReleased: (keyCode, event) => {\n                this._keyHandler(keyCode, false);\n            },\n        }, this.node);\n    },\n\n    _keyHandler: function(keyCode, isDown) {\n        switch(keyCode) {\n            case cc.KEY.a:\n            case cc.KEY.left:\n                this._left = isDown;\n                this._updateMove(-1);\n                break;\n            case cc.KEY.d:\n            case cc.KEY.right:\n                this._right = isDown;\n                this._updateMove(1);\n                break;\n            case cc.KEY.w:\n            case cc.KEY.up:\n                if (isDown) {\n                    this.jump();\n                }\n                break;\n            case cc.KEY.s:\n            case cc.KEY.down:\n                this.squat(isDown);\n                break;\n            case cc.KEY.q:\n                if (isDown) {\n                    this.switchWeaponR();\n                }\n                break;\n            case cc.KEY.e:\n                if (isDown) {\n                    this.switchWeaponL();\n                }\n                break;\n            case cc.KEY.space:\n                if (isDown) {\n                    this.switchWeaponR();\n                    this.switchWeaponL();\n                }\n                break;\n            default:\n                return;\n        }\n    },\n\n    _updateMove : function (dir) {\n        if (this._left && this._right) {\n            this.move(dir);\n        } else if (this._left) {\n            this.move(-1);\n        } else if (this._right) {\n            this.move(1);\n        } else {\n            this.move(0);\n        }\n    },\n\n    move : function(dir) {\n        if (this._moveDir === dir) {\n            return;\n        }\n\n        this._moveDir = dir;\n        this._updateAnimation();\n    },\n\n    jump : function () {\n        if (this._isJumpingA) {\n            return;\n        }\n\n        this._isJumpingA = true;\n        this._armature.animation.fadeIn(\"jump_1\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n        this._walkState = null;\n    },\n\n    squat : function(isSquating) {\n        if (this._isSquating === isSquating) {\n            return;\n        }\n\n        this._isSquating = isSquating;\n        this._updateAnimation();\n    },\n\n    attack : function (isAttacking) {\n        if (this._isAttackingA == isAttacking) {\n            return;\n        }\n\n        this._isAttackingA = isAttacking;\n    },\n\n    switchWeaponL : function() {\n        this._weaponL.removeEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._weaponLIndex = (this._weaponLIndex + 1) % WEAPON_L_LIST.length;\n        var newWeaponName = WEAPON_L_LIST[this._weaponLIndex];\n        this._weaponL = this._armatureDisplay.buildArmature(newWeaponName);\n        this._armature.getSlot('weapon_l').childArmature = this._weaponL;\n\n        this._weaponL.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n    },\n\n    switchWeaponR : function() {\n        this._weaponR.removeEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._weaponRIndex = (this._weaponRIndex + 1) % WEAPON_R_LIST.length;\n        var newWeaponName = WEAPON_R_LIST[this._weaponRIndex];\n        this._weaponR = this._armatureDisplay.buildArmature(newWeaponName);\n        this._armature.getSlot('weapon_r').childArmature = this._weaponR;\n\n        this._weaponR.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n    },\n\n    aim : function(x, y) {\n        // if (this._aimDir === 0) {\n        //     // this._aimDir = 10;\n        //     this._aimDir = 100;\n        //\n        // }\n        this._aimDir = 100;\n\n        this._target = this.node.parent.convertToNodeSpaceAR(cc.p(x, y));\n    },\n\n    update : function (dt) {\n        this._updatePosition();\n        this._updateAim();\n        this._updateAttack();\n        this._enterFrameHandler(dt);\n    },\n\n    onDisable : function() {\n        // clean the bullets\n        for (var i = this._bullets.length - 1; i >= 0; i--)\n        {\n            var bullet = this._bullets[i];\n            bullet.doClean();\n        }\n        this._bullets = [];\n\n        if (this._armature) {\n            // remove the _armature from world clock\n            dragonBones.WorldClock.clock.remove(this._armature);\n        }\n    },\n\n    addBullet : function(bullet) {\n        this._bullets.push(bullet);\n    },\n\n    _enterFrameHandler : function (dt) {\n        for (var i = this._bullets.length - 1; i >= 0; i--)\n        {\n            var bullet = this._bullets[i];\n            if (bullet.update())\n            {\n                this._bullets.splice(i, 1);\n            }\n        }\n        dragonBones.WorldClock.clock.advanceTime(dt);\n    },\n\n    _animationEventHandler: function(event) {\n        if (event.type === dragonBones.EventObject.FADE_IN_COMPLETE) {\n            if (event.detail.animationState.name === \"jump_1\") {\n                this._isJumpingB = true;\n                this._speedY = -JUMP_SPEED;\n                this._armature.animation.fadeIn(\"jump_2\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            } else if (event.detail.animationState.name === \"jump_4\") {\n                this._updateAnimation();\n            }\n        }\n        else if (event.type === dragonBones.EventObject.FADE_OUT_COMPLETE) {\n            if (event.detail.animationState.name === \"attack_01\") {\n                this._isAttackingB = false;\n                this._attackState = null;\n            }\n        }\n    },\n\n    _frameEventHandler : function (event) {\n        if (event.detail.name === \"onFire\") {\n            var firePointBone = event.detail.armature.getBone(\"firePoint\");\n            var localPoint = cc.p(firePointBone.global.x, -firePointBone.global.y);\n\n            var display = event.detail.armature.display;\n            var globalPoint = display.convertToWorldSpace(localPoint);\n\n            this._fire(globalPoint);\n        }\n    },\n\n    _fire : function (firePoint) {\n        // firePoint.x += Math.random() * 2 - 1;\n        // firePoint.y += Math.random() * 2 - 1;\n        //\n        // var armature = this._armatureDisplay.buildArmature(\"bullet_01\");\n        // var effect = this._armatureDisplay.buildArmature(\"fireEffect_01\");\n        // var radian = this._faceDir < 0 ? Math.PI - this._aimRadian : this._aimRadian;\n        // var bullet = new DragonBullet();\n        // bullet.init(this.node.parent._sgNode, armature, effect, radian + Math.random() * 0.02 - 0.01, 40, firePoint);\n        // this.addBullet(bullet);\n    },\n\n    _updateAnimation : function() {\n        if (this._isJumpingA) {\n            return;\n        }\n\n        if (this._isSquating) {\n            this._speedX = 0;\n            this._armature.animation.fadeIn(\"squat\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            this._walkState = null;\n            return;\n        }\n\n        if (this._moveDir === 0) {\n            this._speedX = 0;\n            this._armature.animation.fadeIn(\"idle\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            this._walkState = null;\n        } else {\n            if (!this._walkState) {\n                this._walkState = this._armature.animation.fadeIn(\"walk\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            }\n\n            if (this._moveDir * this._faceDir > 0) {\n                this._walkState.timeScale = MAX_MOVE_SPEED_FRONT / NORMALIZE_MOVE_SPEED;\n            } else {\n                this._walkState.timeScale = -MAX_MOVE_SPEED_BACK / NORMALIZE_MOVE_SPEED;\n            }\n\n            if (this._moveDir * this._faceDir > 0) {\n                this._speedX = MAX_MOVE_SPEED_FRONT * this._faceDir;\n            } else {\n                this._speedX = -MAX_MOVE_SPEED_BACK * this._faceDir;\n            }\n        }\n    },\n\n    _updatePosition : function() {\n        if (this._speedX !== 0) {\n            this.node.x += this._speedX;\n            var minX = -cc.visibleRect.width / 2;\n            var maxX = cc.visibleRect.width / 2;\n            if (this.node.x < minX) {\n                this.node.x = minX;\n            } else if (this.node.x > maxX) {\n                this.node.x = maxX;\n            }\n        }\n\n        if (this._speedY != 0) {\n            if (this._speedY > 5 && this._speedY + G <= 5) {\n                this._armature.animation.fadeIn(\"jump_3\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            }\n\n            this._speedY += G;\n\n            this.node.y += this._speedY;\n            if (this.node.y < GROUND) {\n                this.node.y = GROUND;\n                this._isJumpingA = false;\n                this._isJumpingB = false;\n                this._speedY = 0;\n                this._speedX = 0;\n                this._armature.animation.fadeIn(\"jump_4\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n                if (this._isSquating || this._moveDir) {\n                    this._updateAnimation();\n                }\n            }\n        }\n    },\n\n    _updateAim : function () {\n        // if (this._aimDir === 0) {\n        //     return;\n        // }\n\n        this._faceDir = this._target.x > this.node.x ? 1 : -1;\n        if (this.node.scaleX * this._faceDir < 0) {\n            this.node.scaleX *= -1;\n            if (this._moveDir) {\n                this._updateAnimation();\n            }\n        }\n\n        var aimOffsetY = this._armature.getBone(\"chest\").global.y * this.node.scaleY;\n\n        if (this._faceDir > 0) {\n            this._aimRadian = Math.atan2(-(this._target.y - this.node.y + aimOffsetY), this._target.x - this.node.x);\n        } else {\n            this._aimRadian = Math.PI - Math.atan2(-(this._target.y - this.node.y + aimOffsetY), this._target.x - this.node.x);\n            if (this._aimRadian > Math.PI) {\n                this._aimRadian -= Math.PI * 2;\n            }\n        }\n        // console.log(' anim radian  = ' + this._aimRadian);\n\n        let aimDir = 0;\n        if (this._aimRadian > 0) {\n            aimDir = -1;\n        } else {\n            aimDir = 1;\n        }\n\n        if (this._aimDir != aimDir) {\n            this._aimDir = aimDir;\n\n            // Animation mixing.\n            if (this._aimDir >= 0) {\n                this._aimState = this._armature.animation.fadeIn(\"aimUp\", 0.1, 1, 1, AIM_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup);\n            } else {\n                this._aimState = this._armature.animation.fadeIn(\n                    \"aimDown\", 0, 1,\n                    0, AIM_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup\n                );\n            }\n\n            // Add bone mask.\n            //_aimState.addBoneMask(\"pelvis\");\n        }\n\n        this._aimState.weight = Math.abs(this._aimRadian / Math.PI * 2);\n\n        //_armature.invalidUpdate(\"pelvis\"); // Only update bone mask.\n        // this._armature.invalidUpdate();\n    },\n\n    _updateAttack : function() {\n        if (!this._isAttackingA || this._isAttackingB) {\n            return;\n        }\n\n        this._isAttackingB = true;\n\n        // Animation mixing.\n        this._attackState = this._armature.animation.fadeIn(\n            \"attack_01\", -1, -1,\n            0, ATTACK_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup\n        );\n\n        this._attackState.autoFadeOutTime = this._attackState.fadeTotalTime;\n        this._attackState.addBoneMask(\"pelvis\");\n    }\n});\n\n\nvar DragonBullet = cc.Class({\n    name: 'DragonBullet',\n    _speedX : 0,\n    _speedY : 0,\n\n    _armature : null,\n    _armatureDisplay : null,\n    _effect : null,\n\n    init : function (parentNode, armature, effect, radian, speed, position) {\n        this._speedX = Math.cos(radian) * speed;\n        this._speedY = -Math.sin(radian) * speed;\n        var thePos = parentNode.convertToNodeSpace(position);\n\n        this._armature = armature;\n        this._armatureDisplay = this._armature.display;\n        this._armatureDisplay.setPosition(thePos);\n        this._armatureDisplay.rotation = radian * dragonBones.DragonBones.RADIAN_TO_ANGLE;\n        this._armature.animation.play(\"idle\");\n\n        if (effect) {\n            this._effect = effect;\n            var effectDisplay = this._effect.display;\n            effectDisplay.rotation = radian * dragonBones.DragonBones.RADIAN_TO_ANGLE;\n            effectDisplay.setPosition(thePos);\n            effectDisplay.scaleX = 1 + Math.random() * 1;\n            effectDisplay.scaleY = 1 + Math.random() * 0.5;\n            if (Math.random() < 0.5) {\n                effectDisplay.scaleY *= -1;\n            }\n\n            this._effect.animation.play(\"idle\");\n\n            dragonBones.WorldClock.clock.add(this._effect);\n            parentNode.addChild(effectDisplay);\n        }\n\n        dragonBones.WorldClock.clock.add(this._armature);\n        parentNode.addChild(this._armatureDisplay);\n    },\n\n    update : function() {\n        this._armatureDisplay.x += this._speedX;\n        this._armatureDisplay.y += this._speedY;\n\n        var worldPos = this._armatureDisplay.parent.convertToWorldSpace(this._armatureDisplay.getPosition());\n        if (\n            worldPos.x < -100 || worldPos.x >= cc.visibleRect.width + 100 ||\n            worldPos.y < -100 || worldPos.y >= cc.visibleRect.height + 100\n        ) {\n            this.doClean();\n            return true;\n        }\n\n        return false;\n    },\n\n    doClean : function() {\n        dragonBones.WorldClock.clock.remove(this._armature);\n        this._armatureDisplay.removeFromParent();\n        this._armature.dispose();\n\n        if (this._effect) {\n            dragonBones.WorldClock.clock.remove(this._effect);\n            this._effect.display.removeFromParent();\n            this._effect.dispose();\n        }\n    }\n});\n} // end of !cc.runtime\n","import PlayerData from './player-data'\nimport GameCtl from './game-ctl'\nconst Account = function () {\n    let that = {};\n    that.playerData = PlayerData();\n    that.gameCtl = GameCtl();\n    return that;\n};\nexport default Account;","import global from './../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        bgList: {\n            default: [],\n            type: cc.Node\n        },\n        bgSpeed: 0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {},\n    update(dt){\n\n        if (global.account.gameCtl.isRunning()){\n            // console.log('list = ' + this.bgList.length );\n            for (let i = 0 ; i < this.bgList.length ; i ++){\n                // this.bgList[i].position = cc.p(this.bgList[i].position.x - this.bgSpeed * dt * defines.timeScale, this.bgList[i].position.y);\n                this.bgList[i].x -= this.bgSpeed * dt * defines.timeScale;\n            }\n            for (let i = 0; i < this.bgList.length; i++) {\n                if (this.bgList[i].position.x < -this.bgList[i].width) {\n                    let index = i + 1;\n                    if (index > this.bgList.length - 1) {\n                        index = 0;\n                    }\n                    // this.bgList[i].position = cc.p(this.bgList[index].position.x + this.bgList[i].width, this.bgList[i].position.y);\n                    this.bgList[i].x = this.bgList[index].x + this.bgList[i].width;\n                }\n            }\n        }\n    }\n});\n","\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    onLoad(){\n        this.node.on('fly', ()=>{\n            console.log('硬币飞走');\n            let action = cc.bezierTo(0.4, [this.node.position,cc.p(this.node.position.x, this.node.position.y + 200), cc.p(-717,377)]);\n            this.node.runAction(cc.sequence(action, cc.callFunc(()=>{\n                this.node.dead = true;\n            })));\n            this.node.runAction(cc.scaleTo(0.4, 0.2,0.2));\n        });\n    },\n    onDestroy(){\n        console.log('销毁硬笔');\n    }\n});\n","import global from './../../global'\nconst AnimateState = {\n    invalid: -1,\n    default: 1,\n    idle: 2,\n    walk: 3,\n    run: 4,\n    jump: 5,\n    attack: 6\n};\ncc.Class({\n    extends: cc.Component,\n    editor: {\n        requireComponent: dragonBones.ArmatureDisplay\n    },\n\n    properties: {\n\n        defaultAnimate: \"\",\n        idleAnimate: \"\",\n        walkAnimate: \"\",\n        jumpAnimate: \"\",\n        attackAnimate: \"\"\n\n    },\n    onLoad: function () {\n        this._armatureDisplay = this.getComponent(dragonBones.ArmatureDisplay);\n        this._armature = this._armatureDisplay.armature();\n        // this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE, this.animateCompleteListener, this);\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE,this.animateCompleteListener, this);\n        dragonBones.WorldClock.clock.add(this._armature);\n        this.state = AnimateState.invalid;\n        this.node.parent.on('jump', (event)=>{\n            console.log('跳起来');\n            this.setState(AnimateState.jump);\n        });\n\n        this.node.parent.on('jump-end', ()=>{\n           console.log('跳起来结束' + this.oldState);\n           if (this.oldState === AnimateState.walk || this.oldState === AnimateState.default){\n               this.setState(AnimateState.walk);\n           }\n        });\n\n        this.node.parent.on('walk', (event)=>{\n            console.log('走路');\n            this.setState(AnimateState.walk);\n        });\n\n        this.node.parent.on('idle', (event)=>{\n            console.log('动画播放，idle');\n            this.animateSpeed = event.detail;\n            this.setState(AnimateState.idle);\n        });\n        this.node.parent.on('attack', (event)=>{\n            console.log('播放攻击动画');\n            this.setState(AnimateState.attack);\n        });\n\n        // this.node.parent.on('time-scale', ()=>{\n        //    //时间降低\n        //     console.log('时间 降低' + this._armatureDisplay.timeScale);\n        //     this._armatureDisplay.timeScale = 0;\n        // });\n\n        global.account.gameCtl.onRun(()=>{\n            this.setState(AnimateState.default);\n        });\n        this.setState(AnimateState.default);\n    },\n    animateFrameListener(){\n\n    },\n    animateCompleteListener(event){\n        console.log('播放动画完成');\n        console.log('event = ' + event.type);\n        // console.log('动作完成' + this.state);\n        // console.log('完成' + this.oldState);\n        // if (this.state === AnimateState.jump && this.oldState === AnimateState.walk){\n        //     console.log('重新跑起来');\n        //     this.setState(AnimateState.walk);\n        // }\n\n    },\n    idle: function () {\n    },\n    walk: function () {\n        this.setState(AnimateState.walk);\n    },\n    jump: function () {\n    },\n    attack: function () {\n    },\n    playAnimate: function (state) {\n\n    },\n    setState(state){\n        if (this.state === state){\n            return;\n        }\n        this.oldState = this.state;\n        switch (state){\n            case AnimateState.default:\n                this._armature.animation.fadeIn(this.defaultAnimate, 0.2,-1,0);\n                break;\n            case AnimateState.jump:\n\n                this._armature.animation.fadeIn(this.jumpAnimate, 0,1,0);\n                // setTimeout(()=>{\n                //     this.setState(AnimateState.walk);\n                // }, 300);\n                break;\n            case AnimateState.walk:\n\n                console.log('dragon bone walk');\n                this._armature.animation.fadeIn(this.walkAnimate, 0.2,-1,0);\n\n\n                break;\n            case AnimateState.run:\n                break;\n            case AnimateState.idle:\n                console.log('播放idle 动画');\n                this._armature.animation.fadeIn(this.idleAnimate, 0.2, -1, 0);\n\n                break;\n            case AnimateState.attack:\n                this._armature.animation.fadeIn(this.attackAnimate, 0, 1, 0);\n\n                break;\n            default:\n                break;\n        }\n\n        this.state = state;\n    },\n    update(dt){\n        this._armatureDisplay.timeScale = defines.timeScale;\n    }\n\n});\n","import global from './../../global'\nconst EnemyState = {\n    invalid: -1,\n    run: 1,\n    tipsBegan: 2,\n    tipsEnd: 3\n\n};\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n    onLoad(){\n\n        this.state = EnemyState.invalid;\n        this.setState(EnemyState.run);\n        this.node.on('fly', ()=>{\n            console.log('飞走');\n            let action1 = cc.bezierTo(1,[cc.p(78,9), cc.p(86,302), cc.p(418,319)]);\n            this.node.runAction(cc.sequence(action1, cc.callFunc(()=>{\n                this.node.dead = true;\n            })));\n            let raaction = cc.rotateTo(1, 360 * 4);\n            this.node.runAction(raaction);\n            this.setState(EnemyState.tipsEnd);\n            let scal1 = cc.scaleTo(1, 0.2, 0.2);\n            this.node.runAction(scal1);\n            this.node.isFly = true;\n\n        });\n\n    },\n    update(){\n        if (this.state === EnemyState.run){\n            if (this.node.position.x < cc.winSize.width * 0.35){\n                // global.account.gameCtl.pause();\n                // global.account.gameCtl.tipsBegan();\n                this.setState(EnemyState.tipsBegan);\n\n            }\n        }\n\n    },\n    setState(state){\n        if (this.state === state){\n            return\n        }\n        switch (state){\n            case EnemyState.tipsBegan:\n                global.account.gameCtl.tipsBegan();\n                break;\n            case EnemyState.tipsEnd:\n                break;\n            default:\n                break;\n        }\n        this.state = state;\n    },\n    onDestroy(){\n        console.log('销毁了敌人');\n    }\n});\n","const EventListener = function (obj) {\n    let Register = {};\n\n    obj.on = function (type, method) {\n        if (Register.hasOwnProperty(type)){\n            Register[type].push(method);\n        }else {\n            Register[type] = [method];\n        }\n    }\n    ;\n    obj.fire = function (type) {\n        if (Register.hasOwnProperty(type)){\n            let handlerList = Register[type];\n            for (let i = 0 ; i < handlerList.length; i ++){\n                let args = [];\n                for (let j = 1 ; j < arguments.length ; j ++){\n                    args.push(arguments[j]);\n                }\n                let handler = handlerList[i];\n                // console.log('args = ' + JSON.stringify(args));\n                handler.apply(this, args);\n            }\n        }\n    };\n\n\n    return obj;\n};\nexport default EventListener;","import EventListener from './../utility/event-listener'\nconst GameState = {\n    invalid: -1,\n    run: 1,\n    pause: 2,\n    resume: 3,\n    tipsBegan: 4\n};\nconst GameCtl = function () {\n    let that = {};\n    let _event = EventListener({});\n    let _state = GameState.invalid;\n    let _timeSpeed = undefined;\n    const setState = function (state, data) {\n        if (_state === state){\n            return\n        }\n        switch (state){\n            case GameState.run:\n                _event.fire('game-run');\n                break;\n            case GameState.pause:\n                _event.fire('game-pause');\n                break;\n            case GameState.resume:\n                _event.fire('game-resume');\n                break;\n            case GameState.tipsBegan:\n                _event.fire('tips-began', data);\n                _timeSpeed = - 0.02;\n\n                break;\n            default:\n                break;\n        }\n        _state = state;\n    };\n    that.pause = function () {\n        setState(GameState.pause);\n    };\n    that.run = function () {\n        setState(GameState.run);\n    };\n    that.resume = function () {\n        setState(GameState.resume);\n    };\n\n\n    that.tipsBegan = function (data) {\n        //开始答题\n        setState(GameState.tipsBegan, data);\n    };\n    that.tipsEnd = function (data) {\n        console.log('tips end = ' + JSON.stringify(data));\n        _event.fire('tips-end', data);\n        defines.timeScale = 1;\n        setState(GameState.resume);\n    };\n\n\n    that.attackEnd = function () {\n        //玩家攻击结束\n        _event.fire('attack-end');\n    };\n\n    that.onAttackEnd = function (method) {\n        _event.on('attack-end', method)\n    };\n\n\n    that.onTipsBegan = function (method) {\n      //开始答题\n        console.log('开始答题');\n        _event.on('tips-began', method);\n\n        //时间变慢\n\n\n    };\n    that.onTipsEnd = function (method) {\n        _event.on('tips-end', method);\n    };\n\n\n    that.isRunning = function () {\n        if (_state === GameState.run || _state === GameState.resume || _state === GameState.tipsBegan){\n            return true;\n        }\n        return false;\n    };\n\n    that.onPause = function (method) {\n        _event.on('game-pause', method);\n    };\n    that.onRun = function (method) {\n        _event.on('game-run', method);\n    };\n    that.onResume = function (method) {\n        _event.on('game-resume', method);\n    };\n    that.onTimeScale = function (method) {\n        _event.on('time-scale', method);\n    };\n\n    that.update = function (dt) {\n        if (_timeSpeed !== undefined ){\n            defines.timeScale += _timeSpeed;\n            if (defines.timeScale < 0.05){\n                defines.timeScale = 0.05;\n                _timeSpeed = undefined;\n            }\n        }\n    };\n\n\n    return that;\n};\nexport default GameCtl;","\nimport global from './../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        playerNode: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // let collisionManager = new cc.director.getCollisionManager();\n        // collisionManager.enabled = true;\n        // collisionManager.enabledDrawBoundingBox = true;\n        // collisionManager.enabledDebugDraw = true;\n        // console.log('画出来彭状体0');\n        cc.director.getCollisionManager().enabled = true;\n        // cc.director.getCollisionManager().enabledDebugDraw = true;\n        console.log('enter animate');\n        this.playerNode.emit('walk');\n        let action = cc.moveTo(1, cc.p(this.playerNode.position.x + 400, this.playerNode.position.y));\n        this.playerNode.runAction(cc.sequence(action, cc.callFunc(()=>{console.log('开始游戏');\n            global.account.gameCtl.run();\n        })));\n    },\n\n    start () {\n\n\n    },\n    update(dt){\n        global.account.gameCtl.update(dt);\n    }\n});\n","import Account from './data/account'\nconst global = {};\nglobal.account = Account();\nexport default global","\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        accY: 0,\n        jumpSpeed: 0,\n    },\n    onLoad(){\n        this.node.on('jump', this.jump.bind(this));\n        this.initPosY = this.node.position.y;\n        this.timeSubSpeed = 0;\n    },\n    jump(){\n        if (this.speedY === undefined){\n            this.speedY = this.jumpSpeed;\n        }\n    },\n    update: function (dt) {\n        if (this.speedY !== undefined){\n            this.node.position = cc.p(this.node.position.x, this.node.position.y + this.speedY * dt * defines.timeScale);\n            this.speedY += (this.accY * dt * defines.timeScale);\n        }\n        if (this.node.position.y <= this.initPosY && this.speedY !== undefined){\n            this.node.position = cc.p(this.node.position.x, this.initPosY);\n            this.speedY = undefined;\n            console.log('落地');\n            this.node.emit('jump-end');\n        }\n\n        // if (defines.timeScale > 0.1 && this.timeSubSpeed !== 0){\n        //     defines.timeScale += this.timeSubSpeed;\n        //     setTimeout(()=> {\n        //         defines.timeScale = 1;\n        //         this.timeSubSpeed = 0;\n        //     }, 1000);\n        // }\n\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n       progress: 0\n    },\n    onLoad(){\n\n        this.currentWidth = this.node.width;\n\n    },\n    update(){\n        this.node.width = this.currentWidth * this.progress;\n    },\n    setProgress(progress){\n        // console.log('progress = ' + progress);\n        this.progress = progress;\n    }\n}\n);\n","const TitleType = {\n    'say': 1,\n    'listen': 2\n};\n\nconst Title = function () {\n\n};\nlet PlayerData = function () {\n    let that = {};\n    that.titleList = [];\n    that.goldCount = 0;\n    that.gameData = ['word1', 'word2', 'word3', 'word4', 'word5', 'word6', 'word7', 'word8', 'word9', 'word10','word11', 'word12', 'word13', 'word14', 'word15'];\n    that.initTitle = function (data) {\n        for (let i = 0 ; i < data.length ; i ++){\n            \n        }\n    };\n    that.initTitle(that.gameData);\n    return that;\n};\nexport default PlayerData;\n","// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\nimport global from './../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        body: {\n            default: null,\n            type: cc.Node\n        },\n        jumpAudio:cc.AudioClip,\n        attackAudio:cc.AudioClip,\n        eatAudio:cc.AudioClip\n    },\n\n    onLoad(){\n        // this.node.on('jump', ()=>{\n        //     this.body.emit('jump');\n        // });\n        global.account.gameCtl.onTipsBegan(()=>{\n           //游戏暂停注册\n            console.log('游戏暂停');\n            // this.node.emit('idle');\n            // this.node.emit('time-scale');\n\n        });\n        global.account.gameCtl.onTipsEnd((data)=>{\n            console.log('答题结束' + JSON.stringify(data));\n            this.tipsResult = data.result;\n            this.node.emit('attack');\n        });\n        this.node.zIndex = 1;\n        this.node.on('jump', this.onJump.bind(this));\n    },\n    start(){\n        \n    },\n\n    onJump(event){\n        console.log(\"on jump\");\n        let com=this.node.getComponent(\"jump\");\n        cc.audioEngine.play(this.jumpAudio,false,1);\n    },\n\n    onCollisionEnter: function (other, self) {\n        // console.log('on collision enter');\n        // other.node.removeComponent(cc.BoxCollider);\n        //开始碰撞\n        if (this.tipsResult === 'success'){\n            // this.tipsResult = undefined;\n            if (other.getComponent('enemy')){\n                cc.audioEngine.play(this.attackAudio,false,1);\n                other.node.emit('fly');\n                // this.node.emit('walk');\n                // setTimeout(()=>{\n                //     this.node.emit('walk');\n                // },200);\n                this.node.emit('walk');\n                global.account.gameCtl.attackEnd();\n            }\n        }\n\n        if (other.getComponent('coin')){\n            cc.audioEngine.play(this.eatAudio,false,1);\n            other.node.emit('fly');\n            global.account.playerData.goldCount ++;\n        }\n\n    },\n    onCollisionStay: function (other, self) {\n        // console.log('on collision stay');\n    },\n    onCollisionExit: function (other, self) {\n        // console.log('on collision exit');\n    },\n\n\n    start () {\n\n    }\n});\n","\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        gameNode: {\n            default: null,\n            type: cc.Node\n        },\n        stubPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        prizePrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        enemyPrefabList: {\n            default: [],\n            type: cc.Prefab\n        },\n        stubSpeedX: 0,\n        initPosNode: {\n            default: null,\n            type: cc.Node\n        },\n        initPrizePosNode: {\n            default: null,\n            type: cc.Node\n        }\n    },\n    onLoad(){\n        this.stubList = [];\n\n        this.addStubIndex = 0;\n\n        this.prizeList = [];\n\n        this.enemyList = [];\n\n\n        this.coinList = [];\n\n        this.addStub();\n\n\n        //\n        this.addCoinFlag = 0;\n\n\n        this.addCoinFlagDurection = 4;\n\n\n        this.addCoinDurection = 0;\n\n    },\n    update(dt){\n        // for (let i = 0 ; i < this.stubList.length ; i ++){\n        //     let stub = this.stubList[i];\n        //     stub.position = cc.p(stub.position.x - this.stubSpeedX * dt * defines.timeScale,stub.position.y);\n        // }\n        // for (let i = 0 ; i < this.stubList.length ; i ++){\n        //     let stub = this.stubList[i];\n        //     if (stub.position.x + stub.width * 0.5 < cc.winSize.width * -0.5){\n        //         this.stubList.splice(i, 1);\n        //         stub.destroy();\n        //     }\n        //     // if (stub.isFly){\n        //     //     this.stubList.splice(i, 1);\n        //     // }\n        // }\n\n\n        for (let i = 0 ; i < this.stubList.length ; i ++){\n            let enemy = this.stubList[i];\n            if (enemy.dead === true){\n                this.stubList.splice(i, 1);\n                enemy.destroy();\n            }\n            // if (this.stubList[i].dead === true){\n            //     this.stubList.splice(i, 1);\n            //\n            // }\n        }\n\n\n        for (let i = 0 ;i < this.coinList.length ; i ++){\n            let coin = this.coinList[i];\n            if (coin.dead){\n                this.coinList.splice(i, 1);\n                coin.destroy();\n            }\n        }\n\n\n        if (this.stubList.length !== 0 && this.stubList[this.stubList.length - 1].position.x < cc.winSize.width * 0.2){\n            if (this.addStubIndex === 3){\n                this.addStubIndex = 0;\n                this.addEnemy();\n            }else {\n                this.addStub();\n                // if (Math.floor(Math.random() * 3) === 0){\n                //     // this.addPrize();\n                // }\n            }\n        }\n\n\n        this.addCoinFlagDurection -= dt;\n        if (this.addCoinFlagDurection <=0 && this.addCoinFlag === 0){\n            this.addCoinFlagDurection = 4;\n            this.addCoinFlag = Math.floor(Math.random() * 3 + 2);\n        }\n        if (this.addCoinFlag > 0){\n            if (this.coinList.length === 0 ){\n                this.addCoin();\n            }else {\n                if ((this.initPrizePosNode.position.x - this.coinList[this.coinList.length - 1].position.x ) > 300){\n                    this.addCoin();\n                }\n            }\n        }\n\n\n\n\n        //\n        // console.log('stub = ' + this.stubList.length);\n    },\n    addCoin(){\n        this.addCoinFlag --;\n        let coin = this.createStub(this.initPrizePosNode, this.prizePrefab);\n        coin.zIndex = 2;\n        this.coinList.push(coin);\n    },\n    addStub(){\n        // let stub = cc.instantiate(this.stubPrefab);\n        // stub.parent = this.gameNode;\n        // stub.position = this.initPosNode.position;\n        let stub = this.createStub(this.initPosNode, this.stubPrefab);\n        this.stubList.push(stub);\n        this.addStubIndex ++;\n    },\n    addPrize(){\n        let stub = this.createStub(this.initPrizePosNode, this.prizePrefab);\n        stub.zIndex = 2;\n        this.prizeList.push(stub);\n    },\n    addEnemy(){\n        let enemy = this.createStub(this.initPosNode, this.enemyPrefabList[0]);\n        enemy.emit('init-manager', this);\n        // this.enemyList.push(enemy);\n        // console.log('add enemy');\n        this.stubList.push(enemy);\n    },\n    createStub(initPos, prefab){\n        let stub = cc.instantiate(prefab);\n        stub.zIndex = 0;\n        stub.parent = this.gameNode;\n        stub.position = initPos.position;\n        if (stub.getComponent('stub')){\n            stub.getComponent('stub').initWithData({speed: this.stubSpeedX});\n        }\n        return stub\n    }\n\n});\n","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stubSpriteFrameList: {\n            default: [],\n            type: cc.SpriteFrame\n        }\n    },\n    initWithData: function (data) {\n        this.speedX = data.speed;\n    },\n    onLoad(){\n        if (this.stubSpriteFrameList.length !== 0){\n            this.addComponent(cc.Sprite).spriteFrame = this.stubSpriteFrameList[0];\n            let collider = this.node.addComponent(cc.BoxCollider);\n            collider.size = cc.size(this.node.width, this.node.height);\n        }\n        this.node.on('fly', ()=>{\n            this.fly = true;\n            console.log('飞走了');\n        });\n\n\n    },\n    update(dt){\n        if (global.account.gameCtl.isRunning()){\n            if (this.speedX && this.fly === undefined){\n                this.node.position = cc.p(this.node.position.x - this.speedX * dt * defines.timeScale, this.node.position.y);\n            }\n        }\n\n        if ((this.node.position.x + this.node.width * 0.5) < cc.winSize.width * -0.5){\n            this.node.dead = true;\n        }\n\n    },\n    onDestroy(){\n        console.log('销毁障碍物');\n    }\n});\n","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        timeCutDownLabel: {\n            default: null,\n            type: cc.Label\n        },\n        resultLabel: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    onLoad(){\n        global.account.gameCtl.onTipsBegan((data)=> {\n            console.log('开始答题了' + JSON.stringify(data));\n            this.node.active = true;\n            this.timeCutDown = 4;\n        });\n\n        global.account.gameCtl.onTipsEnd(()=>{\n            this.node.active = false;\n        });\n\n\n    },\n\n    start () {\n        this.node.active = false;\n\n    },\n    update(dt){\n        if (this.timeCutDown > 0){\n            this.timeCutDown -= dt;\n            if (this.timeCutDown <= 0){\n                this.timeCutDown = 0;\n                this.resultLabel.string = '真棒!';\n                setTimeout(()=>{\n                    this.resultLabel.string = '';\n                }, 1000);\n                global.account.gameCtl.tipsEnd({\n                    result: 'success'\n                })\n            }\n            this.timeCutDownLabel.string = Math.floor(this.timeCutDown) + '';\n\n        }\n    }\n});\n","import global from './../global'\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        totalTime: 0,\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        runProgress: {\n            default: null,\n            type: cc.Node\n        },\n        upButton: {\n            default: null,\n            type: cc.Node\n        },\n        runButton: {\n            default: null,\n            type: cc.Node\n        },\n        coinCountLabel: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n\n    onLoad() {\n        this.currentTime = 0;\n        // global.account.gameCtl.onPause(()=>{\n        //    //游戏暂停\n        //    this.upButton.opacity = 100;\n        //    this.runButton.opacity = 100;\n        // });\n        global.account.gameCtl.onTipsBegan((data) => {\n            console.log('开始答题 = ' + JSON.stringify(data));\n            this.upButton.opacity = 100;\n            this.runButton.opacity = 100;\n        });\n        // global.account.gameCtl.onTipsEnd((data)=>{\n        //     console.log('答题结束' + JSON.stringify(data));\n        //     this.upButton.opacity = 255;\n        //     this.runButton.opacity = 255;\n        // });\n        global.account.gameCtl.onAttackEnd(() => {\n            //玩家攻击结束\n            this.upButton.opacity = 255;\n            this.runButton.opacity = 255;\n        });\n    },\n    onButtonClick: function (event, customData) {\n        switch (customData) {\n            case 'up-button':\n                //上按钮\n                if (this.upButton.opacity === 255) {\n                    this.player.emit('jump');\n                }\n                break;\n            case 'run-button':\n                if (this.runButton.opacity === 255) {\n                    console.log('run button');\n                }\n                break;\n            default:\n                break;\n        }\n    },\n    update(dt) {\n        this.currentTime += dt;\n        this.runProgress.getComponent('mask-progress').setProgress((this.totalTime - this.currentTime) / this.totalTime);\n        this.coinCountLabel.string = global.account.playerData.goldCount + '';\n    }\n\n\n});\n"],"sourceRoot":"/source/","file":"project.dev.js"}