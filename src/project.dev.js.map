{"version":3,"sources":["assets/scripts/game/component/DragonBonesCtrl.js","assets/scripts/data/account.js","assets/scripts/game/prefab/coin.js","assets/scripts/game/component/dargon-bone-ctl.js","assets/scripts/game/component/distance-node.js","assets/scripts/game/prefab/enemy.js","assets/scripts/utility/event-listener.js","assets/scripts/data/game-ctl.js","assets/scripts/game/game.js","assets/scripts/global.js","assets/scripts/game/component/jump.js","assets/scripts/main.js","assets/scripts/game/prefab/pauseLayer.js","assets/scripts/data/player-data.js","assets/scripts/game/player.js","assets/scripts/utility/pool-manager.js","assets/scripts/utility/resources-manager.js","assets/scripts/game/component/scroll-once.js","assets/scripts/game/component/scroll.js","assets/scripts/game/stub-controller.js","assets/scripts/game/prefab/stub-tag.js","assets/scripts/game/component/stub.js","assets/scripts/game/ui-controller.js","assets/scripts/game/ui_question_layer.js"],"names":["cc","runtime","NORMAL_ANIMATION_GROUP","AIM_ANIMATION_GROUP","ATTACK_ANIMATION_GROUP","JUMP_SPEED","NORMALIZE_MOVE_SPEED","MAX_MOVE_SPEED_FRONT","MAX_MOVE_SPEED_BACK","WEAPON_R_LIST","WEAPON_L_LIST","GROUND","G","Class","extends","Component","editor","requireComponent","dragonBones","ArmatureDisplay","properties","touchHandler","default","type","Node","upButton","downButton","leftButton","rightButton","_bullets","_left","_right","_isJumpingA","_isJumpingB","_isSquating","_isAttackingA","_isAttackingB","_weaponRIndex","_weaponLIndex","_faceDir","_aimDir","_moveDir","_aimRadian","_speedX","_speedY","_armature","_armatureDisplay","_weaponR","_weaponL","_aimState","_walkState","_attackState","_target","p","onLoad","_this","this","getComponent","armature","addEventListener","EventObject","FADE_IN_COMPLETE","_animationEventHandler","FADE_OUT_COMPLETE","getSlot","displayController","childArmature","FRAME_EVENT","_frameEventHandler","_updateAnimation","WorldClock","clock","add","on","EventType","TOUCH_START","event","attack","TOUCH_END","TOUCH_MOVE","touches","getTouches","touchLoc","getLocation","aim","x","y","jump","squat","TOUCH_CANCEL","_updateMove","eventManager","addListener","EventListener","KEYBOARD","onKeyPressed","keyCode","_keyHandler","onKeyReleased","node","isDown","KEY","a","left","d","right","w","up","s","down","q","switchWeaponR","e","switchWeaponL","space","dir","move","animation","fadeIn","isSquating","isAttacking","removeEventListener","length","newWeaponName","buildArmature","parent","convertToNodeSpaceAR","update","dt","_updatePosition","_updateAim","_updateAttack","_enterFrameHandler","onDisable","i","bullet","doClean","remove","addBullet","push","splice","advanceTime","detail","animationState","name","firePointBone","getBone","localPoint","global","display","globalPoint","convertToWorldSpace","_fire","firePoint","timeScale","minX","visibleRect","width","maxX","scaleX","aimOffsetY","scaleY","Math","atan2","PI","aimDir","AnimationFadeOutMode","SameGroup","weight","abs","autoFadeOutTime","fadeTotalTime","addBoneMask","DragonBullet","_effect","init","parentNode","effect","radian","speed","position","cos","sin","thePos","convertToNodeSpace","setPosition","rotation","DragonBones","RADIAN_TO_ANGLE","play","effectDisplay","random","addChild","worldPos","getPosition","height","removeFromParent","dispose","_playerData","require","_gameCtl","Account","that","playerData","_playerData2","gameCtl","_gameCtl2","exports","_global","initPos","dead","actionFlyToPlayer","moveTo","flying","action","bezierTo","runAction","sequence","callFunc","console","log","scaleTo","Animation","pause","resume","onEnable","scale","onDestroy","_global2","account","state","GameState","quick","AnimateState","invalid","idle","walk","run","defaultAnimate","idleAnimate","walkAnimate","jumpAnimate","attackAnimate","happyWalkAnimate","angryWalkAnimate","saidWalkAnimate","displayTimeScale","animateCompleteListener","setState","oldState","animateSpeed","onRun","animateFrameListener","playAnimate","numSpriteFrameList","SpriteFrame","mileIcon","numNodeMap","setNumber","value","str","char","hasOwnProperty","Sprite","spriteFrame","sp","addComponent","EnemyState","tipsBegan","tipsEnd","body","animationName","parseInt","playAnimation","action1","rotateTo","scal1","finished","spawn","BoxCollider","enabled","isFly","isQuick","dis","pDistance","playerNode","player","speedX","speeds","speedLevel","animationScale","emit","obj","Register","method","fire","handlerList","args","j","arguments","handler","apply","removeAllListeners","_eventListener","endScene","window","GameCtl","_event","_eventListener2","_state","_timeSpeed","undefined","_distance","_distanceTimeCount","data","JSON","stringify","defines","qucikEnd","onQuickEnd","attackEnd","onQuick","onAttackEnd","onTipsBegan","onTipsEnd","isRunning","onPause","onResume","onTimeScale","onDistanceChange","_sceneList","_currentScene","_currentSceneIndex","goldCount","distance","passedTime","_loadScene","director","loadScene","err","scene","error","start","opt","getSceneIndex","nextScene","uiNode","self","size","view","getFrameSize","getCollisionManager","onAnimationFinished","bind","resList","config","resourcesManager","loadList","setTimeout","_account","_resourcesManager","_poolManager","_account2","_resourcesManager2","poolManager","_poolManager2","accY","jumpSpeed","oldAccY","oldJumpSpeed","currentLevel","initPosY","timeSubSpeed","speedY","playJumpSound","sound","playedSound","audioEngine","onEnterGameClicked","onButtonClick","customData","destroy","resumeAll","TitleType","say","listen","Title","PlayerData","titleList","sceneDistance","power","questions","answer_index","word","image_urls","image_url","questionIndex","car","jumpAudio","AudioClip","attackAudio","eatAudio","beAttacked","auCar","Float","distanceCurrentScene","superPowerDuration","superSpeed","passedTimeSuper","backgroundMusic","enterSuperMode","tipsResult","result","zIndex","onJump","getNowSpeed","com","onCollisionEnter","other","min","changeSpeed","max","animate","newSpeed","maxLevel","speedValue","active","carAudiosID","exitSuperMode","stop","PoolManager","PoolResources","PrefabResources","createPool","prefab","count","NodePool","c","instantiate","put","getNode","get","putNode","ResourcesManager","resources","load","resPath","cb","loader","loadRes","res","loadIndex","loadCb","bgList","bgSpeed","speedOffset","bgType","speedScaleRate","item","shift","lastItem","terrainPrefabs","Prefab","ratesShowTerrain","activeEnemies","wordEnemies","superModeTerrain","distanceAddTerrain","durationAddEnemy","durationAddWordEnemy","durationAddSuperTerrain","initPosNodeTerrain","initPosNodeActiveEnemy","passedTimeForTerrain","passedTimeForEnemy","passedTimeForWordEnemy","passedTimeForSuper","sceneIndex","terrains","prefabs","randTerrain","terrainList","rateList","v","ret","addWordEnemy","terrain","_id","addTerrain","addActiveEnemy","enemy","lastTerrain","children","enable","stubSpriteFrameList","initWithData","oldSpeedX","fly","collider","winSize","totalTime","progressTime","ProgressBar","processTimeSprite","btnJump","progressSpeed","labelCoinCount","Label","labelDistance","progressSuperPower","pauseLayer","particle","string","progress","Button","opacity","runButton","isCanRun","passedPixel","code","enter","onPauseClicked","pauseAll","timeCutDownLabel","resultLabel","labelTip","labelWord","spAnswerList","spReadImage","auCardIn","auSuccess","nodeChoose","nodeRead","getQuestion","list","changeImageTexture","imageSprite","url","texture","textureCache","getTextureForKey","clearTexture","setTexture","showQuestion","question","sprite","items","map","content","addImage","onUiAnimationFinished","timeCutDown","hideQuestion","indexOf","floor","onChooseAnswerClicked"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IACA,KAAAA,GAAAC,SAAA;MAGA,IAAAC,yBAAA;MACA,IAAAC,sBAAA;MACA,IAAAC,yBAAA;MACA,IAAAC,cAAA;MACA,IAAAC,uBAAA;MACA,IAAAC,uBAAA,MAAAD;MACA,IAAAE,sBAAA,IAAAF;MACA,IAAAG,kBAAA,kBAAA,eAAA,gBAAA,gBAAA,gBAAA;MACA,IAAAC,kBAAA,kBAAA,eAAA,gBAAA,gBAAA;MACA,IAAAC,UAAA;MACA,IAAAC,KAAA;MAEAZ,GAAAa;QACIC,SAAAd,GAAAe;QACAC;UACIC,kBAAAC,YAAAC;;QAGJC;UACIC;YACIC,SAAA;YACAC,MAAAvB,GAAAwB;;UAGJC;YACIH,SAAA;YACAC,MAAAvB,GAAAwB;;UAGJE;YACIJ,SAAA;YACAC,MAAAvB,GAAAwB;;UAGJG;YACIL,SAAA;YACAC,MAAAvB,GAAAwB;;UAGJI;YACIN,SAAA;YACAC,MAAAvB,GAAAwB;;UAGJK;UACAC,OAAA;UACAC,QAAA;UACAC,aAAA;UACAC,aAAA;UACAC,aAAA;UACAC,eAAA;UACAC,eAAA;UACAC,eAAA;UACAC,eAAA;UACAC,UAAA;UACAC,SAAA;UACAC,UAAA;UACAC,YAAA;UACAC,SAAA;UACAC,SAAA;UACAC,WAAA;UACAC,kBAAA;UACAC,UAAA;UACAC,UAAA;UACAC,WAAA;UACAC,YAAA;UACAC,cAAA;UACAC,SAAApD,GAAAqD,EAAA,GAAA;;QAIJC,QAAA,SAAAA;UAAoB,IAAAC,QAAAC;UAChBA,KAAAV,mBAAAU,KAAAC,aAAAvC,YAAAC;UACAqC,KAAAX,YAAAW,KAAAV,iBAAAY;UAEAF,KAAAV,iBAAAa,iBAAAzC,YAAA0C,YAAAC,kBAAAL,KAAAM,wBAAAN;UACAA,KAAAV,iBAAAa,iBAAAzC,YAAA0C,YAAAG,mBAAAP,KAAAM,wBAAAN;UAEAA,KAAAX,UAAAmB,QAAA,aAAAC,oBAAA/D;UACAsD,KAAAX,UAAAmB,QAAA,aAAAC,oBAAA/D;UAEAsD,KAAAT,WAAAS,KAAAX,UAAAmB,QAAA,YAAAE;UACAV,KAAAR,WAAAQ,KAAAX,UAAAmB,QAAA,YAAAE;UACAV,KAAAT,SAAAY,iBAAAzC,YAAA0C,YAAAO,aAAAX,KAAAY,oBAAAZ;UACAA,KAAAR,SAAAW,iBAAAzC,YAAA0C,YAAAO,aAAAX,KAAAY,oBAAAZ;UAEAA,KAAAa;UACAnD,YAAAoD,WAAAC,MAAAC,IAAAhB,KAAAX;UAEA,IAAAW,KAAAnC,cAAA;YAEImC,KAAAnC,aAAAoD,GAAAzE,GAAAwB,KAAAkD,UAAAC,aAAA,SAAAC;cACIrB,MAAAsB,OAAA;eACHrB;YACDA,KAAAnC,aAAAoD,GAAAzE,GAAAwB,KAAAkD,UAAAI,WAAA,SAAAF;cACIrB,MAAAsB,OAAA;eACHrB;YACDA,KAAAnC,aAAAoD,GAAAzE,GAAAwB,KAAAkD,UAAAK,YAAA,SAAAH;cACI,IAAAI,UAAAJ,MAAAK;cACA,IAAAC,WAAAF,QAAA,GAAAG;cACA5B,MAAA6B,IAAAF,SAAAG,GAAAH,SAAAI;eACH9B;;UAGLA,KAAA/B,YACI+B,KAAA/B,SAAAgD,GAAAzE,GAAAwB,KAAAkD,UAAAC,aAAA,SAAAC;YACIrB,MAAAgC;aACH/B;UAGL,IAAAA,KAAA9B,YAAA;YACI8B,KAAA9B,WAAA+C,GAAAzE,GAAAwB,KAAAkD,UAAAC,aAAA,SAAAC;cACIrB,MAAAiC,MAAA;eACHhC;YACDA,KAAA9B,WAAA+C,GAAAzE,GAAAwB,KAAAkD,UAAAI,WAAA,SAAAF;cACIrB,MAAAiC,MAAA;eACHhC;YACDA,KAAA9B,WAAA+C,GAAAzE,GAAAwB,KAAAkD,UAAAe,cAAA,SAAAb;cACIrB,MAAAiC,MAAA;eACHhC;;UAGL,IAAAA,KAAA7B,YAAA;YACI6B,KAAA7B,WAAA8C,GAAAzE,GAAAwB,KAAAkD,UAAAC,aAAA,SAAAC;cACIrB,MAAAzB,QAAA;cACAyB,MAAAmC,aAAA;eACHlC;YACDA,KAAA7B,WAAA8C,GAAAzE,GAAAwB,KAAAkD,UAAAI,WAAA,SAAAF;cACIrB,MAAAzB,QAAA;cACAyB,MAAAmC,aAAA;eACHlC;YACDA,KAAA7B,WAAA8C,GAAAzE,GAAAwB,KAAAkD,UAAAe,cAAA,SAAAb;cACIrB,MAAAzB,QAAA;cACAyB,MAAAmC,aAAA;eACHlC;;UAGL,IAAAA,KAAA5B,aAAA;YACI4B,KAAA5B,YAAA6C,GAAAzE,GAAAwB,KAAAkD,UAAAC,aAAA,SAAAC;cACIrB,MAAAxB,SAAA;cACAwB,MAAAmC,YAAA;eACHlC;YACDA,KAAA5B,YAAA6C,GAAAzE,GAAAwB,KAAAkD,UAAAI,WAAA,SAAAF;cACIrB,MAAAxB,SAAA;cACAwB,MAAAmC,YAAA;eACHlC;YACDA,KAAA5B,YAAA6C,GAAAzE,GAAAwB,KAAAkD,UAAAe,cAAA,SAAAb;cACIrB,MAAAxB,SAAA;cACAwB,MAAAmC,YAAA;eACHlC;;UAILxD,GAAA2F,aAAAC;YACIhB,OAAA5E,GAAA6F,cAAAC;YACAC,cAAA,SAAAA,aAAAC,SAAApB;cACIrB,MAAA0C,YAAAD,SAAA;;YAEJE,eAAA,SAAAA,cAAAF,SAAApB;cACIrB,MAAA0C,YAAAD,SAAA;;aANoBxC,KAAA2C;;QAWhCF,aAAA,SAAAA,YAAAD,SAAAI;UACI,QAAAJ;WACI,KAAAhG,GAAAqG,IAAAC;WACA,KAAAtG,GAAAqG,IAAAE;YACI/C,KAAA1B,QAAAsE;YACA5C,KAAAkC,aAAA;YACA;;WACJ,KAAA1F,GAAAqG,IAAAG;WACA,KAAAxG,GAAAqG,IAAAI;YACIjD,KAAAzB,SAAAqE;YACA5C,KAAAkC,YAAA;YACA;;WACJ,KAAA1F,GAAAqG,IAAAK;WACA,KAAA1G,GAAAqG,IAAAM;YACIP,UACI5C,KAAA+B;YAEJ;;WACJ,KAAAvF,GAAAqG,IAAAO;WACA,KAAA5G,GAAAqG,IAAAQ;YACIrD,KAAAgC,MAAAY;YACA;;WACJ,KAAApG,GAAAqG,IAAAS;YACIV,UACI5C,KAAAuD;YAEJ;;WACJ,KAAA/G,GAAAqG,IAAAW;YACIZ,UACI5C,KAAAyD;YAEJ;;WACJ,KAAAjH,GAAAqG,IAAAa;YACI,IAAAd,QAAA;cACI5C,KAAAuD;cACAvD,KAAAyD;;YAEJ;;WACJ;YACI;;;QAIZvB,aAAA,SAAAA,YAAAyB;UACI3D,KAAA1B,SAAA0B,KAAAzB,SACIyB,KAAA4D,KAAAD,OACH3D,KAAA1B,QACG0B,KAAA4D,MAAA,KACH5D,KAAAzB,SACGyB,KAAA4D,KAAA,KAEA5D,KAAA4D,KAAA;;QAIRA,MAAA,SAAAA,KAAAD;UACI,IAAA3D,KAAAf,aAAA0E,KACI;UAGJ3D,KAAAf,WAAA0E;UACA3D,KAAAa;;QAGJkB,MAAA,SAAAA;UACI,IAAA/B,KAAAxB,aACI;UAGJwB,KAAAxB,cAAA;UACAwB,KAAAX,UAAAwE,UAAAC,OAAA,WAAA,IAAA,GAAA,GAAApH;UACAsD,KAAAN,aAAA;;QAGJsC,OAAA,SAAAA,MAAA+B;UACI,IAAA/D,KAAAtB,gBAAAqF,YACI;UAGJ/D,KAAAtB,cAAAqF;UACA/D,KAAAa;;QAGJQ,QAAA,SAAAA,OAAA2C;UACI,IAAAhE,KAAArB,iBAAAqF,aACI;UAGJhE,KAAArB,gBAAAqF;;QAGJP,eAAA,SAAAA;UACIzD,KAAAR,SAAAyE,oBAAAvG,YAAA0C,YAAAO,aAAAX,KAAAY,oBAAAZ;UAEAA,KAAAlB,iBAAAkB,KAAAlB,gBAAA,KAAA5B,cAAAgH;UACA,IAAAC,gBAAAjH,cAAA8C,KAAAlB;UACAkB,KAAAR,WAAAQ,KAAAV,iBAAA8E,cAAAD;UACAnE,KAAAX,UAAAmB,QAAA,YAAAE,gBAAAV,KAAAR;UAEAQ,KAAAR,SAAAW,iBAAAzC,YAAA0C,YAAAO,aAAAX,KAAAY,oBAAAZ;;QAGJuD,eAAA,SAAAA;UACIvD,KAAAT,SAAA0E,oBAAAvG,YAAA0C,YAAAO,aAAAX,KAAAY,oBAAAZ;UAEAA,KAAAnB,iBAAAmB,KAAAnB,gBAAA,KAAA5B,cAAAiH;UACA,IAAAC,gBAAAlH,cAAA+C,KAAAnB;UACAmB,KAAAT,WAAAS,KAAAV,iBAAA8E,cAAAD;UACAnE,KAAAX,UAAAmB,QAAA,YAAAE,gBAAAV,KAAAT;UAEAS,KAAAT,SAAAY,iBAAAzC,YAAA0C,YAAAO,aAAAX,KAAAY,oBAAAZ;;QAGJ4B,KAAA,SAAAA,IAAAC,GAAAC;UAMI9B,KAAAhB,UAAA;UAEAgB,KAAAJ,UAAAI,KAAA2C,KAAA0B,OAAAC,qBAAA9H,GAAAqD,EAAAgC,GAAAC;;QAGJyC,QAAA,SAAAA,OAAAC;UACIxE,KAAAyE;UACAzE,KAAA0E;UACA1E,KAAA2E;UACA3E,KAAA4E,mBAAAJ;;QAGJK,WAAA,SAAAA;UAEI,KAAA,IAAAC,IAAA9E,KAAA3B,SAAA6F,SAAA,GAAAY,KAAA,GAAAA,KAAA;YAEI,IAAAC,SAAA/E,KAAA3B,SAAAyG;YACAC,OAAAC;;UAEJhF,KAAA3B;UAEA2B,KAAAX,aAEI3B,YAAAoD,WAAAC,MAAAkE,OAAAjF,KAAAX;;QAIR6F,WAAA,SAAAA,UAAAH;UACI/E,KAAA3B,SAAA8G,KAAAJ;;QAGJH,oBAAA,SAAAA,mBAAAJ;UACI,KAAA,IAAAM,IAAA9E,KAAA3B,SAAA6F,SAAA,GAAAY,KAAA,GAAAA,KAAA;YAEI,IAAAC,SAAA/E,KAAA3B,SAAAyG;YACAC,OAAAR,YAEIvE,KAAA3B,SAAA+G,OAAAN,GAAA;;UAGRpH,YAAAoD,WAAAC,MAAAsE,YAAAb;;QAGJlE,wBAAA,SAAAA,uBAAAc;UACI,IAAAA,MAAArD,SAAAL,YAAA0C,YAAAC,kBACI,IAAA,aAAAe,MAAAkE,OAAAC,eAAAC,MAAA;YACIxF,KAAAvB,cAAA;YACAuB,KAAAZ,WAAAvC;YACAmD,KAAAX,UAAAwE,UAAAC,OAAA,WAAA,IAAA,GAAA,GAAApH;iBACH,aAAA0E,MAAAkE,OAAAC,eAAAC,QACGxF,KAAAa,yBAEP,IAAAO,MAAArD,SAAAL,YAAA0C,YAAAG,qBAEG,gBAAAa,MAAAkE,OAAAC,eAAAC,MAAA;YACIxF,KAAApB,gBAAA;YACAoB,KAAAL,eAAA;;;QAKZiB,oBAAA,SAAAA,mBAAAQ;UACI,IAAA,aAAAA,MAAAkE,OAAAE,MAAA;YACI,IAAAC,gBAAArE,MAAAkE,OAAApF,SAAAwF,QAAA;YACA,IAAAC,aAAAnJ,GAAAqD,EAAA4F,cAAAG,OAAA/D,IAAA4D,cAAAG,OAAA9D;YAEA,IAAA+D,UAAAzE,MAAAkE,OAAApF,SAAA2F;YACA,IAAAC,cAAAD,QAAAE,oBAAAJ;YAEA3F,KAAAgG,MAAAF;;;QAIRE,OAAA,SAAAA,MAAAC;QAYApF,kBAAA,SAAAA;UACI,IAAAb,KAAAxB,aACI;UAGJ,IAAAwB,KAAAtB,aAAA;YACIsB,KAAAb,UAAA;YACAa,KAAAX,UAAAwE,UAAAC,OAAA,UAAA,IAAA,GAAA,GAAApH;YACAsD,KAAAN,aAAA;YACA;;UAGJ,IAAA,MAAAM,KAAAf,UAAA;YACIe,KAAAb,UAAA;YACAa,KAAAX,UAAAwE,UAAAC,OAAA,SAAA,IAAA,GAAA,GAAApH;YACAsD,KAAAN,aAAA;iBACH;YACGM,KAAAN,eACIM,KAAAN,aAAAM,KAAAX,UAAAwE,UAAAC,OAAA,SAAA,IAAA,GAAA,GAAApH;YAGJsD,KAAAf,WAAAe,KAAAjB,WAAA,IACIiB,KAAAN,WAAAwG,YAAAnJ,uBAAAD,uBAEAkD,KAAAN,WAAAwG,aAAAlJ,sBAAAF;YAGJkD,KAAAf,WAAAe,KAAAjB,WAAA,IACIiB,KAAAb,UAAApC,uBAAAiD,KAAAjB,WAEAiB,KAAAb,WAAAnC,sBAAAgD,KAAAjB;;;QAKZ0F,iBAAA,SAAAA;UACI,IAAA,MAAAzE,KAAAb,SAAA;YACIa,KAAA2C,KAAAd,KAAA7B,KAAAb;YACA,IAAAgH,QAAA3J,GAAA4J,YAAAC,QAAA;YACA,IAAAC,OAAA9J,GAAA4J,YAAAC,QAAA;YACArG,KAAA2C,KAAAd,IAAAsE,OACInG,KAAA2C,KAAAd,IAAAsE,OACHnG,KAAA2C,KAAAd,IAAAyE,SACGtG,KAAA2C,KAAAd,IAAAyE;;UAIR,IAAA,KAAAtG,KAAAZ,SAAA;YACIY,KAAAZ,UAAA,KAAAY,KAAAZ,UAAAhC,KAAA,KACI4C,KAAAX,UAAAwE,UAAAC,OAAA,WAAA,IAAA,GAAA,GAAApH;YAGJsD,KAAAZ,WAAAhC;YAEA4C,KAAA2C,KAAAb,KAAA9B,KAAAZ;YACA,IAAAY,KAAA2C,KAAAb,IAAA3E,QAAA;cACI6C,KAAA2C,KAAAb,IAAA3E;cACA6C,KAAAxB,cAAA;cACAwB,KAAAvB,cAAA;cACAuB,KAAAZ,UAAA;cACAY,KAAAb,UAAA;cACAa,KAAAX,UAAAwE,UAAAC,OAAA,WAAA,IAAA,GAAA,GAAApH;eACAsD,KAAAtB,eAAAsB,KAAAf,aACIe,KAAAa;;;;QAMhB6D,YAAA,SAAAA;UAKI1E,KAAAjB,WAAAiB,KAAAJ,QAAAiC,IAAA7B,KAAA2C,KAAAd,IAAA,KAAA;UACA,IAAA7B,KAAA2C,KAAA4D,SAAAvG,KAAAjB,WAAA,GAAA;YACIiB,KAAA2C,KAAA4D,WAAA;YACAvG,KAAAf,YACIe,KAAAa;;UAIR,IAAA2F,aAAAxG,KAAAX,UAAAqG,QAAA,SAAAE,OAAA9D,IAAA9B,KAAA2C,KAAA8D;UAEA,IAAAzG,KAAAjB,WAAA,GACIiB,KAAAd,aAAAwH,KAAAC,QAAA3G,KAAAJ,QAAAkC,IAAA9B,KAAA2C,KAAAb,IAAA0E,aAAAxG,KAAAJ,QAAAiC,IAAA7B,KAAA2C,KAAAd,SACH;YACG7B,KAAAd,aAAAwH,KAAAE,KAAAF,KAAAC,QAAA3G,KAAAJ,QAAAkC,IAAA9B,KAAA2C,KAAAb,IAAA0E,aAAAxG,KAAAJ,QAAAiC,IAAA7B,KAAA2C,KAAAd;YACA7B,KAAAd,aAAAwH,KAAAE,OACI5G,KAAAd,cAAA,IAAAwH,KAAAE;;UAKR,IAAAC,SAAA;UAEIA,SADJ7G,KAAAd,aAAA,KACI,IAEA;UAGJ,IAAAc,KAAAhB,WAAA6H,QAAA;YACI7G,KAAAhB,UAAA6H;YAGA7G,KAAAhB,WAAA,IACIgB,KAAAP,YAAAO,KAAAX,UAAAwE,UAAAC,OAAA,SAAA,IAAA,GAAA,GAAAnH,qBAAAe,YAAAoJ,qBAAAC,aAEA/G,KAAAP,YAAAO,KAAAX,UAAAwE,UAAAC,OAAA,WAAA,GAAA,GAAA,GAAAnH,qBAAAe,YAAAoJ,qBAAAC;;UAUR/G,KAAAP,UAAAuH,SAAAN,KAAAO,IAAAjH,KAAAd,aAAAwH,KAAAE,KAAA;;QAMJjC,eAAA,SAAAA;UACI,KAAA3E,KAAArB,iBAAAqB,KAAApB,eACI;UAGJoB,KAAApB,gBAAA;UAGAoB,KAAAL,eAAAK,KAAAX,UAAAwE,UAAAC,OAAA,cAAA,IAAA,GAAA,GAAAlH,wBAAAc,YAAAoJ,qBAAAC;UAKA/G,KAAAL,aAAAuH,kBAAAlH,KAAAL,aAAAwH;UACAnH,KAAAL,aAAAyH,YAAA;;;MAKR,IAAAC,eAAA7K,GAAAa;QACImI,MAAA;QACArG,SAAA;QACAC,SAAA;QAEAC,WAAA;QACAC,kBAAA;QACAgI,SAAA;QAEAC,MAAA,SAAAA,KAAAC,YAAAtH,UAAAuH,QAAAC,QAAAC,OAAAC;UACI5H,KAAAb,UAAAuH,KAAAmB,IAAAH,UAAAC;UACA3H,KAAAZ,WAAAsH,KAAAoB,IAAAJ,UAAAC;UACA,IAAAI,SAAAP,WAAAQ,mBAAAJ;UAEA5H,KAAAX,YAAAa;UACAF,KAAAV,mBAAAU,KAAAX,UAAAwG;UACA7F,KAAAV,iBAAA2I,YAAAF;UACA/H,KAAAV,iBAAA4I,WAAAR,SAAAhK,YAAAyK,YAAAC;UACApI,KAAAX,UAAAwE,UAAAwE,KAAA;UAEA,IAAAZ,QAAA;YACIzH,KAAAsH,UAAAG;YACA,IAAAa,gBAAAtI,KAAAsH,QAAAzB;YACAyC,cAAAJ,WAAAR,SAAAhK,YAAAyK,YAAAC;YACAE,cAAAL,YAAAF;YACAO,cAAA/B,SAAA,IAAA,IAAAG,KAAA6B;YACAD,cAAA7B,SAAA,IAAA,KAAAC,KAAA6B;YACA7B,KAAA6B,WAAA,OACID,cAAA7B,WAAA;YAGJzG,KAAAsH,QAAAzD,UAAAwE,KAAA;YAEA3K,YAAAoD,WAAAC,MAAAC,IAAAhB,KAAAsH;YACAE,WAAAgB,SAAAF;;UAGJ5K,YAAAoD,WAAAC,MAAAC,IAAAhB,KAAAX;UACAmI,WAAAgB,SAAAxI,KAAAV;;QAGJiF,QAAA,SAAAA;UACIvE,KAAAV,iBAAAuC,KAAA7B,KAAAb;UACAa,KAAAV,iBAAAwC,KAAA9B,KAAAZ;UAEA,IAAAqJ,WAAAzI,KAAAV,iBAAA+E,OAAA0B,oBAAA/F,KAAAV,iBAAAoJ;UACA,IAAAD,SAAA5G,KAAA,OAAA4G,SAAA5G,KAAArF,GAAA4J,YAAAC,QAAA,OAAAoC,SAAA3G,KAAA,OAAA2G,SAAA3G,KAAAtF,GAAA4J,YAAAuC,SAAA,KAAA;YAII3I,KAAAgF;YACA,OAAA;;UAGJ,OAAA;;QAGJA,SAAA,SAAAA;UACItH,YAAAoD,WAAAC,MAAAkE,OAAAjF,KAAAX;UACAW,KAAAV,iBAAAsJ;UACA5I,KAAAX,UAAAwJ;UAEA,IAAA7I,KAAAsH,SAAA;YACI5J,YAAAoD,WAAAC,MAAAkE,OAAAjF,KAAAsH;YACAtH,KAAAsH,QAAAzB,QAAA+C;YACA5I,KAAAsH,QAAAuB;;;;;;;;;;;;;;ICpkBZ,IAAAC,cAAAC,QAAA;;IACA,IAAAC,WAAAD,QAAA;;;;;;;IACA,IAAAE,UAAA,SAAAA;MACI,IAAAC;MACAA,KAAAC,cAAA,GAAAC,aAAAtL;MACAoL,KAAAG,WAAA,GAAAC,UAAAxL;MACA,OAAAoL;;IAEWK,QAAAzL,UAAAmL;;;;;;;;;;;;;;;;;ICRf,IAAAO,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;MAGAkC,QAAA,SAAAA;QAAQ,IAAAC,QAAAC;QACJA,KAAAyJ,UAAAzJ,KAAA2C,KAAAiF;QACA5H,KAAA2C,KAAA+G,OAAA;QACA1J,KAAAH,IAAAG,KAAA2C,KAAAqF,mBAAAxL,GAAAqD,GAAA,KAAA;QACAG,KAAA2J,oBAAAnN,GAAAoN,OAAA,KAAA5J,KAAAH;QAEAG,KAAA2C,KAAA1B,GAAA,OAAA;UACI,IAAAlB,MAAA8J,QAAA;YACI9J,MAAA4C,KAAAiG,iBAAA;YACA;;UAEJ7I,MAAA2J,OAAA;UACA,IAAAI,SAAAtN,GAAAuN,SAAA,MAAAhK,MAAA4C,KAAAiF,UAAApL,GAAAqD,EAAAE,MAAA4C,KAAAd,GAAA9B,MAAA4C,KAAAb,IAAA,MAAAtF,GAAAqD,GAAA,KAAA;UACAE,MAAA4C,KAAAqH,UAAAxN,GAAAyN,SAAAH,QAAAtN,GAAA0N,SAAA;YACIC,QAAAC,IAAA;YAGArK,MAAA4C,KAAAiG,iBAAA;;UAEJ7I,MAAA4C,KAAAqH,UAAAxN,GAAA6N,QAAA,IAAA,IAAA;;QAEJrK,KAAA2C,KAAA1B,GAAA,SAAA;UAEGlB,MAAA4C,KAAA1C,aAAAzD,GAAA8N,WAAAC;;QAEHvK,KAAA2C,KAAA1B,GAAA,UAAA;UAEIlB,MAAA4C,KAAA1C,aAAAzD,GAAA8N,WAAAE;;;MAGRC,UAAA,SAAAA;QACIN,QAAAC,IAAA;QACApK,KAAA2C,KAAAiF,WAAA5H,KAAAyJ;QACAzJ,KAAA2C,KAAA+H,QAAA;;MAEJC,WAAA,SAAAA;QACIR,QAAAC,IAAA;;MAEJ7F,QAAA,SAAAA,OAAAC;QACI,IAAAxE,KAAA0J,QAAA1J,KAAA6J,QACI;QAGJ,IAAAe,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAC,OAAA;UACIhL,KAAA6J,SAAA;UACA7J,KAAA2C,KAAAqH,UAAAhK,KAAA2J;;;;;;;;;;;;ICpDZ,IAAAH,UAAAT,QAAA;;;;;;;IAEA,IAAAkC;MACIC,UAAA;MACApN,SAAA;MACAqN,MAAA;MACAC,MAAA;MACAC,KAAA;MACAtJ,MAAA;MACAV,QAAA;;IAEJ7E,GAAAa;MACIC,SAAAd,GAAAe;MACAC;QACIC,kBAAAC,YAAAC;;MAGJC;QAEI0N,gBAAA;QACAC,aAAA;QACAC,aAAA;QACAC,aAAA;QACAC,eAAA;QACAC,kBAAA;QACAC,kBAAA;QACAC,iBAAA;;MAIJ/L,QAAA,SAAAA;QAAoB,IAAAC,QAAAC;QAChBA,KAAA8L,mBAAA;QACA9L,KAAAV,mBAAAU,KAAAC,aAAAvC,YAAAC;QACAqC,KAAAX,YAAAW,KAAAV,iBAAAY;QAEAF,KAAAV,iBAAAa,iBAAAzC,YAAA0C,YAAAC,kBAAAL,KAAA+L,yBAAA/L;QACAtC,YAAAoD,WAAAC,MAAAC,IAAAhB,KAAAX;QACAW,KAAA8K,QAAAG,aAAAC;QACAN,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,QAAA,SAAAG;UACI+I,QAAAC,IAAA;UACArK,MAAAiM,SAAAf,aAAAlJ;;QAGJ/B,KAAA2C,KAAA0B,OAAApD,GAAA,YAAA;UACIkJ,QAAAC,IAAA,UAAArK,MAAAkM;UACAlM,MAAAkM,aAAAhB,aAAAG,QAAArL,MAAAkM,aAAAhB,aAAAnN,WACIiC,MAAAiM,SAAAf,aAAAG;;QAIRpL,KAAA2C,KAAA0B,OAAApD,GAAA,QAAA,SAAAG;UACI+I,QAAAC,IAAA;UACArK,MAAAiM,SAAAf,aAAAG;;QAGJpL,KAAA2C,KAAA0B,OAAApD,GAAA,QAAA,SAAAG;UACI+I,QAAAC,IAAA;UACArK,MAAAmM,eAAA9K,MAAAkE;UACAvF,MAAAiM,SAAAf,aAAAE;;QAEJnL,KAAA2C,KAAA0B,OAAApD,GAAA,UAAA,SAAAG;UACI+I,QAAAC,IAAA;UACArK,MAAAiM,SAAAf,aAAA5J;;QAGJrB,KAAA2C,KAAA0B,OAAApD,GAAA,SAAA;UACIlB,MAAAT,iBAAA4G,YAAA;;QAEJlG,KAAA2C,KAAA0B,OAAApD,GAAA,UAAA;UACIlB,MAAAT,iBAAA4G,YAAA;;QAGJlG,KAAA2C,KAAA0B,OAAApD,GAAA,cAAA,SAAAG;UAGIrB,MAAAT,iBAAA4G,YAAA9E,MAAAkE;;QAGJsF,SAAA9M,QAAA+M,QAAAxB,QAAA8C,MAAA;UACIpM,MAAAiM,SAAAf,aAAAnN;;QAEJkC,KAAAgM,SAAAf,aAAAnN;;MAEJsO,sBAAA,SAAAA;MAGAL,yBAAA,SAAAA,wBAAA3K;QACI+I,QAAAC,IAAA;QACAD,QAAAC,IAAA,aAAAhJ,MAAArD;;MASJoN,MAAA,SAAAA;MAEAC,MAAA,SAAAA;QACIpL,KAAAgM,SAAAf,aAAAG;;MAEJrJ,MAAA,SAAAA;MAEAV,QAAA,SAAAA;MAEAgL,aAAA,SAAAA,YAAAvB;MAGAkB,UAAA,SAAAA,SAAAlB;QACI,IAAA9K,KAAA8K,UAAAA,OACI;QAEJ9K,KAAAiM,WAAAjM,KAAA8K;QACA,QAAAA;SACI,KAAAG,aAAAnN;UACIkC,KAAAX,UAAAwE,UAAAC,OAAA9D,KAAAsL,gBAAA,KAAA,GAAA;UACA;;SACJ,KAAAL,aAAAlJ;UAEI/B,KAAAX,UAAAwE,UAAAC,OAAA9D,KAAAyL,aAAA,GAAA,GAAA;UAIA;;SACJ,KAAAR,aAAAG;UAEIjB,QAAAC,IAAA;UACApK,KAAAX,UAAAwE,UAAAC,OAAA9D,KAAAwL,aAAA,KAAA,GAAA;UAGA;;SACJ,KAAAP,aAAAI;UACI;;SACJ,KAAAJ,aAAAE;UACIhB,QAAAC,IAAA;UACApK,KAAAX,UAAAwE,UAAAC,OAAA9D,KAAAuL,aAAA,KAAA,GAAA;UAEA;;SACJ,KAAAN,aAAA5J;UACIrB,KAAAX,UAAAwE,UAAAC,OAAA9D,KAAA0L,eAAA,GAAA,GAAA;;QAOR1L,KAAA8K,QAAAA;;;;;;;;;;;ICnJRtO,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACI0O;UACIxO;UACAC,MAAAvB,GAAA+P;;QAEJC;UACI1O,SAAA;UACAC,MAAAvB,GAAAwB;;;MAGR8B,QAAA,SAAAA;QAAQ,IAAAC,QAAAC;QACJA,KAAAyM;QACAzM,KAAA0M,UAAA;QACA1M,KAAA2C,KAAA1B,GAAA,mBAAA,SAAAG;UACI,IAAAkE,SAAAlE,MAAAkE;UACAvF,MAAA2M,UAAApH;;;MAGRoH,WAAA,SAAAA,UAAAC;QAEI,IAAAC,MAAAD,QAAA;QACA,KAAA,IAAA7H,IAAA8H,IAAA1I,SAAA,GAAAY,KAAA,GAAAA,KAAA;UACI,IAAA+H,OAAAD,IAAA9H;UACA,IAAA9E,KAAAyM,WAAAK,eAAAhI,IACG9E,KAAAyM,WAAA3H,GAAA7E,aAAAzD,GAAAuQ,QAAAC,cAAAhN,KAAAsM,mBAAAO,YACF;YACG7M,KAAAyM,WAAA3H,KAAA,IAAAtI,GAAAwB,KAAA;YACAgC,KAAAyM,WAAA3H,GAAAT,SAAArE,KAAA2C;YACA,IAAAsK,KAAAjN,KAAAyM,WAAA3H,GAAAoI,aAAA1Q,GAAAuQ;YACAE,GAAAD,cAAAhN,KAAAsM,mBAAAO;YACA7M,KAAAyM,WAAA3H,GAAAjD,KAAA7B,KAAAyM,WAAA3H,GAAAuB,QAAAvB;YACA9E,KAAAwM,SAAA3K,IAAA7B,KAAAyM,WAAA3H,GAAAjD,IAAA,KAAA7B,KAAAyM,WAAA3H,GAAAuB,QAAA,KAAArG,KAAAwM,SAAAnG;;;;;;;;;;;IClChB,IAAAmD,UAAAT,QAAA;;;;;;;IAEA,IAAAoE;MACIjC,UAAA;MACAG,KAAA;MACA+B,WAAA;MACAC,SAAA;;IAGJ7Q,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACI0P,MAAA9Q,GAAAwB;;MAGJ8B,QAAA,SAAAA;QAAS,IAAAC,QAAAC;QACLA,KAAA8K,QAAAqC,WAAAjC;QACAlL,KAAAgM,SAAAmB,WAAA9B;QACA,IAAAkC,gBAAA,SAAAC,SAAA,KAAA9G,KAAA6B,YAAA;QACAvI,KAAAsN,KAAArN,aAAAvC,YAAAC,iBAAA8P,cAAAF,gBAAA;QACAvN,KAAA2C,KAAA1B,GAAA,OAAA;UACIkJ,QAAAC,IAAA;UACA,IAAAsD,UAAAlR,GAAAuN,SAAA,MAAAvN,GAAAqD,EAAA,IAAA,IAAArD,GAAAqD,EAAA,IAAA,MAAArD,GAAAqD,EAAA,KAAA;UACA,IAAAqI,WAAA1L,GAAAmR,SAAA,IAAA;UACA,IAAAC,QAAApR,GAAA6N,QAAA,IAAA,IAAA;UACA,IAAAwD,WAAArR,GAAA0N,SAAA;YACIC,QAAAC,IAAA;YACArK,MAAA4C,KAAA+G,OAAA;;UAEJ3J,MAAA4C,KAAAqH,UAAAxN,GAAAyN,SAAAzN,GAAAsR,QAAAJ,SAAAxF,UAAA0F,UAAAC;UACA9N,MAAA4C,KAAA1C,aAAAzD,GAAAuR,aAAAC,UAAA;UAGAjO,MAAA4C,KAAAsL,QAAA;;;MAWRxD,UAAA,SAAAA;QACIzK,KAAA2C,KAAA1C,aAAAzD,GAAAuR,aAAAC,UAAA;QACAhO,KAAA8K,QAAAqC,WAAA9B;QACArL,KAAA2C,KAAA+H,QAAA;;MAEJnG,QAAA,SAAAA;QACI,IAAAvE,KAAA8K,UAAAqC,WAAA9B,QAAAT,SAAA9M,QAAA+M,QAAAxB,QAAA6E,WAAA;UACI,IAAAC,MAAA3R,GAAA4R,UAAApO,KAAA2C,KAAAiF,UAAAgD,SAAA9M,QAAA+M,QAAA1B,WAAAkF,WAAAzG;UACA,IAAA0G,SAAA1D,SAAA9M,QAAA+M,QAAA1B,WAAAkF,WAAApO,aAAA;UACA,IAAAsO,SAAAD,OAAAE,OAAAF,OAAAG;UACA,IAAAC,iBAAAH,SAAAD,OAAAE,OAAA;UACAL,OAAAI,SAAAG,kBAAA,KACIJ,OAAA3L,KAAAgM,KAAA;UAIJR,MAAAI,SAAAG,kBAAA,KACI1O,KAAAgM,SAAAmB,WAAAC;;;MAIZpB,UAAA,SAAAA,SAAAlB;QACI,IAAA9K,KAAA8K,UAAAA,OACI;QAEJ,QAAAA;SACI,KAAAqC,WAAAC;UACIxC,SAAA9M,QAAA+M,QAAAxB,QAAA+D;UACA;;SACJ,KAAAD,WAAAE;;QAKJrN,KAAA8K,QAAAA;;MAEJH,WAAA,SAAAA;QACIR,QAAAC,IAAA;;;;;;;;;;;;;;IClFR,IAAA/H,gBAAA,SAAAA,cAAAuM;MACI,IAAAC;MAEAD,IAAA3N,KAAA,SAAAlD,MAAA+Q;QACID,SAAA/B,eAAA/O,QACI8Q,SAAA9Q,MAAAoH,KAAA2J,UAEAD,SAAA9Q,UAAA+Q;;MAIRF,IAAAG,OAAA,SAAAhR;QACI,IAAA8Q,SAAA/B,eAAA/O,OAAA;UACI,IAAAiR,cAAAH,SAAA9Q;UACA,KAAA,IAAA+G,IAAA,GAAAA,IAAAkK,YAAA9K,QAAAY,KAAA;YACI,IAAAmK;YACA,KAAA,IAAAC,IAAA,GAAAA,IAAAC,UAAAjL,QAAAgL,KACID,KAAA9J,KAAAgK,UAAAD;YAEJ,IAAAE,UAAAJ,YAAAlK;YAEAsK,QAAAC,MAAArP,MAAAiP;;;;MAKZL,IAAAU,qBAAA;QACIT;;MAGJ,OAAAD;;IAEWrF,QAAAzL,UAAAuE;;;;;;;;;;;IChCf,IAAAkN,iBAAAxG,QAAA;;;;;;;IACA,IAAAgC;MACIG,UAAA;MACAG,KAAA;MACAd,OAAA;MACAC,QAAA;MACA4C,WAAA;MACApC,OAAA;MACAwE,UAAA;;IAEJC,OAAA1E,YAAAA;IACA,IAAA2E,UAAA,SAAAA;MACI,IAAAxG;MACA,IAAAyG,UAAA,GAAAC,gBAAA9R;MACAoL,KAAA9H,QAAAuO;MACA,IAAAE,SAAA9E,UAAAG;MACA,IAAA4E,kBAAAC;MACA,IAAAC,YAAA;MACA,IAAAC,qBAAA;MAEA,IAAAjE,WAAA,SAAAA,SAAAlB,OAAAoF;QACI,IAAAL,WAAA/E,OACI;QAEJ,QAAAA;SACI,KAAAC,UAAAM;UACIsE,OAAAZ,KAAA;UACA;;SACJ,KAAAhE,UAAAR;UACIoF,OAAAZ,KAAA;UACA;;SACJ,KAAAhE,UAAAP;UACImF,OAAAZ,KAAA;UACA;;SACJ,KAAAhE,UAAAqC;UACIuC,OAAAZ,KAAA,cAAAmB;UACAJ,cAAA;UACA;;SACJ,KAAA/E,UAAAC;UAEI2E,OAAAZ,KAAA;UACA;;SACJ,KAAAhE,UAAAyE;;QAKJK,SAAA/E;;MAGJ5B,KAAAqB,QAAA;QACIyB,SAAAjB,UAAAR;;MAGJrB,KAAAmC,MAAA;QACIW,SAAAjB,UAAAM;;MAGJnC,KAAAsB,SAAA;QACIwB,SAAAjB,UAAAP;;MAGJtB,KAAAkE,YAAA,SAAA8C;QAEIlE,SAAAjB,UAAAqC,WAAA8C;;MAGJhH,KAAAmE,UAAA,SAAA6C;QACI/F,QAAAC,IAAA,gBAAA+F,KAAAC,UAAAF;QACAG,QAAAnK,YAAA;QACAyJ,OAAAZ,KAAA,YAAAmB;QACAlE,SAAAjB,UAAAP;;MAIJtB,KAAA8B,QAAA;QAEIgB,SAAAjB,UAAAC;;MAIJ9B,KAAAoH,WAAA;QACIX,OAAAZ,KAAA;QACA/C,SAAAjB,UAAAM;;MAGJnC,KAAAqH,aAAA,SAAAzB;QACIa,OAAA1O,GAAA,aAAA6N;;MAGJ5F,KAAAsH,YAAA;QAEIb,OAAAZ,KAAA;;MAIJ7F,KAAAuH,UAAA,SAAA3B;QACI3E,QAAAC,IAAA;QACAuF,OAAA1O,GAAA,SAAA6N;;MAGJ5F,KAAAwH,cAAA,SAAA5B;QACIa,OAAA1O,GAAA,cAAA6N;;MAGJ5F,KAAAyH,cAAA,SAAA7B;QAEI3E,QAAAC,IAAA;QACAuF,OAAA1O,GAAA,cAAA6N;;MAKJ5F,KAAA0H,YAAA,SAAA9B;QACIa,OAAA1O,GAAA,YAAA6N;;MAGJ5F,KAAA2H,YAAA;QACI,IAAAhB,WAAA9E,UAAAM,OAAAwE,WAAA9E,UAAAP,UAAAqF,WAAA9E,UAAAqC,aAAAyC,WAAA9E,UAAAC,SAAA6E,WAAA9E,UAAAyE,UACI,OAAA;QAEJ,OAAA;;MAGJtG,KAAAgF,UAAA;QACI,IAAA2B,WAAA9E,UAAAC,OACI,OAAA;QAEJ,OAAA;;MAGJ9B,KAAA4H,UAAA,SAAAhC;QACIa,OAAA1O,GAAA,cAAA6N;;MAGJ5F,KAAAiD,QAAA,SAAA2C;QACIa,OAAA1O,GAAA,YAAA6N;;MAGJ5F,KAAA6H,WAAA,SAAAjC;QACIa,OAAA1O,GAAA,eAAA6N;;MAGJ5F,KAAA8H,cAAA,SAAAlC;QACIa,OAAA1O,GAAA,cAAA6N;;MAGJ5F,KAAA+H,mBAAA,SAAAnC;QACIa,OAAA1O,GAAA,mBAAA6N;;MAGJ5F,KAAA3E,SAAA,SAAAC;QACI,IAAA0E,KAAA2H,aAAA;UACI,SAAAd,MAAAD,YAAA;YACIO,QAAAnK,aAAA4J;YACAH,OAAAZ,KAAA,cAAAsB,QAAAnK;YACA,IAAAmK,QAAAnK,YAAA,KAAA;cACImK,QAAAnK,YAAA;cACA4J,kBAAAC;;;UAIR,IAAAE,qBAAA,GAAA;YACIA,qBAAA;YACAD;YACAL,OAAAZ,KAAA,mBAAAiB;iBAEAC,sBAAAzL,KAAA6L,QAAAnK;;;MAMZ,IAAAgL,eAAA,UAAA,UAAA,UAAA;MACA,IAAAC,gBAAA,MAAAC,qBAAA;MAEAlI,KAAAC;QACIkI,WAAA;QACAC,UAAA;QACA7C,YAAA;QACA8C,YAAA;;MAGJ,IAAAC,aAAA,SAAAA,WAAAhM;QAKIhJ,GAAAiV,SAAAC,UAAAlM,MAAA,SAAAmM,KAAAC;UACI,IAAAD,KAAA;YACIxH,QAAA0H,MAAAF;YACA;;UAEJxH,QAAAC,IAAA,gBAAA5E,OAAA;UACA2L,gBAAAS;;;MAIR1I,KAAA4I,QAAA,SAAAC;QACIP,WAAAN,WAAAE;;MAGJlI,KAAA8I,gBAAA;QACI,OAAAZ;;MAGJlI,KAAA+I,YAAA;QACItC,OAAAL;QACA8B;QACAlI,KAAAqB;QACAJ,QAAAC,IAAA8G,WAAAE;QACAA,sBAAAF,WAAAhN,WACIkN,qBAAA;QAEJI,WAAAN,WAAAE;;MAGJlI,KAAA8C,WAAAA;MAEA9C,KAAA4B,QAAA;QACI,OAAA+E;;MAGJ,OAAA3G;;IAEWK,QAAAzL,UAAA4R;;;;;;;;;;IChOf,IAAAlG,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACIyQ;UACIvQ,SAAA;UACAC,MAAAvB,GAAAwB;;QAEJkU,QAAA1V,GAAAwB;;MAKJ8B,QAAA,SAAAA;MAIAgS,OAAA,SAAAA;QACI,IAAAK,OAAAnS;QACAmK,QAAAC,IAAA;QAEA,IAAAgI,OAAA5V,GAAA6V,KAAAC;QACAnI,QAAAC,IAAAgI,KAAAzJ,QAAAyJ,KAAA/L;QACA,IAAA+L,KAAAzJ,SAAAyJ,KAAA/L,QAAA,IAAA;UACI8D,QAAAC,IAAA;UACApK,KAAAkS,OAAAxH,QAAA;;QAEJlO,GAAAiV,SAAAc,sBAAAvE,UAAA;QAEAhO,KAAA6D,YAAA7D,KAAA2C,KAAA1C,aAAAzD,GAAA8N;QACAtK,KAAA6D,UAAA5C,GAAA,YAAAjB,KAAAwS,oBAAAC,KAAAzS;QAEA,IAAA0S;QACA,KAAA,IAAA5N,KAAAuL,QAAAsC,QACID,QAAAvN,KAAAkL,QAAAsC,OAAA7N;QAGJ8F,SAAA9M,QAAA8U,iBAAAC,SAAAH,SAAA;UAEI9H,SAAA9M,QAAA+M,QAAAxB,QAAAgC;UACA8G,KAAA9D,WAAAM,KAAA;;;MAGR6D,qBAAA,SAAAA,oBAAApR;QACI,IAAA0J,QAAA1J,MAAAkE;QACA,IAAAvH,OAAAqD,MAAArD;QACA,IAAA,gBAAA+M,MAAAtF,MAAA;UACI,IAAA2M,OAAAnS;UACAmS,KAAA9D,WAAAM,KAAA;UACAmE,WAAA;YACIlI,SAAA9M,QAAA+M,QAAAxB,QAAAgC;YACA8G,KAAA9D,WAAAM,KAAA;aACH;;;MAGTpK,QAAA,SAAAA,OAAAC;QACIoG,SAAA9M,QAAA+M,QAAAxB,QAAA9E,OAAAC;;;;;;;;;;;;;;IC1DR,IAAAuO,WAAAhK,QAAA;;IACA,IAAAiK,oBAAAjK,QAAA;;IACA,IAAAkK,eAAAlK,QAAA;;;;;;;IACA,IAAAnD;IACAA,OAAAiF,WAAA,GAAAqI,UAAApV;IACA8H,OAAAgN,oBAAA,GAAAO,mBAAArV;IACA8H,OAAAwN,eAAA,GAAAC,cAAAvV;IACeyL,QAAAzL,UAAA8H;;;;;;;;;;;;ICPf,IAAA4D,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACI0V,MAAA;QACAC,WAAA;;MAEJzT,QAAA,SAAAA;QACI,IAAAqS,OAAAnS;QACA,IAAAwT,UAAAxT,KAAAsT;QACA,IAAAG,eAAAzT,KAAAuT;QACA3I,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,iBAAA,SAAA8Q;UACI,MAAAA,IAAA2B,eACIvB,KAAAoB,YAAAE,eAEAtB,KAAAoB,YAAApB,KAAAoB,YAAA;;QAGR3I,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,QAAAjB,KAAA+B,KAAA0Q,KAAAzS;QACAA,KAAA2T,WAAA3T,KAAA2C,KAAAiF,SAAA9F;QACA9B,KAAA4T,eAAA;;MAEJ7R,MAAA,SAAAA;QACIoI,QAAAC,IAAA;aACA2F,MAAA/P,KAAA6T,WACI7T,KAAA6T,SAAA7T,KAAAuT;;MAGRO,eAAA,SAAAA,cAAAC;QACI,KAAA/T,KAAAgU,aAAA;UACIhU,KAAAgU,cAAA;UACAxX,GAAAyX,YAAA5L,KAAA0L,OAAA,OAAA;;;MAGRxP,QAAA,SAAAA,OAAAC;QACI,SAAAuL,MAAA/P,KAAA6T,QAAA;UACI7T,KAAA2C,KAAAiF,WAAApL,GAAAqD,EAAAG,KAAA2C,KAAAiF,SAAA/F,GAAA7B,KAAA2C,KAAAiF,SAAA9F,IAAA9B,KAAA6T,SAAArP,KAAA6L,QAAAnK;UACAlG,KAAA6T,UAAA7T,KAAAsT,OAAA9O,KAAA6L,QAAAnK;;QAEJ,IAAAlG,KAAA2C,KAAAiF,SAAA9F,KAAA9B,KAAA2T,iBAAA5D,MAAA/P,KAAA6T,QAAA;UACI7T,KAAA2C,KAAAiF,WAAApL,GAAAqD,EAAAG,KAAA2C,KAAAiF,SAAA/F,GAAA7B,KAAA2T;UACA3T,KAAA6T,cAAA9D;UACA5F,QAAAC,IAAA;UACApK,KAAA2C,KAAAgM,KAAA;UACA3O,KAAAgU,cAAA;;;;;;;;;;;;ICnCZxX,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;MAoBAkC,QAAA,SAAAA;QACI,IAAAsS,OAAA5V,GAAA6V,KAAAC;QACA,OAAA9E,SAAA4E,KAAA/L,QAAA+L,KAAAzJ,SAAA,QACIwB,QAAAC,IAAA;;MAIR0H,OAAA,SAAAA;MAGAoC,oBAAA,SAAAA;QACI1X,GAAAiV,SAAAC,UAAA,UAAA,SAAAC,KAAAC;UACI,IAAAD,KAAA;YACIxH,QAAA0H,MAAAF;YACA;;UAEJxH,QAAAC,IAAA,gBAAA5E,OAAA;UACA2L,gBAAAS;;;;;;;;;;IClDZ,IAAApI,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;MAGAkC,QAAA,SAAAA;MAGAqU,eAAA,SAAAA,cAAA/S,OAAAgT;QACI,QAAAA;SACI,KAAA;UACIxJ,SAAA9M,QAAA+M,QAAAxB,QAAAmB;UACAxK,KAAA2C,KAAA0R;UACA7X,GAAAyX,YAAAK;;;;;;;;;;;;;;;ICfhB,IAAAC;MACIC,KAAA;MACAC,QAAA;;IAGJ,IAAAC,QAAA,SAAAA;IAGA,IAAAC,aAAA,SAAAA;MACI,IAAAzL;MACAA,KAAA0L;MACA1L,KAAAmI,YAAA;MACAnI,KAAAoI,WAAA;MACApI,KAAA2L,gBAAA;MACA3L,KAAAuF,aAAA;MACAvF,KAAAvB,QAAA;MACAuB,KAAAqI,aAAA;MACArI,KAAA4L,QAAA;MAEA5L,KAAA6L;QAAAhX,MAAA;QAAAiX,cAAA;QAAAC,MAAA;QAAAC,cAAA,8BAAA,8BAAA;;QAAAnX,MAAA;QAAAkX,MAAA;QAAAE,WAAA;;MAEAjM,KAAAkM,gBAAA;MAOA,OAAAlM;;IAEWK,QAAAzL,UAAA6W;;;;;;;;ICrBf,IAAAnL,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACI0P;UACIxP,SAAA;UACAC,MAAAvB,GAAAwB;;QAEJqX,KAAA7Y,GAAAwB;QACAsX,WAAA9Y,GAAA+Y;QACAC,aAAAhZ,GAAA+Y;QACAE,UAAAjZ,GAAA+Y;QACAG,YAAAlZ,GAAA+Y;QAEAI,OAAAnZ,GAAA+Y;QACA/G,UAAAhS,GAAAoZ;QACAnH,YAAA;QACAoH,sBAAA;QACAC,oBAAA;QACAC,YAAA;;MAGJjW,QAAA,SAAAA;QAAQ,IAAAC,QAAAC;QACJA,KAAAgW,kBAAA;QACAhW,KAAAyO,aAAA7D,SAAA9M,QAAA+M,QAAA1B,WAAAsF;QACAzO,KAAA2H,QAAAiD,SAAA9M,QAAA+M,QAAA1B,WAAAxB;QACAnL,GAAAyX,YAAA5L,KAAArI,KAAAiW,iBAAA,MAAA;QACArL,SAAA9M,QAAA+M,QAAAxB,QAAAsH,YAAA;UAEIxG,QAAAC,IAAA;;QAKJQ,SAAA9M,QAAA+M,QAAAxB,QAAAuH,UAAA,SAAAV;UACI/F,QAAAC,IAAA;UACAQ,SAAA9M,QAAA+M,QAAA1B,WAAA2L,SAAA,KACI/U,MAAAmW;UAEJnW,MAAAoW,aAAAjG,KAAAkG;UAEArW,MAAA4C,KAAAgM,KAAA,cAAA;;QAEJ3O,KAAA2C,KAAA0T,SAAA;QACAzL,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,QAAAjB,KAAAsW,OAAA7D,KAAAzS;QAEA4K,SAAA9M,QAAA+M,QAAAxB,QAAA2H,YAAA;UACIjR,MAAA4C,KAAAgM,KAAA,cAAA0B,QAAAnK;;QAGJ0E,SAAA9M,QAAA+M,QAAAxB,QAAAyH,QAAA;UACI/Q,MAAA4C,KAAAgM,KAAA,cAAA;;QAEJ/D,SAAA9M,QAAA+M,QAAAxB,QAAA0H,SAAA;UACIhR,MAAA4C,KAAAgM,KAAA,cAAA0B,QAAAnK;;QAEJ0E,SAAA9M,QAAA+M,QAAA1B,WAAAkF,aAAArO,KAAA2C;;MAGJ4T,aAAA,SAAAA;QACI,OAAAvW,KAAAwO,OAAAxO,KAAAyO;;MAGJ6H,QAAA,SAAAA,OAAAlV;QACI+I,QAAAC,IAAA;QACA,IAAAoM,MAAAxW,KAAA2C,KAAA1C,aAAA;QACAuW,IAAA1C,cAAA9T,KAAAsV;;MAGJmB,kBAAA,SAAAA,iBAAAC,OAAAvE;QACI,IAAAuE,MAAAzW,aAAA,UAAA;UACIzD,GAAAyX,YAAA5L,KAAArI,KAAAwV,aAAA,OAAA;UACA,IAAA5K,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAC,OAAA;YACI0L,MAAA/T,KAAAgM,KAAA;YACA3O,KAAA2C,KAAAgM,KAAA;YAKA3O,KAAAyO;YACAzO,KAAAyO,aAAA/H,KAAAiQ,IAAA3W,KAAAyO,YAAAzO,KAAAwO,OAAAtK,SAAA;YACAlE,KAAA4W,YAAA5W,KAAAwO,OAAAxO,KAAAyO;iBAEAiI,MAAA/T,KAAAgM,KAAA;;QAIR,IAAA+H,MAAAzW,aAAA,eAAA2K,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAC,OAAA;UACIhL,KAAAyO;UACAzO,KAAAyO,aAAA/H,KAAAmQ,IAAA7W,KAAAyO,YAAA;UACAzO,KAAA4W,YAAA5W,KAAAwO,OAAAxO,KAAAyO;UACAjS,GAAAyX,YAAA5L,KAAArI,KAAA0V,YAAA,OAAA;UACA,IAAAoB,UAAA9W,KAAAsN,KAAArN,aAAAzD,GAAA8N;UACAwM,QAAAzO,KAAA;;QAEJ,IAAAqO,MAAAzW,aAAA,SAAA;UACIzD,GAAAyX,YAAA5L,KAAArI,KAAAyV,UAAA,OAAA;UACAiB,MAAA/T,KAAAgM,KAAA;UACA/D,SAAA9M,QAAA+M,QAAA1B,WAAAkI;;;MAGRuF,aAAA,SAAAA,YAAAG;QACInM,SAAA9M,QAAA+M,QAAA1B,WAAAxB,QAAAoP;QACA/W,KAAA2C,KAAAgM,KAAA,cAAAoI,WAAA/W,KAAAwO,OAAA;QACA5D,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAA2N,KAAA;UACI2E,cAAA1T,KAAAyO;UACAuI,UAAAhX,KAAAwO,OAAAtK,SAAA;UACA+S,YAAAF;;;MAIRb,gBAAA,SAAAA;QACIlW,KAAAsN,KAAA4J,SAAA;QACAlX,KAAAqV,IAAA6B,SAAA;QACAlX,KAAAgW,kBAAA;QAEAhW,KAAAmX,cAAA3a,GAAAyX,YAAA5L,KAAArI,KAAA2V,OAAA;QAEA3V,KAAA4W,YAAA5W,KAAA+V;;MAGJqB,eAAA,SAAAA;QACIpX,KAAAgW,kBAAA;QACAhW,KAAAsN,KAAA4J,SAAA;QACAlX,KAAAqV,IAAA6B,SAAA;QAEAlX,KAAAmX,eACI3a,GAAAyX,YAAAoD,KAAArX,KAAAmX;QAGJvM,SAAA9M,QAAA+M,QAAAxB,QAAAiH;QACAtQ,KAAA4W,YAAA5W,KAAAwO,OAAAxO,KAAAyO;;MAGJlK,QAAA,SAAAA,OAAAC;QACI,KAAAoG,SAAA9M,QAAA+M,QAAAxB,QAAAwH,eAAAjG,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAqC,WACI;QAGJ,IAAAzF,QAAA;QACA,IAAAiD,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAC,OACIrD,QAAA3H,KAAAwO,OAAAxO,KAAAyO,kBACH;UACG9G,QAAA3H,KAAA+V;UACA/V,KAAAgW,mBAAAxR;UACAxE,KAAAgW,mBAAAhW,KAAA8V,sBACI9V,KAAAoX;;QAIR,IAAAxM,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAyE,UAAA;UACIxP,KAAA2C,KAAAd,KAAA8F,QAAAnD;UACA,IAAAxE,KAAA2C,KAAAd,IAAA,KAAA;YACI7B,KAAA2C,KAAAuU,SAAA;YACAlX,KAAAoX;YACAxM,SAAA9M,QAAA+M,QAAAxB,QAAA4I;;;QAIR,IAAAX,WAAA3J,QAAAnD,KAAA;QACAoG,SAAA9M,QAAA+M,QAAA1B,WAAAmI,YAAAA;QACAtR,KAAA6V,wBAAAvE;QACAtR,KAAA6V,uBAAA,OACIjL,SAAA9M,QAAA+M,QAAAxB,QAAA2C,SAAAjB,UAAAyE;;MAGR3K,WAAA,SAAAA;QACI7E,KAAAmX,eACI3a,GAAAyX,YAAAoD,KAAArX,KAAAmX;;;;;;;;;;;;;;IClLZ,IAAAG,cAAA,SAAAA;MACI,IAAApO;MACA,IAAAqO;MACA,IAAAC;MACAtO,KAAAuO,aAAA,SAAA1Z,MAAA2Z,QAAAC;QACI,KAAAJ,cAAAzK,eAAA/O,OAAA;UACIwZ,cAAAxZ,QAAA,IAAAvB,GAAAob;UACAJ,gBAAAzZ,QAAA2Z;UACA,IAAAG,IAAA;UACAF,UACIE,IAAAF;UAEJ,KAAA,IAAA7S,IAAA,GAAAA,IAAA+S,GAAA/S,KAAA;YACI,IAAAnC,OAAAnG,GAAAsb,YAAAJ;YACAH,cAAAxZ,MAAAga,IAAApV;;;;MAIZuG,KAAA8O,UAAA,SAAAja;QACI,IAAA4E,OAAA;QACA,IAAA4U,cAAAzK,eAAA/O,OAAA;UACI,IAAAwZ,cAAAxZ,MAAAqU,SAAA,GACIzP,OAAA4U,cAAAxZ,MAAAka,YACH;YACGtV,OAAAnG,GAAAsb,YAAAN,gBAAAzZ;YACAwZ,cAAAxZ,MAAAga,IAAApV;;UAGJ,OAAAA;;QAEJ,OAAA;;MAGJuG,KAAAgP,UAAA,SAAAna,MAAA4E;QACI4U,cAAAzK,eAAA/O,SACIwZ,cAAAxZ,MAAAga,IAAApV;;MAMR,OAAAuG;;IAEWK,QAAAzL,UAAAwZ;;;;;;;;;;;IC3Cf,IAAAa,mBAAA,SAAAA;MACI,IAAAjP;MACAA,KAAAkP;MACA,IAAAC,OAAA,SAAAA,KAAAC,SAAAC;QACI/b,GAAAgc,OAAAC,QAAAH,SAAA,SAAA3G,KAAA+G;UACI/G,OACIxH,QAAAC,IAAA,UAAA+F,KAAAC,UAAAuB;UAEJ4G,MACIA,GAAAD,SAAAI;;;MAIZxP,KAAA2J,WAAA,SAAAH,SAAA6F;QACI,IAAAI,YAAA;QACA,IAAAC,SAAA,SAAAA,OAAAN,SAAAI;UACIxP,KAAAkP,UAAAE,WAAAI;UACAC;UACAA,cAAAjG,QAAAxO,UACIqU,MAEIA;;QAIZ,KAAA,IAAAzT,IAAA,GAAAA,IAAA4N,QAAAxO,QAAAY,KACIuT,KAAA3F,QAAA5N,IAAA8T;;MAIR,OAAA1P;;IAEWK,QAAAzL,UAAAqa;;;;;;;;IChCf,IAAA3O,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACIib;UACI/a;UACAC,MAAAvB,GAAAwB;;QAEJ8a,SAAA;QACAC,aAAA;QACAC,QAAA;QACAC,gBAAA;;MAKJnZ,QAAA,SAAAA;QACI,IAAAqS,OAAAnS;QACA,aAAAmS,KAAA6G,WACI7G,KAAA2G,UAAAlO,SAAA9M,QAAA+M,QAAA1B,WAAAxB,QAAAwK,KAAA4G;QAEJ,cAAA5G,KAAA6G,WACI7G,KAAA2G,UAAAlO,SAAA9M,QAAA+M,QAAA1B,WAAAxB,QAAA,KAAAwK,KAAA4G;QAEJ,YAAA5G,KAAA6G,WACI7G,KAAA2G,UAAAlO,SAAA9M,QAAA+M,QAAA1B,WAAAxB,QAAA,MAAAwK,KAAA4G;QAEJnO,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,iBAAA,SAAA8Q;UACI,IAAA,aAAAI,KAAA6G,QAAA;YACI7O,QAAAC,IAAA,qBAAA2H,IAAAkF;YACA9E,KAAA2G,UAAA/G,IAAAkF,aAAA9E,KAAA4G;;UAEJ,IAAA,cAAA5G,KAAA6G,QAAA;YACI7O,QAAAC,IAAA,qBAAA2H,IAAAkF;YACA9E,KAAA2G,UAAA/G,IAAAkF,aAAA,KAAA9E,KAAA4G;;UAEJ,IAAA,YAAA5G,KAAA6G,QAAA;YACI7O,QAAAC,IAAA,qBAAA2H,IAAAkF;YACA9E,KAAA2G,UAAA/G,IAAAkF,aAAA,MAAA9E,KAAA4G;;;;MAIZxU,QAAA,SAAAA,OAAAC;QACI,KAAAoG,SAAA9M,QAAA+M,QAAAxB,QAAAwH,eAAA7Q,KAAA6Y,OAAA3U,UAAA,KAAA0G,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAyE,UACI;QAGJ,IAAArB,MAAAnO,KAAA8Y,UAAAtU,KAAA6L,QAAAnK;QACA,KAAA,IAAApB,KAAA9E,KAAA6Y,QACI7Y,KAAA6Y,OAAA/T,GAAAjD,KAAAsM;QAIJnO,KAAA6Y,OAAA,GAAAhX,MAAA,OACI7B,KAAA2C,KAAAiG;;;;;;;;;;;ICvDZ,IAAAY,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACIib;UACI/a;UACAC,MAAAvB,GAAAwB;;QAEJ8a,SAAA;QACAE,QAAA;QACAC,gBAAA;QACAF,aAAA;;MAKJjZ,QAAA,SAAAA;QACI,IAAAqS,OAAAnS;QACA,aAAAmS,KAAA6G,WACI7G,KAAA2G,UAAAlO,SAAA9M,QAAA+M,QAAA1B,WAAAxB,QAAAwK,KAAA4G;QAEJ,cAAA5G,KAAA6G,WACI7G,KAAA2G,UAAAlO,SAAA9M,QAAA+M,QAAA1B,WAAAxB,QAAA,KAAAwK,KAAA4G;QAEJ,YAAA5G,KAAA6G,WACI7G,KAAA2G,UAAAlO,SAAA9M,QAAA+M,QAAA1B,WAAAxB,QAAA,MAAAwK,KAAA4G;QAEJnO,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,iBAAA,SAAA8Q;UACI,IAAA,aAAAI,KAAA6G,QAAA;YACI7O,QAAAC,IAAA,qBAAA2H,IAAAkF;YACA9E,KAAA2G,UAAA/G,IAAAkF,aAAA9E,KAAA4G;;UAEJ,IAAA,cAAA5G,KAAA6G,QAAA;YACI7O,QAAAC,IAAA,qBAAA2H,IAAAkF;YACA9E,KAAA2G,UAAA/G,IAAAkF,aAAA,KAAA9E,KAAA4G;;UAEJ,IAAA,YAAA5G,KAAA6G,QAAA;YACI7O,QAAAC,IAAA,qBAAA2H,IAAAkF;YACA9E,KAAA2G,UAAA/G,IAAAkF,aAAA,MAAA9E,KAAA4G;;;;MAIZxU,QAAA,SAAAA,OAAAC;QACI,KAAAoG,SAAA9M,QAAA+M,QAAAxB,QAAAwH,eAAAjG,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAyE,UACI;QAGJ,IAAArB,MAAAnO,KAAA8Y,UAAAtU,KAAA6L,QAAAnK;QACA,KAAA,IAAApB,KAAA9E,KAAA6Y,QACI7Y,KAAA6Y,OAAA/T,GAAAjD,KAAAsM;QAIJ,IAAAnO,KAAA6Y,OAAA,GAAAhX,MAAA,KAAA;UACI,IAAAqX,OAAAlZ,KAAA6Y,OAAAM;UACA,IAAAC,WAAApZ,KAAA6Y,OAAA7Y,KAAA6Y,OAAA3U,SAAA;UACAgV,KAAArX,IAAAuX,SAAAvX,IAAAuX,SAAA/S;UACArG,KAAA6Y,OAAA1T,KAAA+T;;;;;;;;;;;;IC1DZ,IAAA1P,UAAAT,QAAA;;;;;;;IAEAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACIyb,kBAAA7c,GAAA8c;QAEAC,oBAAA/c,GAAAoZ;QACA4D,iBAAAhd,GAAA8c;QACAG,eAAAjd,GAAA8c;QACAI,kBAAAld,GAAA8c;QAEAK,oBAAA;QACAC,kBAAA;QACAC,sBAAA;QACAC,yBAAA;QAEAC,oBAAAvd,GAAAwB;QACAgc,wBAAAxd,GAAAwB;;MAEJ8B,QAAA,SAAAA;QACIE,KAAAia,uBAAA;QACAja,KAAAka,qBAAA;QACAla,KAAAma,yBAAA;QACAna,KAAAoa,qBAAA;QAEApa,KAAAqa,aAAAzP,SAAA9M,QAAA+M,QAAAxB,QAAA2I;QAEAhS,KAAAsa;QACA,IAAAC,UAAAva,KAAAqZ,eAAArZ,KAAAqa;QACA,KAAA,IAAAvV,IAAA,GAAAA,IAAAyV,QAAArW,QAAAY,KACI9E,KAAAsa,SAAAnV,KAAA3I,GAAAsb,YAAAyC,QAAAzV;;MAIR0V,aAAA,SAAAA,YAAAC,aAAAC;QACI,IAAAD,YAAAvW,WAAAwW,SAAAxW,QAAA;UACIiG,QAAA0H,MAAA;UACA;;QAEJ,IAAA8I,IAAAjU,KAAA6B;QACA,IAAAqS,MAAA;QACA,KAAA,IAAA9V,IAAA,GAAAA,IAAA4V,SAAAxW,QAAAY,KAAA;UACI,IAAAA,KAAA4V,SAAAxW,SAAA,GAAA;YACI0W,MAAApe,GAAAsb,YAAA2C,YAAA3V;YACA;;UAEJ,IAAA6V,IAAAD,SAAA5V,IAAA;YACI8V,MAAApe,GAAAsb,YAAA2C,YAAA3V;YACA;;;QAIR,OAAA8V;;MAEJrW,QAAA,SAAAA,OAAAC;QACI,KAAAoG,SAAA9M,QAAA+M,QAAAxB,QAAAwH,eAAAjG,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAqC,WACI;QAGJ,IAAAxC,SAAA9M,QAAA+M,QAAA1B,WAAAmI,WAAA1G,SAAA9M,QAAA+M,QAAA1B,WAAA0L,iBAAAjK,SAAA9M,QAAA+M,QAAA1B,WAAA0L,gBAAA,IACI;QAIJ7U,KAAAma,0BAAA3V;QACA,IAAAxE,KAAAma,0BAAAna,KAAA6Z,wBAAAjP,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAC,OAAA;UACIhL,KAAA6a;UACA7a,KAAAma,yBAAA;UACAna,KAAAia,uBAAA;;QAGJ,IAAArP,SAAA9M,QAAA+M,QAAAxB,QAAAyB,YAAAC,UAAAC,OAAA;UACIhL,KAAAoa,sBAAA5V;UACA,IAAAxE,KAAAoa,sBAAA,GAAA;YACIjQ,QAAAC,IAAA;YACApK,KAAAoa,qBAAApa,KAAA8Z;YACA,IAAAgB,UAAAte,GAAAsb,YAAA9X,KAAA0Z;YACAoB,QAAAlT,WAAA5H,KAAA+Z,mBAAAnS;YACAkT,QAAAzW,SAAArE,KAAA+Z,mBAAA1V;;;QAKRrE,KAAAia,wBAAAzV;QACA,IAAAgJ,SAAA5C,SAAA9M,QAAA+M,QAAA1B,WAAAmI,WAAA1G,SAAA9M,QAAA+M,QAAA1B,WAAA0L,iBAAA7U,KAAA2Z,uBAAA,KAAA3Z,KAAAia,wBAAA,GAAA;UACI9P,QAAAC,IAAA,sBAAApK,KAAAia,sBAAAja,KAAA2C,KAAAoY;UAEA/a,KAAAma,0BAAAna,KAAA6Z,uBAAA,MACI7Z,KAAAma,yBAAAna,KAAA6Z,uBAAA;UAEJ7Z,KAAAia,uBAAA;UACAja,KAAAgb;;QAIJhb,KAAAka,sBAAA1V;QACA,IAAAxE,KAAAka,sBAAAla,KAAA4Z,kBAAA;UACI5Z,KAAAib;UACAjb,KAAAka,qBAAA;;;MAGRe,gBAAA,SAAAA;QAEI,IAAAN,IAAAjU,KAAA6B;QACA,IAAAoS,IAAA,IACI;QAEJ,IAAAO,QAAA1e,GAAAsb,YAAA9X,KAAAwZ,cAAAxZ,KAAAqa;QACAa,MAAAtT,WAAA5H,KAAAga,uBAAApS;QACAsT,MAAA7W,SAAArE,KAAAga,uBAAA3V;;MAEJ2W,YAAA,SAAAA;QACI,IAAAF,UAAA9a,KAAAwa,YAAAxa,KAAAqZ,gBAAArZ,KAAAuZ;QACA,IAAAvZ,KAAAmb,eAAAnb,KAAAmb,YAAA9U,QAAArG,KAAAmb,YAAAtZ,IAAA7B,KAAA+Z,mBAAAnS,SAAA/F,IAAA,KACI;QAEJiZ,QAAAlT,WAAA5H,KAAA+Z,mBAAAnS;QACA,KAAA,IAAA9C,KAAAgW,QAAAM,UACIN,QAAAM,SAAAtW,GAAAuW,SAAA;QAEJP,QAAAzW,SAAArE,KAAA+Z,mBAAA1V;QACArE,KAAAmb,cAAAL;;MAEJD,cAAA,SAAAA;QACI,IAAAK,QAAA1e,GAAAsb,YAAA9X,KAAAyZ,YAAAzZ,KAAAqa;QACAa,MAAAtT,WAAA5H,KAAA+Z,mBAAAnS;QACAsT,MAAA7W,SAAArE,KAAA+Z,mBAAA1V;;;;;;;;;;;ICtHR7H,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;MAsBAkU,OAAA,SAAAA;;;;;;;;ICnCJ,IAAAtI,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACI0d;UACIxd;UACAC,MAAAvB,GAAA+P;;;MAGRgP,cAAA,SAAAA,aAAArL;QACIlQ,KAAA2C,KAAA+G,OAAA;QACA1J,KAAAuO,SAAA2B,KAAAvI;QACA3H,KAAAwb,YAAAxb,KAAAuO;QACA,IAAAL,UAAAgC,KAAAhC;QACA/D,QAAAC,IAAA,aAAA8D;QACAA,WACIlO,KAAA2C,KAAAgM,KAAA;QAGJ3O,KAAAyb,MAAA;;MAEJ3b,QAAA,SAAAA;QAAQ,IAAAC,QAAAC;QACJ,IAAAmS,OAAAnS;QACA,IAAA,MAAAA,KAAAsb,oBAAApX,QAAA;UACIlE,KAAAkN,aAAA1Q,GAAAuQ,QAAAC,cAAAhN,KAAAsb,oBAAA;UACA,IAAAI,WAAA1b,KAAA2C,KAAAuK,aAAA1Q,GAAAuR;UACA2N,SAAAtJ,OAAA5V,GAAA4V,KAAApS,KAAA2C,KAAA0D,OAAArG,KAAA2C,KAAAgG;;QAEJ3I,KAAA2C,KAAA1B,GAAA,OAAA;UACIlB,MAAA0b,MAAA;UACAtR,QAAAC,IAAA;;QAGJQ,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,iBAAA,SAAA8Q;;MAKJxN,QAAA,SAAAA,OAAAC;QACIoG,SAAA9M,QAAA+M,QAAAxB,QAAAwH,eACI7Q,KAAAuO,UAAA,UAAAvO,KAAAyb,QACIzb,KAAA2C,KAAAiF,WAAApL,GAAAqD,EAAAG,KAAA2C,KAAAiF,SAAA/F,IAAA7B,KAAAuO,SAAA/J,KAAA6L,QAAAnK,WAAAlG,KAAA2C,KAAAiF,SAAA9F;QAIR9B,KAAA2C,KAAAiF,SAAA/F,IAAA,KAAA7B,KAAA2C,KAAA0D,SAAA,KAAA7J,GAAAmf,QAAAtV,UACIrG,KAAA2C,KAAA+G,OAAA;;;;;;;;;;;IC/CZ,IAAAF,UAAAT,QAAA;;;;;;;IAEAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACIge,WAAA;QACAC;UACI/d,SAAA;UACAC,MAAAvB,GAAAsf;;QAEJC,mBAAAvf,GAAAwB;QACAge;UACIle,SAAA;UACAC,MAAAvB,GAAAwB;;QAEJie;UACIne,SAAA;UACAC,MAAAvB,GAAAsf;;QAEJI;UACIpe,SAAA;UACAC,MAAAvB,GAAA2f;;QAEJC,eAAA5f,GAAA2f;QACAE,oBAAA7f,GAAAsf;QACAQ;UACIxe,SAAA;UACAC,MAAAvB,GAAA8c;;QAEJiD,UAAA/f,GAAAwB;;MAGJ8T,OAAA,SAAAA;QAEI9R,KAAAkc,eAAAM,SAAA5R,SAAA9M,QAAA+M,QAAA1B,WAAAkI;QACArR,KAAAic,cAAAQ,WAAA7R,SAAA9M,QAAA+M,QAAA1B,WAAAsF,aAAA;QACAzO,KAAA6b,aAAAY,YAAAzc,KAAA4b,YAAAhR,SAAA9M,QAAA+M,QAAA1B,WAAAoI,cAAAvR,KAAA4b;;MAEJ9b,QAAA,SAAAA;QAAS,IAAAC,QAAAC;QAOL,IAAAmS,OAAAnS;QACAA,KAAAqc,mBAAAI,WAAA7R,SAAA9M,QAAA+M,QAAA1B,WAAA2L,QAAA;QACAlK,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,iBAAA,SAAA8Q;UACII,KAAA8J,cAAAQ,WAAA1K,IAAA2B,eAAA3B,IAAAiF;;QAGJpM,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,SAAA,SAAA8Q;UACI5H,QAAAC,IAAA;UACA+H,KAAA6J,QAAA/b,aAAAzD,GAAAkgB,QAAA1O,UAAA;;QAEJpD,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAAH,GAAA,aAAA,SAAA8Q;UACI5H,QAAAC,IAAA;UACA+H,KAAA6J,QAAA/b,aAAAzD,GAAAkgB,QAAA1O,UAAA;UACAmE,KAAAkK,mBAAAI,WAAA7R,SAAA9M,QAAA+M,QAAA1B,WAAA2L,QAAA;;QAGJlK,SAAA9M,QAAA+M,QAAAxB,QAAAsH,YAAA,SAAAT;UACInQ,MAAAic,QAAAW,UAAA;;QAGJ/R,SAAA9M,QAAA+M,QAAAxB,QAAAuH,UAAA,SAAAV;UACInQ,MAAAic,QAAAW,UAAA;UAEA5c,MAAA4C,KAAA1C,aAAAzD,GAAA8N,WAAAjC,KAAA;UACAtI,MAAAsc,mBAAAI,WAAA7R,SAAA9M,QAAA+M,QAAA1B,WAAA2L,QAAA;;QAEJlK,SAAA9M,QAAA+M,QAAAxB,QAAAqH,YAAA;UAEI3Q,MAAAic,QAAAW,UAAA;UACA5c,MAAA6c,UAAAD,UAAA;;QAMJngB,GAAA2F,aAAAC;UACIhB,OAAA5E,GAAA6F,cAAAC;UACAC,cAAA,SAAAA,aAAAC,SAAApB;YACIrB,MAAA0C,YAAAD,SAAA;;UAEJE,eAAA,SAAAA,cAAAF,SAAApB;YACIrB,MAAA0C,YAAAD,SAAA;;WANoBxC,KAAA2C;QAU5B3C,KAAA6c,WAAA;QAEA7c,KAAA8c,cAAA;;MAGJra,aAAA,SAAAA,YAAAsa,MAAAna;QACI,QAAAma;SACI,KAAAvgB,GAAAqG,IAAAM;SACA,KAAA3G,GAAAqG,IAAAa;UACIyG,QAAAC,IAAA;UACA,QAAApK,KAAAgc,QAAAW,WACI/R,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAA2N,KAAA;UAEJ;;SACJ,KAAAvS,GAAAqG,IAAAma;UACI7S,QAAAC,IAAA;UAEApK,KAAA6c,YACIjS,SAAA9M,QAAA+M,QAAAxB,QAAA2B;;;MAOhBiS,gBAAA,SAAAA;QACI,IAAAta,OAAAnG,GAAAsb,YAAA9X,KAAAsc;QACA3Z,KAAA0B,SAAArE,KAAA2C;QACAiI,SAAA9M,QAAA+M,QAAAxB,QAAAkB;QACA/N,GAAAyX,YAAAiJ;;MAEJ/I,eAAA,SAAAA,cAAA/S,OAAAgT;QACI,QAAAA;SACI,KAAA;UAEI,QAAApU,KAAAgc,QAAAW,WACI/R,SAAA9M,QAAA+M,QAAAxB,QAAAjI,MAAA2N,KAAA;;;MAchBxK,QAAA,SAAAA,OAAAC;QACI,IAAAoG,SAAA9M,QAAA+M,QAAAxB,QAAAwH,aAAA;UACIjG,SAAA9M,QAAA+M,QAAA1B,WAAAoI,cAAA/M;UAEAxE,KAAA6b,aAAAY,YAAAzc,KAAA4b,YAAAhR,SAAA9M,QAAA+M,QAAA1B,WAAAoI,cAAAvR,KAAA4b;UACA5b,KAAAuc,SAAA1a,IAAA7B,KAAA6b,aAAAlZ,KAAAd,IAAA7B,KAAA+b,kBAAA1V;UAEArG,KAAAkc,eAAAM,SAAA5R,SAAA9M,QAAA+M,QAAA1B,WAAAkI,YAAA;UAEArR,KAAAoc,cAAAI,SAAAhP,SAAA5C,SAAA9M,QAAA+M,QAAA1B,WAAAmI;;;;;;;;;;;;ICtJZ,IAAA9H,UAAAT,QAAA;;;;;;;IACAvM,GAAAa;MACIC,SAAAd,GAAAe;MAEAK;QACIuf;UACIrf,SAAA;UACAC,MAAAvB,GAAA2f;;QAEJiB;UACItf,SAAA;UACAC,MAAAvB,GAAA2f;;QAEJkB,UAAA7gB,GAAA2f;QACAmB,WAAA9gB,GAAA2f;QACAoB,gBAAA/gB,GAAAuQ;QACAyQ,aAAAhhB,GAAAuQ;QACA0Q,UAAAjhB,GAAA+Y;QACAmI,WAAAlhB,GAAA+Y;QACAoI,YAAAnhB,GAAAwB;QACA4f,UAAAphB,GAAAwB;;MAGJ6f,aAAA,SAAAA;QACI,IAAAC,OAAAlT,SAAA9M,QAAA+M,QAAA1B,WAAA4L;QACA,IAAA+I,KAAA5Z,UAAA,GAAA;UACIiG,QAAA0H,MAAA;UACA;;QAEJjH,SAAA9M,QAAA+M,QAAA1B,WAAAiM,iBAAA0I,KAAA5Z,WACI0G,SAAA9M,QAAA+M,QAAA1B,WAAAiM,gBAAA;QAEJ,OAAA0I,KAAAlT,SAAA9M,QAAA+M,QAAA1B,WAAAiM;;MAGJ2I,oBAAA,SAAAA,mBAAAC,aAAAC;QACI,IAAAC,UAAA1hB,GAAA2hB,aAAAC,iBAAAH;QACA,IAAAC,SAAA;UACIF,YAAAhR,YAAAqR;UACAL,YAAAhR,YAAAsR,WAAAJ;;;MAIRK,cAAA,SAAAA;QACI/hB,GAAAyX,YAAA5L,KAAArI,KAAAyd;QACA,IAAAe,WAAAxe,KAAA6d;QACA1T,QAAAC,IAAA,aAAAoU;QACAxe,KAAAwe,WAAAA;QACA,IAAA,MAAAA,SAAAzgB,MAAA;UACIiC,KAAA4d,SAAA1G,SAAA;UACAlX,KAAA2d,WAAAzG,SAAA;UACAlX,KAAAqd,SAAAb,SAAA;UACAxc,KAAAsd,UAAAd,SAAAgC,SAAAvJ;UACAjV,KAAA+d,mBAAA/d,KAAAwd,aAAAgB,SAAArJ;UACAnV,KAAA6D,UAAAwE,KAAA;eACH;UACGrI,KAAA4d,SAAA1G,SAAA;UACAlX,KAAA2d,WAAAzG,SAAA;UACAlX,KAAAqd,SAAAb,SAAA;UACAxc,KAAAsd,UAAAd,SAAAgC,SAAAvJ;UACA,KAAA,IAAAnQ,IAAA,GAAAA,IAAA9E,KAAAwe,SAAAtJ,WAAAhR,QAAAY,KAAA;YACI,IAAAmZ,MAAAje,KAAAwe,SAAAtJ,WAAApQ;YACA,IAAA2Z,SAAAze,KAAAud,aAAAzY;YACA9E,KAAA+d,mBAAAU,QAAAR;;UAEJje,KAAA6D,UAAAwE,KAAA;;QAEJuC,SAAA9M,QAAA+M,QAAA1B,WAAAiM;;MAGJtV,QAAA,SAAAA;QAEItD,GAAAgc,OAAAH,OAAA,8BAAA,8BAAA,gCAAA,SAAA1G,KAAA+M;UACI,IAAA/M,KAAA;YACIxH,QAAA0H,MAAAF;YACA;;UAEJ,KAAA,IAAA7M,KAAA4Z,MAAAC,KACIniB,GAAA2hB,aAAAC,iBAAAM,MAAAC,IAAA7Z,GAAA8Z,YACIpiB,GAAA2hB,aAAAU,SAAAH,MAAAC,IAAA7Z,GAAA8Z;;QAIZ,IAAAzM,OAAAnS;QAEAA,KAAA6D,YAAA7D,KAAA2C,KAAA1C,aAAAzD,GAAA8N;QACAtK,KAAA6D,UAAA5C,GAAA,YAAAjB,KAAA8e,sBAAArM,KAAAzS;QACA4K,SAAA9M,QAAA+M,QAAAxB,QAAAsH,YAAA,SAAAT;UACI/F,QAAAC,IAAA,UAAA+F,KAAAC,UAAAF;UACAiC,KAAAxP,KAAAuU,SAAA;UACA/E,KAAA4M,cAAA;UACA5M,KAAAoM;;;MAQRzM,OAAA,SAAAA;QACI9R,KAAA2C,KAAAuU,SAAA;;MAGJ8H,cAAA,SAAAA;QACI,MAAAhf,KAAAwe,SAAAzgB,OACIiC,KAAA6D,UAAAwE,KAAA,6BAEArI,KAAA6D,UAAAwE,KAAA;QAEJuC,SAAA9M,QAAA+M,QAAA1B,WAAA2L;QACAlK,SAAA9M,QAAA+M,QAAAxB,QAAAgE;UACI+I,QAAA;;QAEJ,IAAAxL,SAAA9M,QAAA+M,QAAA1B,WAAA2L,SAAA,GAAA;UACIlK,SAAA9M,QAAA+M,QAAAxB,QAAA2B;UACAJ,SAAA9M,QAAA+M,QAAA1B,WAAA2L,QAAA;;QAEJtY,GAAAyX,YAAA5L,KAAArI,KAAA0d;;MAGJoB,uBAAA,SAAAA,sBAAA1d;QACI,IAAA0J,QAAA1J,MAAAkE;QACA,IAAAvH,OAAAqD,MAAArD;QACA+M,MAAAtF,KAAAyZ,QAAA,eAAA,KAAA,eAAAlhB,SACIiC,KAAA2C,KAAAuU,SAAA;;MAIR3S,QAAA,SAAAA,OAAAC;QACI,IAAAoG,SAAA9M,QAAA+M,QAAAxB,QAAAwH,eACI7Q,KAAA+e,cAAA,GAAA;UACI/e,KAAA+e,eAAAva;UACA,IAAAxE,KAAA+e,eAAA,GAAA;YACI/e,KAAA+e,cAAA;YACA/e,KAAAod,YAAAZ,SAAA;YAIAxc,KAAAgf;;UAEJhf,KAAAmd,iBAAAX,SAAA9V,KAAAwY,MAAAlf,KAAA+e,eAAA;;;MAKZI,uBAAA,SAAAA,sBAAA/d,OAAAgT;QACI,IAAA5G,SAAA4G,gBAAApU,KAAAwe,SAAAxJ,cAAA;UACIpK,SAAA9M,QAAA+M,QAAAxB,QAAAgE;YACI+I,QAAA;;UAEJpW,KAAA2C,KAAAuU,SAAA;UACA;;QAIJlX,KAAAgf","sourcesContent":["\nif (!cc.runtime) {\n// runtime not support dragonbones.\n\nvar NORMAL_ANIMATION_GROUP = \"normal\";\nvar AIM_ANIMATION_GROUP = \"aim\";\nvar ATTACK_ANIMATION_GROUP = \"attack\";\nvar JUMP_SPEED = -20;\nvar NORMALIZE_MOVE_SPEED = 3.6;\nvar MAX_MOVE_SPEED_FRONT = NORMALIZE_MOVE_SPEED * 1.4;\nvar MAX_MOVE_SPEED_BACK = NORMALIZE_MOVE_SPEED * 1.0;\nvar WEAPON_R_LIST = [\"weapon_1502b_r\", \"weapon_1005\", \"weapon_1005b\", \"weapon_1005c\", \"weapon_1005d\", \"weapon_1005e\"];\nvar WEAPON_L_LIST = [\"weapon_1502b_l\", \"weapon_1005\", \"weapon_1005b\", \"weapon_1005c\", \"weapon_1005d\"];\nvar GROUND = -200;\nvar G = -0.6;\n\ncc.Class({\n    extends: cc.Component,\n    editor: {\n        requireComponent: dragonBones.ArmatureDisplay\n    },\n\n    properties: {\n        touchHandler : {\n            default: null,\n            type: cc.Node\n        },\n\n        upButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        downButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        leftButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        rightButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        _bullets : [],\n        _left : false,\n        _right : false,\n        _isJumpingA : false,\n        _isJumpingB : false,\n        _isSquating : false,\n        _isAttackingA : false,\n        _isAttackingB : false,\n        _weaponRIndex : 0,\n        _weaponLIndex : 0,\n        _faceDir : 1,\n        _aimDir : 0,\n        _moveDir : 0,\n        _aimRadian : 0,\n        _speedX : 0,\n        _speedY : 0,\n        _armature : null,\n        _armatureDisplay : null,\n        _weaponR : null,\n        _weaponL : null,\n        _aimState : null,\n        _walkState : null,\n        _attackState : null,\n        _target : cc.p(0, 0),\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this._armatureDisplay = this.getComponent(dragonBones.ArmatureDisplay);\n        this._armature = this._armatureDisplay.armature();\n\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE, this._animationEventHandler, this);\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_OUT_COMPLETE, this._animationEventHandler, this);\n\n        this._armature.getSlot('effects_1').displayController = NORMAL_ANIMATION_GROUP;\n        this._armature.getSlot('effects_2').displayController = NORMAL_ANIMATION_GROUP;\n\n        this._weaponR = this._armature.getSlot('weapon_r').childArmature;\n        this._weaponL = this._armature.getSlot('weapon_l').childArmature;\n        this._weaponR.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n        this._weaponL.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._updateAnimation();\n        dragonBones.WorldClock.clock.add(this._armature);\n\n        if (this.touchHandler) {\n            // touch events\n            this.touchHandler.on(cc.Node.EventType.TOUCH_START, event => {\n                this.attack(true);\n            }, this);\n            this.touchHandler.on(cc.Node.EventType.TOUCH_END, event => {\n                this.attack(false);\n            }, this);\n            this.touchHandler.on(cc.Node.EventType.TOUCH_MOVE, event => {\n                var touches = event.getTouches();\n                var touchLoc = touches[0].getLocation();\n                this.aim(touchLoc.x, touchLoc.y);\n            }, this);\n        }\n\n        if (this.upButton) {\n            this.upButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this.jump();\n            }, this);\n        }\n\n        if (this.downButton) {\n            this.downButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this.squat(true);\n            }, this);\n            this.downButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this.squat(false);\n            }, this);\n            this.downButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this.squat(false);\n            }, this);\n        }\n\n        if (this.leftButton) {\n            this.leftButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this._left = true;\n                this._updateMove(-1);\n            }, this);\n            this.leftButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this._left = false;\n                this._updateMove(-1);\n            }, this);\n            this.leftButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this._left = false;\n                this._updateMove(-1);\n            }, this);\n        }\n\n        if (this.rightButton) {\n            this.rightButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this._right = true;\n                this._updateMove(1);\n            }, this);\n            this.rightButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this._right = false;\n                this._updateMove(1);\n            }, this);\n            this.rightButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this._right = false;\n                this._updateMove(1);\n            }, this);\n        }\n\n        // keyboard events\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            onKeyPressed: (keyCode, event) => {\n                this._keyHandler(keyCode, true);\n            },\n            onKeyReleased: (keyCode, event) => {\n                this._keyHandler(keyCode, false);\n            },\n        }, this.node);\n    },\n\n    _keyHandler: function(keyCode, isDown) {\n        switch(keyCode) {\n            case cc.KEY.a:\n            case cc.KEY.left:\n                this._left = isDown;\n                this._updateMove(-1);\n                break;\n            case cc.KEY.d:\n            case cc.KEY.right:\n                this._right = isDown;\n                this._updateMove(1);\n                break;\n            case cc.KEY.w:\n            case cc.KEY.up:\n                if (isDown) {\n                    this.jump();\n                }\n                break;\n            case cc.KEY.s:\n            case cc.KEY.down:\n                this.squat(isDown);\n                break;\n            case cc.KEY.q:\n                if (isDown) {\n                    this.switchWeaponR();\n                }\n                break;\n            case cc.KEY.e:\n                if (isDown) {\n                    this.switchWeaponL();\n                }\n                break;\n            case cc.KEY.space:\n                if (isDown) {\n                    this.switchWeaponR();\n                    this.switchWeaponL();\n                }\n                break;\n            default:\n                return;\n        }\n    },\n\n    _updateMove : function (dir) {\n        if (this._left && this._right) {\n            this.move(dir);\n        } else if (this._left) {\n            this.move(-1);\n        } else if (this._right) {\n            this.move(1);\n        } else {\n            this.move(0);\n        }\n    },\n\n    move : function(dir) {\n        if (this._moveDir === dir) {\n            return;\n        }\n\n        this._moveDir = dir;\n        this._updateAnimation();\n    },\n\n    jump : function () {\n        if (this._isJumpingA) {\n            return;\n        }\n\n        this._isJumpingA = true;\n        this._armature.animation.fadeIn(\"jump_1\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n        this._walkState = null;\n    },\n\n    squat : function(isSquating) {\n        if (this._isSquating === isSquating) {\n            return;\n        }\n\n        this._isSquating = isSquating;\n        this._updateAnimation();\n    },\n\n    attack : function (isAttacking) {\n        if (this._isAttackingA == isAttacking) {\n            return;\n        }\n\n        this._isAttackingA = isAttacking;\n    },\n\n    switchWeaponL : function() {\n        this._weaponL.removeEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._weaponLIndex = (this._weaponLIndex + 1) % WEAPON_L_LIST.length;\n        var newWeaponName = WEAPON_L_LIST[this._weaponLIndex];\n        this._weaponL = this._armatureDisplay.buildArmature(newWeaponName);\n        this._armature.getSlot('weapon_l').childArmature = this._weaponL;\n\n        this._weaponL.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n    },\n\n    switchWeaponR : function() {\n        this._weaponR.removeEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._weaponRIndex = (this._weaponRIndex + 1) % WEAPON_R_LIST.length;\n        var newWeaponName = WEAPON_R_LIST[this._weaponRIndex];\n        this._weaponR = this._armatureDisplay.buildArmature(newWeaponName);\n        this._armature.getSlot('weapon_r').childArmature = this._weaponR;\n\n        this._weaponR.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n    },\n\n    aim : function(x, y) {\n        // if (this._aimDir === 0) {\n        //     // this._aimDir = 10;\n        //     this._aimDir = 100;\n        //\n        // }\n        this._aimDir = 100;\n\n        this._target = this.node.parent.convertToNodeSpaceAR(cc.p(x, y));\n    },\n\n    update : function (dt) {\n        this._updatePosition();\n        this._updateAim();\n        this._updateAttack();\n        this._enterFrameHandler(dt);\n    },\n\n    onDisable : function() {\n        // clean the bullets\n        for (var i = this._bullets.length - 1; i >= 0; i--)\n        {\n            var bullet = this._bullets[i];\n            bullet.doClean();\n        }\n        this._bullets = [];\n\n        if (this._armature) {\n            // remove the _armature from world clock\n            dragonBones.WorldClock.clock.remove(this._armature);\n        }\n    },\n\n    addBullet : function(bullet) {\n        this._bullets.push(bullet);\n    },\n\n    _enterFrameHandler : function (dt) {\n        for (var i = this._bullets.length - 1; i >= 0; i--)\n        {\n            var bullet = this._bullets[i];\n            if (bullet.update())\n            {\n                this._bullets.splice(i, 1);\n            }\n        }\n        dragonBones.WorldClock.clock.advanceTime(dt);\n    },\n\n    _animationEventHandler: function(event) {\n        if (event.type === dragonBones.EventObject.FADE_IN_COMPLETE) {\n            if (event.detail.animationState.name === \"jump_1\") {\n                this._isJumpingB = true;\n                this._speedY = -JUMP_SPEED;\n                this._armature.animation.fadeIn(\"jump_2\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            } else if (event.detail.animationState.name === \"jump_4\") {\n                this._updateAnimation();\n            }\n        }\n        else if (event.type === dragonBones.EventObject.FADE_OUT_COMPLETE) {\n            if (event.detail.animationState.name === \"attack_01\") {\n                this._isAttackingB = false;\n                this._attackState = null;\n            }\n        }\n    },\n\n    _frameEventHandler : function (event) {\n        if (event.detail.name === \"onFire\") {\n            var firePointBone = event.detail.armature.getBone(\"firePoint\");\n            var localPoint = cc.p(firePointBone.global.x, -firePointBone.global.y);\n\n            var display = event.detail.armature.display;\n            var globalPoint = display.convertToWorldSpace(localPoint);\n\n            this._fire(globalPoint);\n        }\n    },\n\n    _fire : function (firePoint) {\n        // firePoint.x += Math.random() * 2 - 1;\n        // firePoint.y += Math.random() * 2 - 1;\n        //\n        // var armature = this._armatureDisplay.buildArmature(\"bullet_01\");\n        // var effect = this._armatureDisplay.buildArmature(\"fireEffect_01\");\n        // var radian = this._faceDir < 0 ? Math.PI - this._aimRadian : this._aimRadian;\n        // var bullet = new DragonBullet();\n        // bullet.init(this.node.parent._sgNode, armature, effect, radian + Math.random() * 0.02 - 0.01, 40, firePoint);\n        // this.addBullet(bullet);\n    },\n\n    _updateAnimation : function() {\n        if (this._isJumpingA) {\n            return;\n        }\n\n        if (this._isSquating) {\n            this._speedX = 0;\n            this._armature.animation.fadeIn(\"squat\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            this._walkState = null;\n            return;\n        }\n\n        if (this._moveDir === 0) {\n            this._speedX = 0;\n            this._armature.animation.fadeIn(\"idle\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            this._walkState = null;\n        } else {\n            if (!this._walkState) {\n                this._walkState = this._armature.animation.fadeIn(\"walk\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            }\n\n            if (this._moveDir * this._faceDir > 0) {\n                this._walkState.timeScale = MAX_MOVE_SPEED_FRONT / NORMALIZE_MOVE_SPEED;\n            } else {\n                this._walkState.timeScale = -MAX_MOVE_SPEED_BACK / NORMALIZE_MOVE_SPEED;\n            }\n\n            if (this._moveDir * this._faceDir > 0) {\n                this._speedX = MAX_MOVE_SPEED_FRONT * this._faceDir;\n            } else {\n                this._speedX = -MAX_MOVE_SPEED_BACK * this._faceDir;\n            }\n        }\n    },\n\n    _updatePosition : function() {\n        if (this._speedX !== 0) {\n            this.node.x += this._speedX;\n            var minX = -cc.visibleRect.width / 2;\n            var maxX = cc.visibleRect.width / 2;\n            if (this.node.x < minX) {\n                this.node.x = minX;\n            } else if (this.node.x > maxX) {\n                this.node.x = maxX;\n            }\n        }\n\n        if (this._speedY != 0) {\n            if (this._speedY > 5 && this._speedY + G <= 5) {\n                this._armature.animation.fadeIn(\"jump_3\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            }\n\n            this._speedY += G;\n\n            this.node.y += this._speedY;\n            if (this.node.y < GROUND) {\n                this.node.y = GROUND;\n                this._isJumpingA = false;\n                this._isJumpingB = false;\n                this._speedY = 0;\n                this._speedX = 0;\n                this._armature.animation.fadeIn(\"jump_4\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n                if (this._isSquating || this._moveDir) {\n                    this._updateAnimation();\n                }\n            }\n        }\n    },\n\n    _updateAim : function () {\n        // if (this._aimDir === 0) {\n        //     return;\n        // }\n\n        this._faceDir = this._target.x > this.node.x ? 1 : -1;\n        if (this.node.scaleX * this._faceDir < 0) {\n            this.node.scaleX *= -1;\n            if (this._moveDir) {\n                this._updateAnimation();\n            }\n        }\n\n        var aimOffsetY = this._armature.getBone(\"chest\").global.y * this.node.scaleY;\n\n        if (this._faceDir > 0) {\n            this._aimRadian = Math.atan2(-(this._target.y - this.node.y + aimOffsetY), this._target.x - this.node.x);\n        } else {\n            this._aimRadian = Math.PI - Math.atan2(-(this._target.y - this.node.y + aimOffsetY), this._target.x - this.node.x);\n            if (this._aimRadian > Math.PI) {\n                this._aimRadian -= Math.PI * 2;\n            }\n        }\n        // console.log(' anim radian  = ' + this._aimRadian);\n\n        let aimDir = 0;\n        if (this._aimRadian > 0) {\n            aimDir = -1;\n        } else {\n            aimDir = 1;\n        }\n\n        if (this._aimDir != aimDir) {\n            this._aimDir = aimDir;\n\n            // Animation mixing.\n            if (this._aimDir >= 0) {\n                this._aimState = this._armature.animation.fadeIn(\"aimUp\", 0.1, 1, 1, AIM_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup);\n            } else {\n                this._aimState = this._armature.animation.fadeIn(\n                    \"aimDown\", 0, 1,\n                    0, AIM_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup\n                );\n            }\n\n            // Add bone mask.\n            //_aimState.addBoneMask(\"pelvis\");\n        }\n\n        this._aimState.weight = Math.abs(this._aimRadian / Math.PI * 2);\n\n        //_armature.invalidUpdate(\"pelvis\"); // Only update bone mask.\n        // this._armature.invalidUpdate();\n    },\n\n    _updateAttack : function() {\n        if (!this._isAttackingA || this._isAttackingB) {\n            return;\n        }\n\n        this._isAttackingB = true;\n\n        // Animation mixing.\n        this._attackState = this._armature.animation.fadeIn(\n            \"attack_01\", -1, -1,\n            0, ATTACK_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup\n        );\n\n        this._attackState.autoFadeOutTime = this._attackState.fadeTotalTime;\n        this._attackState.addBoneMask(\"pelvis\");\n    }\n});\n\n\nvar DragonBullet = cc.Class({\n    name: 'DragonBullet',\n    _speedX : 0,\n    _speedY : 0,\n\n    _armature : null,\n    _armatureDisplay : null,\n    _effect : null,\n\n    init : function (parentNode, armature, effect, radian, speed, position) {\n        this._speedX = Math.cos(radian) * speed;\n        this._speedY = -Math.sin(radian) * speed;\n        var thePos = parentNode.convertToNodeSpace(position);\n\n        this._armature = armature;\n        this._armatureDisplay = this._armature.display;\n        this._armatureDisplay.setPosition(thePos);\n        this._armatureDisplay.rotation = radian * dragonBones.DragonBones.RADIAN_TO_ANGLE;\n        this._armature.animation.play(\"idle\");\n\n        if (effect) {\n            this._effect = effect;\n            var effectDisplay = this._effect.display;\n            effectDisplay.rotation = radian * dragonBones.DragonBones.RADIAN_TO_ANGLE;\n            effectDisplay.setPosition(thePos);\n            effectDisplay.scaleX = 1 + Math.random() * 1;\n            effectDisplay.scaleY = 1 + Math.random() * 0.5;\n            if (Math.random() < 0.5) {\n                effectDisplay.scaleY *= -1;\n            }\n\n            this._effect.animation.play(\"idle\");\n\n            dragonBones.WorldClock.clock.add(this._effect);\n            parentNode.addChild(effectDisplay);\n        }\n\n        dragonBones.WorldClock.clock.add(this._armature);\n        parentNode.addChild(this._armatureDisplay);\n    },\n\n    update : function() {\n        this._armatureDisplay.x += this._speedX;\n        this._armatureDisplay.y += this._speedY;\n\n        var worldPos = this._armatureDisplay.parent.convertToWorldSpace(this._armatureDisplay.getPosition());\n        if (\n            worldPos.x < -100 || worldPos.x >= cc.visibleRect.width + 100 ||\n            worldPos.y < -100 || worldPos.y >= cc.visibleRect.height + 100\n        ) {\n            this.doClean();\n            return true;\n        }\n\n        return false;\n    },\n\n    doClean : function() {\n        dragonBones.WorldClock.clock.remove(this._armature);\n        this._armatureDisplay.removeFromParent();\n        this._armature.dispose();\n\n        if (this._effect) {\n            dragonBones.WorldClock.clock.remove(this._effect);\n            this._effect.display.removeFromParent();\n            this._effect.dispose();\n        }\n    }\n});\n} // end of !cc.runtime\n","import PlayerData from './player-data';\nimport GameCtl from './game-ctl';\nconst Account = function () {\n    let that = {};\n    that.playerData = PlayerData();\n    that.gameCtl = GameCtl();\n    return that;\n};\nexport default Account;","import global from './../../global';\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    onLoad(){\n        this.initPos=this.node.position;\n        this.node.dead = false;\n        this.p=this.node.convertToNodeSpace(cc.p(-212,200));\n        this.actionFlyToPlayer=cc.moveTo(1.5,this.p);\n        // this.playerDir=cc.pNormalize(this.pp,this.node.position);\n        this.node.on('fly', ()=>{\n            if(this.flying){\n                this.node.removeFromParent(true);\n                return;\n            }\n            this.dead=true;\n            let action = cc.bezierTo(0.3, [this.node.position,cc.p(this.node.x, this.node.y + 200), cc.p(-530,350)]);\n            this.node.runAction(cc.sequence(action, cc.callFunc(()=>{\n                console.log('动作结束');\n                // this.node.dead = true;\n                // this.node.x = -1000;\n                this.node.removeFromParent(true);\n            })));\n            this.node.runAction(cc.scaleTo(0.4, 0.2,0.2));\n        });\n        this.node.on('pause',()=>{\n           //暂停\n           this.node.getComponent(cc.Animation).pause();\n        });\n        this.node.on('resume',()=>{\n           //继续\n            this.node.getComponent(cc.Animation).resume();\n        });\n    },\n    onEnable(){\n        console.log(\"on enable\");\n        this.node.position=this.initPos;\n        this.node.scale=1;\n    },\n    onDestroy(){\n        console.log('销毁硬笔');\n    },\n    update(dt){\n        if(this.dead||this.flying){\n            return;\n        }\n        //加速模式时自动飞向角色\n        if(global.account.gameCtl.state()===GameState.quick){\n            this.flying=true;\n            this.node.runAction(this.actionFlyToPlayer);\n        }\n    }\n});\n","import global from './../../global'\n\nconst AnimateState = {\n    invalid: -1,\n    default: 1,\n    idle: 2,\n    walk: 3,\n    run: 4,\n    jump: 5,\n    attack: 6\n};\ncc.Class({\n    extends: cc.Component,\n    editor: {\n        requireComponent: dragonBones.ArmatureDisplay\n    },\n\n    properties: {\n\n        defaultAnimate: \"\",\n        idleAnimate: \"\",\n        walkAnimate: \"\",\n        jumpAnimate: \"\",\n        attackAnimate: \"\",\n        happyWalkAnimate: \"\",\n        angryWalkAnimate: \"\",\n        saidWalkAnimate: \"\"\n\n\n    },\n    onLoad: function () {\n        this.displayTimeScale = 1;\n        this._armatureDisplay = this.getComponent(dragonBones.ArmatureDisplay);\n        this._armature = this._armatureDisplay.armature();\n        // this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE, this.animateCompleteListener, this);\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE, this.animateCompleteListener, this);\n        dragonBones.WorldClock.clock.add(this._armature);\n        this.state = AnimateState.invalid;\n        global.account.gameCtl.event.on('jump', (event) => {\n            console.log('跳起来');\n            this.setState(AnimateState.jump);\n        });\n\n        this.node.parent.on('jump-end', () => {\n            console.log('跳起来结束' + this.oldState);\n            if (this.oldState === AnimateState.walk || this.oldState === AnimateState.default) {\n                this.setState(AnimateState.walk);\n            }\n        });\n\n        this.node.parent.on('walk', (event) => {\n            console.log('走路');\n            this.setState(AnimateState.walk);\n        });\n\n        this.node.parent.on('idle', (event) => {\n            console.log('动画播放，idle');\n            this.animateSpeed = event.detail;\n            this.setState(AnimateState.idle);\n        });\n        this.node.parent.on('attack', (event) => {\n            console.log('播放攻击动画');\n            this.setState(AnimateState.attack);\n        });\n\n        this.node.parent.on('pause', () => {\n            this._armatureDisplay.timeScale = 0;\n        });\n        this.node.parent.on('resume', ()=>{\n            this._armatureDisplay.timeScale = 1;\n        });\n\n        this.node.parent.on('time-scale', (event)=>{\n           //时间降低\n           //  console.log('时间 降低' + this._armatureDisplay.timeScale);\n            this._armatureDisplay.timeScale = event.detail;\n        });\n\n        global.account.gameCtl.onRun(() => {\n            this.setState(AnimateState.default);\n        });\n        this.setState(AnimateState.default);\n    },\n    animateFrameListener() {\n\n    },\n    animateCompleteListener(event) {\n        console.log('播放动画完成');\n        console.log('event = ' + event.type);\n        // console.log('动作完成' + this.state);\n        // console.log('完成' + this.oldState);\n        // if (this.state === AnimateState.jump && this.oldState === AnimateState.walk){\n        //     console.log('重新跑起来');\n        //     this.setState(AnimateState.walk);\n        // }\n\n    },\n    idle: function () {\n    },\n    walk: function () {\n        this.setState(AnimateState.walk);\n    },\n    jump: function () {\n    },\n    attack: function () {\n    },\n    playAnimate: function (state) {\n\n    },\n    setState(state) {\n        if (this.state === state) {\n            return;\n        }\n        this.oldState = this.state;\n        switch (state) {\n            case AnimateState.default:\n                this._armature.animation.fadeIn(this.defaultAnimate, 0.2, -1, 0);\n                break;\n            case AnimateState.jump:\n\n                this._armature.animation.fadeIn(this.jumpAnimate, 0, 1, 0);\n                // setTimeout(()=>{\n                //     this.setState(AnimateState.walk);\n                // }, 300);\n                break;\n            case AnimateState.walk:\n\n                console.log('dragon bone walk');\n                this._armature.animation.fadeIn(this.walkAnimate, 0.2, -1, 0);\n\n\n                break;\n            case AnimateState.run:\n                break;\n            case AnimateState.idle:\n                console.log('播放idle 动画');\n                this._armature.animation.fadeIn(this.idleAnimate, 0.2, -1, 0);\n\n                break;\n            case AnimateState.attack:\n                this._armature.animation.fadeIn(this.attackAnimate, 0, 1, 0);\n\n                break;\n            default:\n                break;\n        }\n\n        this.state = state;\n    },\n    // update(dt) {\n    //     this._armatureDisplay.timeScale = defines.timeScale;\n    // }\n\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        numSpriteFrameList: {\n            default: [],\n            type: cc.SpriteFrame\n        },\n        mileIcon: {\n            default: null,\n            type: cc.Node\n        }\n    },\n    onLoad(){\n        this.numNodeMap = {};\n        this.setNumber(0);\n        this.node.on('distance-change',  (event)=> {\n            let detail = event.detail;\n            this.setNumber(detail);\n        })\n    },\n    setNumber(value){\n        // let node = cc.Node('node');\n        let str = value + '';\n        for (let i = str.length  - 1 ; i >= 0 ; i --){\n            let char = str[i];\n            if (this.numNodeMap.hasOwnProperty(i)){\n               this.numNodeMap[i].getComponent(cc.Sprite).spriteFrame = this.numSpriteFrameList[char];\n            }else {\n                this.numNodeMap[i] = new cc.Node('node');\n                this.numNodeMap[i].parent = this.node;\n                let sp = this.numNodeMap[i].addComponent(cc.Sprite);\n                sp.spriteFrame = this.numSpriteFrameList[char];\n                this.numNodeMap[i].x +=this.numNodeMap[i].width * i;\n                this.mileIcon.x = this.numNodeMap[i].x + this.numNodeMap[i].width * 0.5 + this.mileIcon.width * 0.5;\n\n            }\n        }\n\n    }\n});\n","import global from './../../global'\n\nconst EnemyState = {\n    invalid: -1,\n    run: 1,\n    tipsBegan: 2,\n    tipsEnd: 3\n\n};\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        body:cc.Node,\n    },\n\n    onLoad() {\n        this.state = EnemyState.invalid;\n        this.setState(EnemyState.run);\n        let animationName=\"idle\"+(parseInt(Math.random()*10)%3);\n        this.body.getComponent(dragonBones.ArmatureDisplay).playAnimation(animationName,-1);\n        this.node.on('fly', () => {\n            console.log('飞走');\n            let action1 = cc.bezierTo(0.5, [cc.p(78, 9), cc.p(86, 302), cc.p(418, 600)]);\n            let rotation = cc.rotateTo(0.5, 360 * 4);\n            let scal1 = cc.scaleTo(0.5, 0.2, 0.2);\n            let finished=cc.callFunc(() => {\n                console.log(\"enemy dead\");\n                this.node.dead = true;\n            });\n            this.node.runAction(cc.sequence(cc.spawn([action1,rotation,scal1]),finished));\n            this.node.getComponent(cc.BoxCollider).enabled=false;\n            // this.node.runAction(raaction);\n            // this.setState(EnemyState.tipsEnd);\n            this.node.isFly = true;\n        });\n\n        // global.account.gameCtl.onPause(() => {\n        //     this.node.emit('time-scale', 0);\n        // });\n        // global.account.gameCtl.onResume(() => {\n        //     this.node.emit('time-scale', defines.timeScale);\n        // });\n\n    },\n    onEnable(){\n        this.node.getComponent(cc.BoxCollider).enabled=true;\n        this.state=EnemyState.run;\n        this.node.scale=1;\n    },\n    update() {\n        if (this.state === EnemyState.run && !global.account.gameCtl.isQuick()) {\n            let dis = cc.pDistance(this.node.position, global.account.playerData.playerNode.position);\n            let player=global.account.playerData.playerNode.getComponent(\"player\");\n            let speedX=player.speeds[player.speedLevel];\n            let animationScale=speedX/player.speeds[0];\n            if (dis/(speedX/animationScale)<2.0) {\n                player.node.emit(\"attack\");\n                // this.setState(EnemyState.tipsEnd);\n                // this.setState(EnemyState.tipsBegan);\n            }\n            if (dis/speedX/animationScale<=2.0){\n                this.setState(EnemyState.tipsBegan);\n            }\n        }\n    },\n    setState(state) {\n        if (this.state === state) {\n            return\n        }\n        switch (state) {\n            case EnemyState.tipsBegan:\n                global.account.gameCtl.tipsBegan();\n                break;\n            case EnemyState.tipsEnd:\n                break;\n            default:\n                break;\n        }\n        this.state = state;\n    },\n    onDestroy() {\n        console.log('销毁了敌人');\n    }\n});\n","const EventListener = function (obj) {\n    let Register = {};\n\n    obj.on = function (type, method) {\n        if (Register.hasOwnProperty(type)){\n            Register[type].push(method);\n        }else {\n            Register[type] = [method];\n        }\n    }\n    ;\n    obj.fire = function (type) {\n        if (Register.hasOwnProperty(type)){\n            let handlerList = Register[type];\n            for (let i = 0 ; i < handlerList.length; i ++){\n                let args = [];\n                for (let j = 1 ; j < arguments.length ; j ++){\n                    args.push(arguments[j]);\n                }\n                let handler = handlerList[i];\n                // console.log('args = ' + JSON.stringify(args));\n                handler.apply(this, args);\n            }\n        }\n    };\n\n    obj.removeAllListeners=function(){\n        Register={};\n    };\n\n    return obj;\n};\nexport default EventListener;","import EventListener from './../utility/event-listener';\nconst GameState = {\n    invalid: -1,\n    run: 1,\n    pause: 2,\n    resume: 3,\n    tipsBegan: 4,\n    quick: 5,\n    endScene:6,\n};\nwindow.GameState=GameState;\nconst GameCtl = function () {\n    let that = {};\n    let _event = EventListener({});\n    that.event = _event;\n    let _state = GameState.invalid;\n    let _timeSpeed = undefined;\n    let _distance = 0;\n    let _distanceTimeCount = 0;\n\n    const setState = function (state, data) {\n        if (_state === state) {\n            return\n        }\n        switch (state) {\n            case GameState.run:\n                _event.fire('game-run');\n                break;\n            case GameState.pause:\n                _event.fire('game-pause');\n                break;\n            case GameState.resume:\n                _event.fire('game-resume');\n                break;\n            case GameState.tipsBegan:\n                _event.fire('tips-began', data);\n                _timeSpeed = -0.02;\n                break;\n            case GameState.quick:\n                //加速跑\n                _event.fire('quick');\n                break;\n            case GameState.endScene:\n                break;\n            default:\n                break;\n        }\n        _state = state;\n    };\n\n    that.pause = function () {\n        setState(GameState.pause);\n    };\n\n    that.run = function () {\n        setState(GameState.run);\n    };\n\n    that.resume = function () {\n        setState(GameState.resume);\n    };\n\n    that.tipsBegan = function (data) {\n        //开始答题\n        setState(GameState.tipsBegan, data);\n    };\n\n    that.tipsEnd = function (data) {\n        console.log('tips end = ' + JSON.stringify(data));\n        defines.timeScale = 1;\n        _event.fire('tips-end', data);\n        setState(GameState.resume);\n    };\n\n\n    that.quick = function () {\n        //加速\n        setState(GameState.quick);\n\n    };\n\n    that.qucikEnd = function () {\n        _event.fire('quick-end');\n        setState(GameState.run);\n    };\n\n    that.onQuickEnd = function (method) {\n        _event.on('quick-end', method);\n    };\n\n    that.attackEnd = function () {\n        //玩家攻击结束\n        _event.fire('attack-end');\n    };\n\n\n    that.onQuick = function (method) {\n        console.log('注册加速事件');\n        _event.on('quick', method);\n    };\n\n    that.onAttackEnd = function (method) {\n        _event.on('attack-end', method)\n    };\n\n    that.onTipsBegan = function (method) {\n        //开始答题\n        console.log('开始答题');\n        _event.on('tips-began', method);\n\n        //时间变慢\n    };\n\n    that.onTipsEnd = function (method) {\n        _event.on('tips-end', method);\n    };\n\n    that.isRunning = function () {\n        if (_state === GameState.run || _state === GameState.resume || _state === GameState.tipsBegan || _state === GameState.quick||_state===GameState.endScene) {\n            return true;\n        }\n        return false;\n    };\n\n    that.isQuick = function () {\n        if (_state === GameState.quick) {\n            return true;\n        }\n        return false;\n    };\n\n    that.onPause = function (method) {\n        _event.on('game-pause', method);\n    };\n\n    that.onRun = function (method) {\n        _event.on('game-run', method);\n    };\n\n    that.onResume = function (method) {\n        _event.on('game-resume', method);\n    };\n\n    that.onTimeScale = function (method) {\n        _event.on('time-scale', method);\n    };\n\n    that.onDistanceChange = function (method) {\n        _event.on('distance-change', method);\n    };\n\n    that.update = function (dt) {\n        if (that.isRunning()) {\n            if (_timeSpeed !== undefined) {\n                defines.timeScale += _timeSpeed;\n                _event.fire('time-scale', defines.timeScale);\n                if (defines.timeScale < 0.05) {\n                    defines.timeScale = 0.05;\n                    _timeSpeed = undefined;\n                }\n            }\n\n            if (_distanceTimeCount > 1) {\n                _distanceTimeCount = 0;\n                _distance++;\n                _event.fire('distance-change', _distance);\n            } else {\n                _distanceTimeCount += dt * defines.timeScale;\n            }\n\n        }\n    };\n\n    let _sceneList = [\"spring\", \"summer\", \"autumn\", \"winter\"];\n    let _currentScene = null, _currentSceneIndex = 0;\n\n    that.playerData = {\n        goldCount: 0,\n        distance: 0,\n        speedLevel: 0,\n        passedTime: 0\n    };\n\n    let _loadScene = function (name) {\n        // if(_currentScene){\n        //     _currentScene.runAction(cc.fadeOut(1.0));\n        //     _currentScene=null;\n        // }\n        cc.director.loadScene(name, function (err, scene) {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            console.log(\"load scene[\" + name + \"]success\");\n            _currentScene = scene;\n        });\n    };\n\n    that.start = function (opt) {\n        _loadScene(_sceneList[_currentSceneIndex]);\n    };\n\n    that.getSceneIndex = function () {\n        return _currentSceneIndex;\n    };\n\n    that.nextScene = function () {\n        _event.removeAllListeners();\n        _currentSceneIndex++;\n        that.pause();\n        console.log(_sceneList[_currentSceneIndex]);\n        if (_currentSceneIndex >= _sceneList.length) {\n            _currentSceneIndex = 0;\n        }\n        _loadScene(_sceneList[_currentSceneIndex]);\n    };\n\n    that.setState=setState;\n\n    that.state=function () {\n        return _state;\n    };\n\n    return that;\n};\nexport default GameCtl;","\nimport global from './../global';\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        playerNode: {\n            default: null,\n            type: cc.Node\n        },\n        uiNode:cc.Node,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n\n    },\n\n    start () {\n        let self=this;\n        console.log(\"on game loaded\");\n        //ipad分辨率则缩放ui\n        let size=cc.view.getFrameSize();\n        console.log(size.height,size.width);\n        if(size.height/size.width>0.6){\n            console.log(\"ipad,scale ui\");\n            this.uiNode.scale=0.75;\n        }\n        cc.director.getCollisionManager().enabled = true;\n\n        this.animation=this.node.getComponent(cc.Animation);\n        this.animation.on(\"finished\",this.onAnimationFinished.bind(this));\n        //加载资源\n        let resList = [];\n        for (let i in defines.config){\n            resList.push(defines.config[i]);\n        }\n\n        global.resourcesManager.loadList(resList, ()=>{\n            // this.animation.play(\"player_in\");\n            global.account.gameCtl.run();\n            self.playerNode.emit(\"walk\");\n        });\n    },\n    onAnimationFinished(event){\n        var state = event.detail;    // state instanceof cc.AnimationState\n        var type = event.type;       // type === 'play';\n        if(state.name===\"player_in\"){\n            let self=this;\n            self.playerNode.emit('idle');\n            setTimeout(function () {\n                global.account.gameCtl.run();\n                self.playerNode.emit(\"walk\");\n            },1500)\n        }\n    },\n    update(dt){\n        global.account.gameCtl.update(dt);\n    }\n});\n","import Account from './data/account'\nimport ResourcesManager from './utility/resources-manager'\nimport PoolManager from './utility/pool-manager'\nvar global = {};\nglobal.account = Account();\nglobal.resourcesManager = ResourcesManager();\nglobal.poolManager = PoolManager();\nexport default global;","import global from '../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        accY: 0,\n        jumpSpeed: 0,\n    },\n    onLoad(){\n        let self=this;\n        let oldAccY = this.accY;\n        let oldJumpSpeed = this.jumpSpeed;\n        global.account.gameCtl.event.on(\"speed-changed\",function(opt){\n            if(opt.currentLevel===0){\n                self.jumpSpeed= oldJumpSpeed;\n            }else{\n                self.jumpSpeed= self.jumpSpeed+100;\n            }\n        });\n        global.account.gameCtl.event.on('jump', this.jump.bind(this));\n        this.initPosY = this.node.position.y;\n        this.timeSubSpeed = 0;\n    },\n    jump(){\n        console.log(\"on jump\");\n        if(this.speedY===undefined){\n            this.speedY =this.jumpSpeed;\n        }\n    },\n    playJumpSound(sound){\n        if (!this.playedSound){\n            this.playedSound=true;\n            cc.audioEngine.play(sound,false,1);\n        }\n    },\n    update: function (dt) {\n        if (this.speedY !== undefined){\n            this.node.position = cc.p(this.node.position.x, this.node.position.y + this.speedY * dt * defines.timeScale);\n            this.speedY += (this.accY * dt * defines.timeScale);\n        }\n        if (this.node.position.y <= this.initPosY && this.speedY !== undefined){\n            this.node.position = cc.p(this.node.position.x, this.initPosY);\n            this.speedY = undefined;\n            console.log('落地');\n            this.node.emit('jump-end');\n            this.playedSound=false;\n        }\n\n        // if (defines.timeScale > 0.1 && this.timeSubSpeed !== 0){\n        //     defines.timeScale += this.timeSubSpeed;\n        //     setTimeout(()=> {\n        //         defines.timeScale = 1;\n        //         this.timeSubSpeed = 0;\n        //     }, 1000);\n        // }\n\n    }\n});\n","// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        let size=cc.view.getFrameSize();\n        if(parseInt(size.width/size.height*100)===75){\n            console.log(\"4:3\");\n        }\n    },\n\n    start () {\n        \n    },\n    onEnterGameClicked(){\n        cc.director.loadScene(\"spring\", function (err, scene) {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            console.log(\"load scene[\" + name + \"]success\");\n            _currentScene = scene;\n        });\n    }\n\n    // update (dt) {},\n});\n","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    onLoad() {\n\n    },\n    onButtonClick(event, customData){\n        switch (customData){\n            case 'resume':\n                global.account.gameCtl.resume();\n                this.node.destroy();\n                cc.audioEngine.resumeAll();\n                break;\n            default:\n                break;\n        }\n    }\n});\n","const TitleType = {\n    'say': 1,\n    'listen': 2\n};\n\nconst Title = function () {\n\n};\nlet PlayerData = function () {\n    let that = {};\n    that.titleList = [];\n    that.goldCount = 0;\n    that.distance=0;\n    that.sceneDistance=100;\n    that.speedLevel=0;\n    that.speed=400;\n    that.passedTime=0;\n    that.power=0;\n\n    that.questions = [{type:2,answer_index:1,word:\"bag\",image_urls:[\"http://47.52.247.115/1.jpg\",\"http://47.52.247.115/2.png\",\"http://47.52.247.115/3.jpg\"]},\n        {type:1,word:\"bag\",image_url:\"http://47.52.247.115/2.png\"}];\n    that.questionIndex=0;\n    // that.initTitle = function (data) {\n    //     for (let i = 0 ; i < data.length ; i ++){\n    //\n    //     }\n    // };\n    // that.initTitle(that.gameData);\n    return that;\n};\nexport default PlayerData;\n","// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\nimport global from './../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        body: {\n            default: null,\n            type: cc.Node\n        },\n        car:cc.Node,\n        jumpAudio: cc.AudioClip,\n        attackAudio: cc.AudioClip,\n        eatAudio: cc.AudioClip,\n        beAttacked: cc.AudioClip,\n        // backgroundMusic: cc.AudioClip,\n        auCar:cc.AudioClip,\n        speeds: [cc.Float],\n        speedLevel: 0,\n        distanceCurrentScene:0,\n        superPowerDuration:10,\n        superSpeed:700,\n    },\n\n    onLoad(){\n        this.passedTimeSuper=0;\n        this.speedLevel=global.account.playerData.speedLevel;\n        this.speed=global.account.playerData.speed;\n        cc.audioEngine.play(this.backgroundMusic, true, 1);\n        global.account.gameCtl.onTipsBegan(()=> {\n            //游戏暂停注册\n            console.log('游戏暂停');\n            // this.node.emit('idle');\n            // this.node.emit('time-scale');\n\n        });\n        global.account.gameCtl.onTipsEnd((data)=> {\n            console.log('on tip end');\n            if(global.account.playerData.power>=4){\n                this.enterSuperMode();\n            }\n            this.tipsResult = data.result;\n            // this.node.emit('attack');\n            this.node.emit('time-scale', 1);\n        });\n        this.node.zIndex = 1;\n        global.account.gameCtl.event.on('jump', this.onJump.bind(this));\n\n        global.account.gameCtl.onTimeScale(()=> {\n            this.node.emit('time-scale', defines.timeScale);\n        });\n\n        global.account.gameCtl.onPause(()=> {\n            this.node.emit('time-scale', 0);\n        });\n        global.account.gameCtl.onResume(()=> {\n            this.node.emit('time-scale', defines.timeScale);\n        });\n        global.account.playerData.playerNode = this.node;\n    },\n\n    getNowSpeed() {\n        return this.speeds[this.speedLevel];\n    },\n\n    onJump(event){\n        console.log(\"on jump audio\");\n        let com = this.node.getComponent(\"jump\");\n        com.playJumpSound(this.jumpAudio);\n    },\n\n    onCollisionEnter: function (other, self) {\n        if (other.getComponent('enemy')) {\n            cc.audioEngine.play(this.attackAudio, false, 1);\n            if(global.account.gameCtl.state()!==GameState.quick){\n                other.node.emit('fly');\n                this.node.emit('walk');\n                // setTimeout(()=> {\n                //     this.node.emit('walk');\n                // }, 1);\n\n                this.speedLevel++;\n                this.speedLevel = Math.min(this.speedLevel, this.speeds.length - 1);\n                this.changeSpeed(this.speeds[this.speedLevel]);\n            }else{\n                other.node.emit('fly');\n            }\n        }\n\n        if (other.getComponent(\"stub-tag\")&&global.account.gameCtl.state()!==GameState.quick) {\n            this.speedLevel--;\n            this.speedLevel = Math.max(this.speedLevel, 0);\n            this.changeSpeed(this.speeds[this.speedLevel]);\n            cc.audioEngine.play(this.beAttacked, false, 1);\n            let animate = this.body.getComponent(cc.Animation);\n            animate.play(\"be-attacked\");\n        }\n        if (other.getComponent('coin')) {\n            cc.audioEngine.play(this.eatAudio, false, 1);\n            other.node.emit('fly');\n            global.account.playerData.goldCount++;\n        }\n    },\n    changeSpeed(newSpeed){\n        global.account.playerData.speed=newSpeed;\n        this.node.emit(\"time-scale\", newSpeed / this.speeds[0]);\n        global.account.gameCtl.event.fire(\"speed-changed\", {\n            currentLevel: this.speedLevel,\n            maxLevel: this.speeds.length - 1,\n            speedValue: newSpeed\n        });\n    },\n\n    enterSuperMode(){\n        this.body.active=false;\n        this.car.active=true;\n        this.passedTimeSuper=0;\n\n        this.carAudiosID=cc.audioEngine.play(this.auCar,true);\n\n        this.changeSpeed(this.superSpeed);\n    },\n\n    exitSuperMode(){\n        this.passedTimeSuper=0;\n        this.body.active=true;\n        this.car.active=false;\n\n        if(this.carAudiosID){\n            cc.audioEngine.stop(this.carAudiosID);\n        }\n\n        global.account.gameCtl.qucikEnd();\n        this.changeSpeed(this.speeds[this.speedLevel]);\n    },\n\n    update(dt){\n        if(!global.account.gameCtl.isRunning()||global.account.gameCtl.state()===GameState.tipsBegan){\n            return;\n        }\n\n        let speed=0;\n        if (global.account.gameCtl.state()!==GameState.quick){\n            speed=this.speeds[this.speedLevel];\n        }else{\n            speed=this.superSpeed;\n            this.passedTimeSuper+=dt;\n            if(this.passedTimeSuper>=this.superPowerDuration){\n                this.exitSuperMode();\n            }\n        }\n\n        if (global.account.gameCtl.state()===GameState.endScene){\n            this.node.x+=speed*dt;\n            if (this.node.x>500){\n                this.node.active=false;\n                this.exitSuperMode();\n                global.account.gameCtl.nextScene();\n            }\n        }\n\n        let distance=(speed*dt/150);\n        global.account.playerData.distance+=distance;\n        this.distanceCurrentScene+=distance;\n        if(this.distanceCurrentScene>100){\n            global.account.gameCtl.setState(GameState.endScene);\n        }\n    },\n    onDisable(){\n        if(this.carAudiosID){\n            cc.audioEngine.stop(this.carAudiosID);\n        }\n    },\n});\n","const PoolManager = function () {\n    let that = {};\n    let PoolResources = {};\n    let PrefabResources = {};\n    that.createPool = function (type, prefab, count) {\n        if (!PoolResources.hasOwnProperty(type)){\n            PoolResources[type] = new cc.NodePool();\n            PrefabResources[type] = prefab;\n            let c = 5;\n            if (count){\n                c = count;\n            }\n            for (let i = 0 ; i < c ; i ++){\n                let node = cc.instantiate(prefab);\n                PoolResources[type].put(node);\n            }\n        }\n    };\n    that.getNode = function (type) {\n        let node = null;\n        if (PoolResources.hasOwnProperty(type)){\n            if (PoolResources[type].size() > 0){\n                node = PoolResources[type].get();\n            }else {\n                node = cc.instantiate(PrefabResources[type]);\n                PoolResources[type].put(node);\n\n            }\n            return node;\n        }\n        return null;\n    };\n\n    that.putNode = function (type,node) {\n        if (PoolResources.hasOwnProperty(type)){\n            PoolResources[type].put(node);\n\n        }\n    };\n    // that.pui\n\n    return that;\n};\nexport default PoolManager;","const ResourcesManager = function () {\n    let that = {};\n    that.resources = {};\n    const load = function (resPath, cb) {\n        cc.loader.loadRes(resPath, function (err, res) {\n            if (err){\n                console.log('err =' + JSON.stringify(err));\n            }\n            if (cb){\n                cb(resPath, res);\n            }\n        })\n    };\n    that.loadList = function (resList,cb) {\n        let loadIndex = 0;\n        const loadCb = function (resPath, res) {\n            that.resources[resPath] = res;\n            loadIndex ++;\n            if (loadIndex === resList.length){\n                if (cb){\n                    //加载完成\n                    cb();\n                }\n            }\n        };\n        for (let i = 0 ; i < resList.length ; i ++){\n            load(resList[i], loadCb);\n        }\n    };\n    \n    return that;\n};\nexport default ResourcesManager;","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        bgList: {\n            default: [],\n            type: cc.Node\n        },\n        bgSpeed: 0,\n        speedOffset:0,\n        bgType:\"middle\",\n        speedScaleRate: 0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        let self=this;\n        if(self.bgType===\"middle\"){\n            self.bgSpeed=global.account.playerData.speed+self.speedOffset;\n        }\n        if(self.bgType===\"forward\"){\n            self.bgSpeed=global.account.playerData.speed+80+self.speedOffset;\n        }\n        if(self.bgType===\"after\"){\n            self.bgSpeed=global.account.playerData.speed-200+self.speedOffset;\n        }\n        global.account.gameCtl.event.on(\"speed-changed\",function (opt) {\n            if(self.bgType===\"middle\"){\n                console.log(\"on speed changed,\",opt.speedValue);\n                self.bgSpeed=opt.speedValue+self.speedOffset;\n            }\n            if(self.bgType===\"forward\"){\n                console.log(\"on speed changed,\",opt.speedValue);\n                self.bgSpeed=opt.speedValue+80+self.speedOffset;\n            }\n            if(self.bgType===\"after\"){\n                console.log(\"on speed changed,\",opt.speedValue);\n                self.bgSpeed=opt.speedValue-200+self.speedOffset;\n            }\n        });\n    },\n    update(dt){\n        if(!global.account.gameCtl.isRunning()||this.bgList.length<=0||global.account.gameCtl.state()===GameState.endScene){\n            return;\n        }\n        //移动背景\n        let dis=this.bgSpeed*dt*defines.timeScale;\n        for (let i in this.bgList){\n            this.bgList[i].x-=dis;\n        }\n\n        //移出屏幕则删除\n        if(this.bgList[0].x<=-2000){\n            this.node.removeFromParent();\n        }\n    }\n});\n","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        bgList: {\n            default: [],\n            type: cc.Node\n        },\n        bgSpeed: 0,\n        bgType: \"middle\",\n        speedScaleRate: 0,\n        speedOffset: 0,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        let self = this;\n        if (self.bgType === \"middle\") {\n            self.bgSpeed = global.account.playerData.speed+self.speedOffset;\n        }\n        if (self.bgType === \"forward\") {\n            self.bgSpeed = global.account.playerData.speed + 80 + self.speedOffset;\n        }\n        if (self.bgType === \"after\") {\n            self.bgSpeed = global.account.playerData.speed - 200 + self.speedOffset;\n        }\n        global.account.gameCtl.event.on(\"speed-changed\", function (opt) {\n            if (self.bgType === \"middle\") {\n                console.log(\"on speed changed,\", opt.speedValue);\n                self.bgSpeed = opt.speedValue + self.speedOffset;\n            }\n            if (self.bgType === \"forward\") {\n                console.log(\"on speed changed,\", opt.speedValue);\n                self.bgSpeed = opt.speedValue + 80 + self.speedOffset;\n            }\n            if (self.bgType === \"after\") {\n                console.log(\"on speed changed,\", opt.speedValue);\n                self.bgSpeed = opt.speedValue - 200 + self.speedOffset;\n            }\n        });\n    },\n    update(dt){\n        if (!global.account.gameCtl.isRunning()||global.account.gameCtl.state()===GameState.endScene) {\n            return;\n        }\n        //移动背景\n        let dis = this.bgSpeed * dt * defines.timeScale;\n        for (let i in this.bgList) {\n            this.bgList[i].x -= dis;\n        }\n\n        //移出屏幕则放到最后\n        if (this.bgList[0].x <= -1000) {\n            let item = this.bgList.shift();\n            let lastItem = this.bgList[this.bgList.length - 1];\n            item.x = lastItem.x + lastItem.width;\n            this.bgList.push(item);\n        }\n    }\n});\n","import global from \"../global\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        terrainPrefabs:[cc.Prefab],\n\n        ratesShowTerrain:[cc.Float],\n        activeEnemies:[cc.Prefab],\n        wordEnemies:[cc.Prefab],\n        superModeTerrain:cc.Prefab,\n\n        distanceAddTerrain:10,\n        durationAddEnemy:20,\n        durationAddWordEnemy:60,\n        durationAddSuperTerrain:3,\n\n        initPosNodeTerrain:cc.Node,\n        initPosNodeActiveEnemy:cc.Node,\n    },\n    onLoad() {\n        this.passedTimeForTerrain=0;\n        this.passedTimeForEnemy=0;\n        this.passedTimeForWordEnemy=0;\n        this.passedTimeForSuper=0;\n\n        this.sceneIndex=global.account.gameCtl.getSceneIndex();\n\n        this.terrains=[];\n        let prefabs=this.terrainPrefabs[this.sceneIndex];\n        for (let i=0;i<prefabs.length;i++){\n            this.terrains.push(cc.instantiate(prefabs[i]));\n        }\n    },\n\n    randTerrain(terrainList,rateList){\n        if(terrainList.length!==rateList.length){\n            console.error(\"terrainList and rateList must have same length\");\n            return;\n        }\n        let v=Math.random();\n        let ret=null;\n        for (let i=0;i<rateList.length;i++){\n            if (i>=rateList.length-1){\n                ret=cc.instantiate(terrainList[i]);\n                break;\n            }\n            if (v<rateList[i]){\n                ret=cc.instantiate(terrainList[i]);\n                break;\n            }\n        }\n        // terrainList.splice(terrainList.indexOf(ret),1);\n        return ret;\n    },\n    update(dt) {\n        if(!global.account.gameCtl.isRunning()||global.account.gameCtl.state()===GameState.tipsBegan){\n            return;\n        }\n        //每一关临近终点时不添加障碍\n        if (global.account.playerData.distance%global.account.playerData.sceneDistance>=global.account.playerData.sceneDistance-30){\n            return;\n        }\n\n        //添加单词怪物，加速状态不出怪物\n        this.passedTimeForWordEnemy+=dt;\n        if(this.passedTimeForWordEnemy>=this.durationAddWordEnemy&&global.account.gameCtl.state()!==GameState.quick){\n            this.addWordEnemy();\n            this.passedTimeForWordEnemy=0;\n            this.passedTimeForTerrain=0;    //如果出了题目则下次不增加地形\n        }\n\n        if (global.account.gameCtl.state()===GameState.quick){\n            this.passedTimeForSuper-=dt;\n            if(this.passedTimeForSuper<=0){\n                console.log(\"add super terrain\");\n                this.passedTimeForSuper=this.durationAddSuperTerrain;\n                let terrain=cc.instantiate(this.superModeTerrain);\n                terrain.position=this.initPosNodeTerrain.position;\n                terrain.parent=this.initPosNodeTerrain.parent;\n            }\n        }\n\n        //添加预制作的地形\n        this.passedTimeForTerrain+=dt;\n        if (parseInt(global.account.playerData.distance%global.account.playerData.sceneDistance)%this.distanceAddTerrain===0&&this.passedTimeForTerrain>=1){\n            console.log(\"enter add terrain:\",this.passedTimeForTerrain,this.node._id);\n            //单词类的敌人不刷在靠近地形的地方\n            if(this.passedTimeForWordEnemy>=this.durationAddWordEnemy-3){\n                this.passedTimeForWordEnemy=this.durationAddWordEnemy-3;\n            }\n            this.passedTimeForTerrain=0;\n            this.addTerrain();\n        }\n\n        //添加移动的怪物\n        this.passedTimeForEnemy+=dt;\n        if (this.passedTimeForEnemy>=this.durationAddEnemy){\n            this.addActiveEnemy();\n            this.passedTimeForEnemy=0;\n        }\n    },\n    addActiveEnemy(){\n        //每10秒0.5概率出飞行敌人\n        let v=Math.random();\n        if(v>0.5){\n            return;\n        }\n        let enemy=cc.instantiate(this.activeEnemies[this.sceneIndex]);\n        enemy.position=this.initPosNodeActiveEnemy.position;\n        enemy.parent=this.initPosNodeActiveEnemy.parent;\n    },\n    addTerrain(){\n        let terrain=this.randTerrain(this.terrainPrefabs,this.ratesShowTerrain);\n        if(this.lastTerrain&&this.lastTerrain.width+this.lastTerrain.x>this.initPosNodeTerrain.position.x-400){\n            return;\n        }\n        terrain.position=this.initPosNodeTerrain.position;\n        for (let i in terrain.children){\n            terrain.children[i].enable=true;\n        }\n        terrain.parent=this.initPosNodeTerrain.parent;\n        this.lastTerrain=terrain;\n    },\n    addWordEnemy(){\n        let enemy=cc.instantiate(this.wordEnemies[this.sceneIndex]);\n        enemy.position=this.initPosNodeTerrain.position;\n        enemy.parent=this.initPosNodeTerrain.parent;\n    }\n});\n","// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stubSpriteFrameList: {\n            default: [],\n            type: cc.SpriteFrame\n        }\n    },\n    initWithData: function (data) {\n        this.node.dead=false;\n        this.speedX = data.speed;\n        this.oldSpeedX = this.speedX;\n        let isQuick = data.isQuick;\n        console.log('is qucik' + isQuick);\n        if (isQuick){\n            this.node.emit('quick');\n        }\n\n        this.fly = false;\n    },\n    onLoad(){\n        let self=this;\n        if (this.stubSpriteFrameList.length !== 0){\n            this.addComponent(cc.Sprite).spriteFrame = this.stubSpriteFrameList[0];\n            let collider = this.node.addComponent(cc.BoxCollider);\n            collider.size = cc.size(this.node.width, this.node.height);\n        }\n        this.node.on('fly', ()=>{\n            this.fly = true;\n            console.log('飞走了');\n        });\n\n        global.account.gameCtl.event.on(\"speed-changed\",function(opt){\n            // console.log(\"player speed changed:\",opt.speedValue);\n            // self.speedX =opt.speedValue;\n        });\n    },\n    update(dt){\n        if (global.account.gameCtl.isRunning()){\n            if (this.speedX && this.fly === false){\n                this.node.position = cc.p(this.node.position.x - this.speedX * dt * defines.timeScale, this.node.position.y);\n            }\n        }\n\n        if ((this.node.position.x + this.node.width * 0.5) < cc.winSize.width * -0.5 ){\n            this.node.dead = true;\n        }\n    }\n});\n","import global from '../global'\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        totalTime: 0,\n        progressTime: {\n            default: null,\n            type: cc.ProgressBar\n        },\n        processTimeSprite:cc.Node,\n        btnJump: {\n            default: null,\n            type: cc.Node\n        },\n        progressSpeed: {\n            default: null,\n            type: cc.ProgressBar\n        },\n        labelCoinCount: {\n            default: null,\n            type: cc.Label\n        },\n        labelDistance:cc.Label,\n        progressSuperPower:cc.ProgressBar,\n        pauseLayer: {\n            default: null,\n            type: cc.Prefab\n        },\n        particle:cc.Node,\n    },\n\n    start(){\n        //初始化ui数据\n        this.labelCoinCount.string=global.account.playerData.goldCount;\n        this.progressSpeed.progress=global.account.playerData.speedLevel/4;\n        this.progressTime.progress=(this.totalTime-global.account.playerData.passedTime)/this.totalTime;\n    },\n    onLoad() {\n        // global.account.playerData.passedTime = 0;\n        // global.account.gameCtl.onPause(()=>{\n        //    //游戏暂停\n        //    this.btnJump.opacity = 100;\n        //    this.runButton.opacity = 100;\n        // });\n        let self=this;\n        this.progressSuperPower.progress=global.account.playerData.power/4;\n        global.account.gameCtl.event.on(\"speed-changed\",function(opt){\n            self.progressSpeed.progress=opt.currentLevel/opt.maxLevel;\n        });\n\n        global.account.gameCtl.event.on(\"quick\",function(opt){\n            console.log(\"quick mode begin\");\n            self.btnJump.getComponent(cc.Button).enabled=false;\n        });\n        global.account.gameCtl.event.on(\"quick-end\",function(opt){\n            console.log(\"game resume\");\n            self.btnJump.getComponent(cc.Button).enabled=true;\n            self.progressSuperPower.progress=global.account.playerData.power/4;\n        });\n\n        global.account.gameCtl.onTipsBegan((data) => {\n            this.btnJump.opacity = 100;\n            // this.runButton.opacity = 100;\n        });\n        global.account.gameCtl.onTipsEnd((data)=>{\n            this.btnJump.opacity = 255;\n            // this.runButton.opacity = 255;\n            this.node.getComponent(cc.Animation).play(\"speed_blink\");\n            this.progressSuperPower.progress=global.account.playerData.power/4;\n        });\n        global.account.gameCtl.onAttackEnd(() => {\n            //玩家攻击结束\n            this.btnJump.opacity = 255;\n            this.runButton.opacity = 255;\n        });\n        // global.account.gameCtl.onDistanceChange((distance)=>{\n        //     this.distanceNode.emit('distance-change', distance);\n        // });\n\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            onKeyPressed: (keyCode, event) => {\n                this._keyHandler(keyCode, true);\n            },\n            onKeyReleased: (keyCode, event) => {\n                this._keyHandler(keyCode, false);\n            },\n        }, this.node);\n\n        this.isCanRun = false;\n        // this.runButtonIcon.active = false;\n        this.passedPixel=0;\n\n    },\n    _keyHandler(code, isDown){\n        switch (code){\n            case cc.KEY.up:\n            case cc.KEY.space:\n                console.log('跳');\n                if (this.btnJump.opacity === 255){\n                    global.account.gameCtl.event.fire('jump');\n                }\n                break;\n            case cc.KEY.enter:\n                console.log('加速');\n                // this.player.emit('quick');\n                if (this.isCanRun){\n                    global.account.gameCtl.quick();\n                }\n                break;\n            default:\n                break;\n        }\n    },\n    onPauseClicked(){\n        let node = cc.instantiate(this.pauseLayer);\n        node.parent = this.node;\n        global.account.gameCtl.pause();\n        cc.audioEngine.pauseAll();\n    },\n    onButtonClick: function (event, customData) {\n        switch (customData) {\n            case 'up-button':\n                //上按钮\n                if (this.btnJump.opacity === 255) {\n                    global.account.gameCtl.event.fire('jump');\n                }\n                break;\n            case 'run-button':\n                // if (this.runButton.opacity === 255 && this.isCanRun) {\n                //     console.log('run button');\n                //     global.account.gameCtl.quick();\n                //     // this.runButtonIcon.active = false;\n                // }\n                break;\n            default:\n                break;\n        }\n    },\n    update(dt) {\n        if (global.account.gameCtl.isRunning()){\n            global.account.playerData.passedTime += dt;\n            //时间进度条\n            this.progressTime.progress=(this.totalTime - global.account.playerData.passedTime) / this.totalTime;\n            this.particle.x=this.progressTime.node.x+this.processTimeSprite.width;    //移动粒子跟随时间进度条\n            //吃到的金币数\n            this.labelCoinCount.string = global.account.playerData.goldCount + '';\n            //更新跑过的米数\n            this.labelDistance.string=parseInt(global.account.playerData.distance);\n\n\n            // if (global.account.gameCtl.isQuick()){\n            //     if (this.progressSpeed.progress > 0){\n            //         this.progressSpeed.progress -= this.progressSpeedSpeed;\n            //         if (this.progressSpeed.progress <= 0){\n            //             this.progressSpeed.progress = 0;\n            //             this.isCanRun = false;\n            //             global.account.gameCtl.qucikEnd();\n\n            //         }\n            //     }\n            // }else {\n            //     if (this.progressSpeed.progress < 1){\n            //         this.progressSpeed.progress += this.progressSpeedSpeed;\n            //         if (this.progressSpeed.progress >= 1){\n            //             this.progressSpeed.progress = 1;\n            //             console.log('可以点击开始了');\n            //             this.isCanRun = true;\n            //             this.runButtonIcon.active = true;\n\n            //         }\n            //     }\n            // }\n\n        }\n    }\n});\n","import global from '../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        timeCutDownLabel: {\n            default: null,\n            type: cc.Label\n        },\n        resultLabel: {\n            default: null,\n            type: cc.Label\n        },\n        labelTip:cc.Label,\n        labelWord:cc.Label,\n        spAnswerList:[cc.Sprite],\n        spReadImage:cc.Sprite,\n        auCardIn:cc.AudioClip,\n        auSuccess:cc.AudioClip,\n        nodeChoose:cc.Node,\n        nodeRead:cc.Node\n    },\n\n    getQuestion(){\n        let list=global.account.playerData.questions;\n        if(list.length<=0){\n            console.error(\"question list is empty\");\n            return;\n        }\n        if(global.account.playerData.questionIndex>=list.length){\n            global.account.playerData.questionIndex=0;\n        }\n        return list[global.account.playerData.questionIndex];\n    },\n\n    changeImageTexture(imageSprite,url){\n        let texture=cc.textureCache.getTextureForKey(url);\n        if(texture){\n            imageSprite.spriteFrame.clearTexture();\n            imageSprite.spriteFrame.setTexture(texture);\n        }\n    },\n\n    showQuestion(){\n        cc.audioEngine.play(this.auCardIn);\n        let question=this.getQuestion();\n        console.log(\"question:\",question);\n        this.question=question;\n        if(question.type===1){  //阅读\n            this.nodeRead.active=true;\n            this.nodeChoose.active=false;\n            this.labelTip.string=\"读单词\";\n            this.labelWord.string=question.word;\n            this.changeImageTexture(this.spReadImage,question.image_url);\n            this.animation.play(\"an_show_question_read\");\n        }else{\n            this.nodeRead.active=false;\n            this.nodeChoose.active=true;\n            this.labelTip.string=\"选择答案\";\n            this.labelWord.string=question.word;\n            for(let i=0;i<this.question.image_urls.length;i++){\n                let url=this.question.image_urls[i];\n                let sprite=this.spAnswerList[i];\n                this.changeImageTexture(sprite,url);\n            }\n            this.animation.play(\"an_show_question_choose\");\n        }\n        global.account.playerData.questionIndex++;\n    },\n\n    onLoad(){\n        //[\"http://localhost:8080/1.jpg\",\"http://localhost:8080/2.jpg\",\"http://localhost:8080/3.jpg\"]\n        cc.loader.load([\"http://47.52.247.115/1.jpg\",\"http://47.52.247.115/2.png\",\"http://47.52.247.115/3.jpg\"],function (err, items) {\n            if(err){\n                console.error(err);\n                return;\n            }\n            for (let i in items.map){\n                if(!cc.textureCache.getTextureForKey(items.map[i].content)){\n                    cc.textureCache.addImage(items.map[i].content);\n                }\n            }\n        });\n        let self=this;\n        // global.account.playerData.questionIndex=0;\n        this.animation=this.node.getComponent(cc.Animation);\n        this.animation.on(\"finished\",this.onUiAnimationFinished.bind(this));\n        global.account.gameCtl.onTipsBegan((data)=> {\n            console.log('开始答题了' + JSON.stringify(data));\n            self.node.active = true;\n            self.timeCutDown = 5;\n            self.showQuestion();\n        });\n\n        // global.account.gameCtl.onTipsEnd(()=>{\n        //     this.node.active = false;\n        // });\n    },\n\n    start () {\n        this.node.active = false;\n    },\n\n    hideQuestion(){\n        if(this.question.type===1){\n            this.animation.play(\"an_hidden_question_read\");\n        }else{\n            this.animation.play(\"an_hidden_question_choose\");\n        }\n        global.account.playerData.power++;\n        global.account.gameCtl.tipsEnd({\n            result: 'success'\n        });\n        if(global.account.playerData.power>=4){\n            global.account.gameCtl.quick();\n            global.account.playerData.power=0;\n        }\n        cc.audioEngine.play(this.auSuccess);\n    },\n\n    onUiAnimationFinished(event){\n        var state = event.detail;    // state instanceof cc.AnimationState\n        var type = event.type;       // type === 'play';\n        if(state.name.indexOf(\"_hidden_\")>=0&&type===\"finished\"){\n            this.node.active=false;\n        }\n    },\n\n    update(dt){\n        if (global.account.gameCtl.isRunning()){\n            if (this.timeCutDown > 0){\n                this.timeCutDown -= dt;\n                if (this.timeCutDown <= 0){\n                    this.timeCutDown = 0;\n                    this.resultLabel.string = '真棒!';\n                    // setTimeout(()=>{\n                    //     this.resultLabel.string = '';\n                    // }, 1000);\n                    this.hideQuestion();\n                }\n                this.timeCutDownLabel.string = Math.floor(this.timeCutDown) + '';\n            }\n        }\n    },\n\n    onChooseAnswerClicked(event,customData){\n        if (parseInt(customData)!==this.question.answer_index){\n            global.account.gameCtl.tipsEnd({\n                result: 'fail'\n            });\n            this.node.active=false;\n            return;\n        }else{\n\n        }\n        this.hideQuestion();\n    }\n});\n"],"sourceRoot":"/source/","file":"project.dev.js"}