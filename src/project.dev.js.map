{"version":3,"sources":["assets/scripts/game/component/DragonBonesCtrl.js","assets/scripts/data/account.js","assets/scripts/game/bg-controller.js","assets/scripts/game/prefab/coin.js","assets/scripts/game/component/dargon-bone-ctl.js","assets/scripts/game/component/distance-node.js","assets/scripts/game/prefab/enemy.js","assets/scripts/utility/event-listener.js","assets/scripts/data/game-ctl.js","assets/scripts/game/game.js","assets/scripts/global.js","assets/scripts/game/component/jump.js","assets/scripts/game/component/mask-progress.js","assets/scripts/game/prefab/pauseLayer.js","assets/scripts/data/player-data.js","assets/scripts/game/player.js","assets/scripts/game/stub-controller.js","assets/scripts/game/component/stub.js","assets/scripts/game/component/tips-ctl.js","assets/scripts/game/ui-controller.js"],"names":["cc","runtime","NORMAL_ANIMATION_GROUP","AIM_ANIMATION_GROUP","ATTACK_ANIMATION_GROUP","JUMP_SPEED","NORMALIZE_MOVE_SPEED","MAX_MOVE_SPEED_FRONT","MAX_MOVE_SPEED_BACK","WEAPON_R_LIST","WEAPON_L_LIST","GROUND","G","Class","extends","Component","editor","requireComponent","dragonBones","ArmatureDisplay","properties","touchHandler","default","type","Node","upButton","downButton","leftButton","rightButton","_bullets","_left","_right","_isJumpingA","_isJumpingB","_isSquating","_isAttackingA","_isAttackingB","_weaponRIndex","_weaponLIndex","_faceDir","_aimDir","_moveDir","_aimRadian","_speedX","_speedY","_armature","_armatureDisplay","_weaponR","_weaponL","_aimState","_walkState","_attackState","_target","p","onLoad","_this","this","getComponent","armature","addEventListener","EventObject","FADE_IN_COMPLETE","_animationEventHandler","FADE_OUT_COMPLETE","getSlot","displayController","childArmature","FRAME_EVENT","_frameEventHandler","_updateAnimation","WorldClock","clock","add","on","EventType","TOUCH_START","event","attack","TOUCH_END","TOUCH_MOVE","touches","getTouches","touchLoc","getLocation","aim","x","y","jump","squat","TOUCH_CANCEL","_updateMove","eventManager","addListener","EventListener","KEYBOARD","onKeyPressed","keyCode","_keyHandler","onKeyReleased","node","isDown","KEY","a","left","d","right","w","up","s","down","q","switchWeaponR","e","switchWeaponL","space","dir","move","animation","fadeIn","isSquating","isAttacking","removeEventListener","length","newWeaponName","buildArmature","parent","convertToNodeSpaceAR","update","dt","_updatePosition","_updateAim","_updateAttack","_enterFrameHandler","onDisable","i","bullet","doClean","remove","addBullet","push","splice","advanceTime","detail","animationState","name","firePointBone","getBone","localPoint","global","display","globalPoint","convertToWorldSpace","_fire","firePoint","timeScale","minX","visibleRect","width","maxX","scaleX","aimOffsetY","scaleY","Math","atan2","PI","aimDir","AnimationFadeOutMode","SameGroup","weight","abs","autoFadeOutTime","fadeTotalTime","addBoneMask","DragonBullet","_effect","init","parentNode","effect","radian","speed","position","cos","sin","thePos","convertToNodeSpace","setPosition","rotation","DragonBones","RADIAN_TO_ANGLE","play","effectDisplay","random","addChild","worldPos","getPosition","height","removeFromParent","dispose","_playerData","require","_gameCtl","Account","that","playerData","_playerData2","gameCtl","_gameCtl2","exports","_global","bgList","bgSpeed","playerNode","oldBgSpeed","_global2","account","onQuick","console","log","defines","addSpeed","onQuickEnd","isRunning","com","speeds","speedLevel","_i","index","dead","action","bezierTo","runAction","sequence","callFunc","scaleTo","Animation","pause","resume","onEnable","onDestroy","AnimateState","invalid","idle","walk","run","defaultAnimate","idleAnimate","walkAnimate","jumpAnimate","attackAnimate","happyWalkAnimate","angryWalkAnimate","saidWalkAnimate","displayTimeScale","animateCompleteListener","state","setState","oldState","animateSpeed","onRun","animateFrameListener","playAnimate","numSpriteFrameList","SpriteFrame","mileIcon","numNodeMap","setNumber","value","str","char","hasOwnProperty","Sprite","spriteFrame","sp","addComponent","EnemyState","tipsBegan","tipsEnd","action1","raaction","rotateTo","scal1","isFly","isQuick","dis","pDistance","speedX","obj","Register","method","fire","handlerList","args","j","arguments","handler","apply","_eventListener","GameState","quick","GameCtl","_event","_eventListener2","_state","_timeSpeed","undefined","_distance","_distanceTimeCount","data","JSON","stringify","qucikEnd","attackEnd","onAttackEnd","onTipsBegan","onTipsEnd","onPause","onResume","onTimeScale","onDistanceChange","director","getCollisionManager","enabled","emit","moveTo","start","_account","_account2","accY","jumpSpeed","self","opt","currentLevel","bind","initPosY","timeSubSpeed","speedY","playJumpSound","sound","audioEngine","progress","currentWidth","setProgress","onButtonClick","customData","destroy","TitleType","say","listen","Title","PlayerData","titleList","goldCount","gameData","initTitle","_defineProperty","key","Object","defineProperty","enumerable","configurable","writable","body","jumpAudio","AudioClip","attackAudio","eatAudio","Float","uiSpeed","ProgressBar","tipsResult","result","zIndex","onJump","onCollisionEnter","other","min","maxLevel","speedValue","onCollisionStay","onCollisionExit","gameNode","stubPrefab","Prefab","prizePrefab","enemyPrefabList","initPosNode","initPrizePosNodeList","player","stubList","addStubIndex","prizeList","enemyList","coinList","addStub","addCoinFlag","addCoinFlagDurection","addCoinDurection","coin","_i2","_i3","_i4","initPool","coinPool","NodePool","initCount","instantiate","put","enemy","_i5","winSize","addEnemy","floor","addCoin","_i6","size","get","scale","initWithData","manager","stub","createStub","addPrize","initPos","prefab","stubSpriteFrameList","oldSpeedX","fly","collider","BoxCollider","timeCutDownLabel","Label","resultLabel","active","timeCutDown","_this2","string","setTimeout","totalTime","runProgress","runButton","runActiveButton","runButtonProgress","coinCountLabel","distanceNode","pauseLayer","runButtonIcon","currentTime","opacity","distance","isCanRun","runButtonProgressSpeed","code","enter"],"mappings":"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","sourcesContent":["\nif (!cc.runtime) {\n// runtime not support dragonbones.\n\nvar NORMAL_ANIMATION_GROUP = \"normal\";\nvar AIM_ANIMATION_GROUP = \"aim\";\nvar ATTACK_ANIMATION_GROUP = \"attack\";\nvar JUMP_SPEED = -20;\nvar NORMALIZE_MOVE_SPEED = 3.6;\nvar MAX_MOVE_SPEED_FRONT = NORMALIZE_MOVE_SPEED * 1.4;\nvar MAX_MOVE_SPEED_BACK = NORMALIZE_MOVE_SPEED * 1.0;\nvar WEAPON_R_LIST = [\"weapon_1502b_r\", \"weapon_1005\", \"weapon_1005b\", \"weapon_1005c\", \"weapon_1005d\", \"weapon_1005e\"];\nvar WEAPON_L_LIST = [\"weapon_1502b_l\", \"weapon_1005\", \"weapon_1005b\", \"weapon_1005c\", \"weapon_1005d\"];\nvar GROUND = -200;\nvar G = -0.6;\n\ncc.Class({\n    extends: cc.Component,\n    editor: {\n        requireComponent: dragonBones.ArmatureDisplay\n    },\n\n    properties: {\n        touchHandler : {\n            default: null,\n            type: cc.Node\n        },\n\n        upButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        downButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        leftButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        rightButton: {\n            default: null,\n            type: cc.Node\n        },\n\n        _bullets : [],\n        _left : false,\n        _right : false,\n        _isJumpingA : false,\n        _isJumpingB : false,\n        _isSquating : false,\n        _isAttackingA : false,\n        _isAttackingB : false,\n        _weaponRIndex : 0,\n        _weaponLIndex : 0,\n        _faceDir : 1,\n        _aimDir : 0,\n        _moveDir : 0,\n        _aimRadian : 0,\n        _speedX : 0,\n        _speedY : 0,\n        _armature : null,\n        _armatureDisplay : null,\n        _weaponR : null,\n        _weaponL : null,\n        _aimState : null,\n        _walkState : null,\n        _attackState : null,\n        _target : cc.p(0, 0),\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this._armatureDisplay = this.getComponent(dragonBones.ArmatureDisplay);\n        this._armature = this._armatureDisplay.armature();\n\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE, this._animationEventHandler, this);\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_OUT_COMPLETE, this._animationEventHandler, this);\n\n        this._armature.getSlot('effects_1').displayController = NORMAL_ANIMATION_GROUP;\n        this._armature.getSlot('effects_2').displayController = NORMAL_ANIMATION_GROUP;\n\n        this._weaponR = this._armature.getSlot('weapon_r').childArmature;\n        this._weaponL = this._armature.getSlot('weapon_l').childArmature;\n        this._weaponR.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n        this._weaponL.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._updateAnimation();\n        dragonBones.WorldClock.clock.add(this._armature);\n\n        if (this.touchHandler) {\n            // touch events\n            this.touchHandler.on(cc.Node.EventType.TOUCH_START, event => {\n                this.attack(true);\n            }, this);\n            this.touchHandler.on(cc.Node.EventType.TOUCH_END, event => {\n                this.attack(false);\n            }, this);\n            this.touchHandler.on(cc.Node.EventType.TOUCH_MOVE, event => {\n                var touches = event.getTouches();\n                var touchLoc = touches[0].getLocation();\n                this.aim(touchLoc.x, touchLoc.y);\n            }, this);\n        }\n\n        if (this.upButton) {\n            this.upButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this.jump();\n            }, this);\n        }\n\n        if (this.downButton) {\n            this.downButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this.squat(true);\n            }, this);\n            this.downButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this.squat(false);\n            }, this);\n            this.downButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this.squat(false);\n            }, this);\n        }\n\n        if (this.leftButton) {\n            this.leftButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this._left = true;\n                this._updateMove(-1);\n            }, this);\n            this.leftButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this._left = false;\n                this._updateMove(-1);\n            }, this);\n            this.leftButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this._left = false;\n                this._updateMove(-1);\n            }, this);\n        }\n\n        if (this.rightButton) {\n            this.rightButton.on(cc.Node.EventType.TOUCH_START, event => {\n                this._right = true;\n                this._updateMove(1);\n            }, this);\n            this.rightButton.on(cc.Node.EventType.TOUCH_END, event => {\n                this._right = false;\n                this._updateMove(1);\n            }, this);\n            this.rightButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\n                this._right = false;\n                this._updateMove(1);\n            }, this);\n        }\n\n        // keyboard events\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            onKeyPressed: (keyCode, event) => {\n                this._keyHandler(keyCode, true);\n            },\n            onKeyReleased: (keyCode, event) => {\n                this._keyHandler(keyCode, false);\n            },\n        }, this.node);\n    },\n\n    _keyHandler: function(keyCode, isDown) {\n        switch(keyCode) {\n            case cc.KEY.a:\n            case cc.KEY.left:\n                this._left = isDown;\n                this._updateMove(-1);\n                break;\n            case cc.KEY.d:\n            case cc.KEY.right:\n                this._right = isDown;\n                this._updateMove(1);\n                break;\n            case cc.KEY.w:\n            case cc.KEY.up:\n                if (isDown) {\n                    this.jump();\n                }\n                break;\n            case cc.KEY.s:\n            case cc.KEY.down:\n                this.squat(isDown);\n                break;\n            case cc.KEY.q:\n                if (isDown) {\n                    this.switchWeaponR();\n                }\n                break;\n            case cc.KEY.e:\n                if (isDown) {\n                    this.switchWeaponL();\n                }\n                break;\n            case cc.KEY.space:\n                if (isDown) {\n                    this.switchWeaponR();\n                    this.switchWeaponL();\n                }\n                break;\n            default:\n                return;\n        }\n    },\n\n    _updateMove : function (dir) {\n        if (this._left && this._right) {\n            this.move(dir);\n        } else if (this._left) {\n            this.move(-1);\n        } else if (this._right) {\n            this.move(1);\n        } else {\n            this.move(0);\n        }\n    },\n\n    move : function(dir) {\n        if (this._moveDir === dir) {\n            return;\n        }\n\n        this._moveDir = dir;\n        this._updateAnimation();\n    },\n\n    jump : function () {\n        if (this._isJumpingA) {\n            return;\n        }\n\n        this._isJumpingA = true;\n        this._armature.animation.fadeIn(\"jump_1\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n        this._walkState = null;\n    },\n\n    squat : function(isSquating) {\n        if (this._isSquating === isSquating) {\n            return;\n        }\n\n        this._isSquating = isSquating;\n        this._updateAnimation();\n    },\n\n    attack : function (isAttacking) {\n        if (this._isAttackingA == isAttacking) {\n            return;\n        }\n\n        this._isAttackingA = isAttacking;\n    },\n\n    switchWeaponL : function() {\n        this._weaponL.removeEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._weaponLIndex = (this._weaponLIndex + 1) % WEAPON_L_LIST.length;\n        var newWeaponName = WEAPON_L_LIST[this._weaponLIndex];\n        this._weaponL = this._armatureDisplay.buildArmature(newWeaponName);\n        this._armature.getSlot('weapon_l').childArmature = this._weaponL;\n\n        this._weaponL.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n    },\n\n    switchWeaponR : function() {\n        this._weaponR.removeEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n\n        this._weaponRIndex = (this._weaponRIndex + 1) % WEAPON_R_LIST.length;\n        var newWeaponName = WEAPON_R_LIST[this._weaponRIndex];\n        this._weaponR = this._armatureDisplay.buildArmature(newWeaponName);\n        this._armature.getSlot('weapon_r').childArmature = this._weaponR;\n\n        this._weaponR.addEventListener(dragonBones.EventObject.FRAME_EVENT, this._frameEventHandler, this);\n    },\n\n    aim : function(x, y) {\n        // if (this._aimDir === 0) {\n        //     // this._aimDir = 10;\n        //     this._aimDir = 100;\n        //\n        // }\n        this._aimDir = 100;\n\n        this._target = this.node.parent.convertToNodeSpaceAR(cc.p(x, y));\n    },\n\n    update : function (dt) {\n        this._updatePosition();\n        this._updateAim();\n        this._updateAttack();\n        this._enterFrameHandler(dt);\n    },\n\n    onDisable : function() {\n        // clean the bullets\n        for (var i = this._bullets.length - 1; i >= 0; i--)\n        {\n            var bullet = this._bullets[i];\n            bullet.doClean();\n        }\n        this._bullets = [];\n\n        if (this._armature) {\n            // remove the _armature from world clock\n            dragonBones.WorldClock.clock.remove(this._armature);\n        }\n    },\n\n    addBullet : function(bullet) {\n        this._bullets.push(bullet);\n    },\n\n    _enterFrameHandler : function (dt) {\n        for (var i = this._bullets.length - 1; i >= 0; i--)\n        {\n            var bullet = this._bullets[i];\n            if (bullet.update())\n            {\n                this._bullets.splice(i, 1);\n            }\n        }\n        dragonBones.WorldClock.clock.advanceTime(dt);\n    },\n\n    _animationEventHandler: function(event) {\n        if (event.type === dragonBones.EventObject.FADE_IN_COMPLETE) {\n            if (event.detail.animationState.name === \"jump_1\") {\n                this._isJumpingB = true;\n                this._speedY = -JUMP_SPEED;\n                this._armature.animation.fadeIn(\"jump_2\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            } else if (event.detail.animationState.name === \"jump_4\") {\n                this._updateAnimation();\n            }\n        }\n        else if (event.type === dragonBones.EventObject.FADE_OUT_COMPLETE) {\n            if (event.detail.animationState.name === \"attack_01\") {\n                this._isAttackingB = false;\n                this._attackState = null;\n            }\n        }\n    },\n\n    _frameEventHandler : function (event) {\n        if (event.detail.name === \"onFire\") {\n            var firePointBone = event.detail.armature.getBone(\"firePoint\");\n            var localPoint = cc.p(firePointBone.global.x, -firePointBone.global.y);\n\n            var display = event.detail.armature.display;\n            var globalPoint = display.convertToWorldSpace(localPoint);\n\n            this._fire(globalPoint);\n        }\n    },\n\n    _fire : function (firePoint) {\n        // firePoint.x += Math.random() * 2 - 1;\n        // firePoint.y += Math.random() * 2 - 1;\n        //\n        // var armature = this._armatureDisplay.buildArmature(\"bullet_01\");\n        // var effect = this._armatureDisplay.buildArmature(\"fireEffect_01\");\n        // var radian = this._faceDir < 0 ? Math.PI - this._aimRadian : this._aimRadian;\n        // var bullet = new DragonBullet();\n        // bullet.init(this.node.parent._sgNode, armature, effect, radian + Math.random() * 0.02 - 0.01, 40, firePoint);\n        // this.addBullet(bullet);\n    },\n\n    _updateAnimation : function() {\n        if (this._isJumpingA) {\n            return;\n        }\n\n        if (this._isSquating) {\n            this._speedX = 0;\n            this._armature.animation.fadeIn(\"squat\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            this._walkState = null;\n            return;\n        }\n\n        if (this._moveDir === 0) {\n            this._speedX = 0;\n            this._armature.animation.fadeIn(\"idle\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            this._walkState = null;\n        } else {\n            if (!this._walkState) {\n                this._walkState = this._armature.animation.fadeIn(\"walk\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            }\n\n            if (this._moveDir * this._faceDir > 0) {\n                this._walkState.timeScale = MAX_MOVE_SPEED_FRONT / NORMALIZE_MOVE_SPEED;\n            } else {\n                this._walkState.timeScale = -MAX_MOVE_SPEED_BACK / NORMALIZE_MOVE_SPEED;\n            }\n\n            if (this._moveDir * this._faceDir > 0) {\n                this._speedX = MAX_MOVE_SPEED_FRONT * this._faceDir;\n            } else {\n                this._speedX = -MAX_MOVE_SPEED_BACK * this._faceDir;\n            }\n        }\n    },\n\n    _updatePosition : function() {\n        if (this._speedX !== 0) {\n            this.node.x += this._speedX;\n            var minX = -cc.visibleRect.width / 2;\n            var maxX = cc.visibleRect.width / 2;\n            if (this.node.x < minX) {\n                this.node.x = minX;\n            } else if (this.node.x > maxX) {\n                this.node.x = maxX;\n            }\n        }\n\n        if (this._speedY != 0) {\n            if (this._speedY > 5 && this._speedY + G <= 5) {\n                this._armature.animation.fadeIn(\"jump_3\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n            }\n\n            this._speedY += G;\n\n            this.node.y += this._speedY;\n            if (this.node.y < GROUND) {\n                this.node.y = GROUND;\n                this._isJumpingA = false;\n                this._isJumpingB = false;\n                this._speedY = 0;\n                this._speedX = 0;\n                this._armature.animation.fadeIn(\"jump_4\", -1, -1, 0, NORMAL_ANIMATION_GROUP);\n                if (this._isSquating || this._moveDir) {\n                    this._updateAnimation();\n                }\n            }\n        }\n    },\n\n    _updateAim : function () {\n        // if (this._aimDir === 0) {\n        //     return;\n        // }\n\n        this._faceDir = this._target.x > this.node.x ? 1 : -1;\n        if (this.node.scaleX * this._faceDir < 0) {\n            this.node.scaleX *= -1;\n            if (this._moveDir) {\n                this._updateAnimation();\n            }\n        }\n\n        var aimOffsetY = this._armature.getBone(\"chest\").global.y * this.node.scaleY;\n\n        if (this._faceDir > 0) {\n            this._aimRadian = Math.atan2(-(this._target.y - this.node.y + aimOffsetY), this._target.x - this.node.x);\n        } else {\n            this._aimRadian = Math.PI - Math.atan2(-(this._target.y - this.node.y + aimOffsetY), this._target.x - this.node.x);\n            if (this._aimRadian > Math.PI) {\n                this._aimRadian -= Math.PI * 2;\n            }\n        }\n        // console.log(' anim radian  = ' + this._aimRadian);\n\n        let aimDir = 0;\n        if (this._aimRadian > 0) {\n            aimDir = -1;\n        } else {\n            aimDir = 1;\n        }\n\n        if (this._aimDir != aimDir) {\n            this._aimDir = aimDir;\n\n            // Animation mixing.\n            if (this._aimDir >= 0) {\n                this._aimState = this._armature.animation.fadeIn(\"aimUp\", 0.1, 1, 1, AIM_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup);\n            } else {\n                this._aimState = this._armature.animation.fadeIn(\n                    \"aimDown\", 0, 1,\n                    0, AIM_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup\n                );\n            }\n\n            // Add bone mask.\n            //_aimState.addBoneMask(\"pelvis\");\n        }\n\n        this._aimState.weight = Math.abs(this._aimRadian / Math.PI * 2);\n\n        //_armature.invalidUpdate(\"pelvis\"); // Only update bone mask.\n        // this._armature.invalidUpdate();\n    },\n\n    _updateAttack : function() {\n        if (!this._isAttackingA || this._isAttackingB) {\n            return;\n        }\n\n        this._isAttackingB = true;\n\n        // Animation mixing.\n        this._attackState = this._armature.animation.fadeIn(\n            \"attack_01\", -1, -1,\n            0, ATTACK_ANIMATION_GROUP, dragonBones.AnimationFadeOutMode.SameGroup\n        );\n\n        this._attackState.autoFadeOutTime = this._attackState.fadeTotalTime;\n        this._attackState.addBoneMask(\"pelvis\");\n    }\n});\n\n\nvar DragonBullet = cc.Class({\n    name: 'DragonBullet',\n    _speedX : 0,\n    _speedY : 0,\n\n    _armature : null,\n    _armatureDisplay : null,\n    _effect : null,\n\n    init : function (parentNode, armature, effect, radian, speed, position) {\n        this._speedX = Math.cos(radian) * speed;\n        this._speedY = -Math.sin(radian) * speed;\n        var thePos = parentNode.convertToNodeSpace(position);\n\n        this._armature = armature;\n        this._armatureDisplay = this._armature.display;\n        this._armatureDisplay.setPosition(thePos);\n        this._armatureDisplay.rotation = radian * dragonBones.DragonBones.RADIAN_TO_ANGLE;\n        this._armature.animation.play(\"idle\");\n\n        if (effect) {\n            this._effect = effect;\n            var effectDisplay = this._effect.display;\n            effectDisplay.rotation = radian * dragonBones.DragonBones.RADIAN_TO_ANGLE;\n            effectDisplay.setPosition(thePos);\n            effectDisplay.scaleX = 1 + Math.random() * 1;\n            effectDisplay.scaleY = 1 + Math.random() * 0.5;\n            if (Math.random() < 0.5) {\n                effectDisplay.scaleY *= -1;\n            }\n\n            this._effect.animation.play(\"idle\");\n\n            dragonBones.WorldClock.clock.add(this._effect);\n            parentNode.addChild(effectDisplay);\n        }\n\n        dragonBones.WorldClock.clock.add(this._armature);\n        parentNode.addChild(this._armatureDisplay);\n    },\n\n    update : function() {\n        this._armatureDisplay.x += this._speedX;\n        this._armatureDisplay.y += this._speedY;\n\n        var worldPos = this._armatureDisplay.parent.convertToWorldSpace(this._armatureDisplay.getPosition());\n        if (\n            worldPos.x < -100 || worldPos.x >= cc.visibleRect.width + 100 ||\n            worldPos.y < -100 || worldPos.y >= cc.visibleRect.height + 100\n        ) {\n            this.doClean();\n            return true;\n        }\n\n        return false;\n    },\n\n    doClean : function() {\n        dragonBones.WorldClock.clock.remove(this._armature);\n        this._armatureDisplay.removeFromParent();\n        this._armature.dispose();\n\n        if (this._effect) {\n            dragonBones.WorldClock.clock.remove(this._effect);\n            this._effect.display.removeFromParent();\n            this._effect.dispose();\n        }\n    }\n});\n} // end of !cc.runtime\n","import PlayerData from './player-data'\nimport GameCtl from './game-ctl'\nconst Account = function () {\n    let that = {};\n    that.playerData = PlayerData();\n    that.gameCtl = GameCtl();\n    return that;\n};\nexport default Account;","import global from './../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        bgList: {\n            default: [],\n            type: cc.Node\n        },\n        bgSpeed: 0,\n        playerNode:cc.Node,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.oldBgSpeed = this.bgSpeed;\n        global.account.gameCtl.onQuick(()=>{\n           //加速\n            console.log('加速跑');\n           this.bgSpeed += defines.addSpeed;\n        });\n        global.account.gameCtl.onQuickEnd(()=>{\n            this.bgSpeed = this.oldBgSpeed;\n        })\n    },\n    update(dt){\n\n        if (global.account.gameCtl.isRunning()){\n            let com=this.playerNode.getComponent(\"player\");\n            let speed=com.speeds[com.speedLevel];\n\n            for (let i = 0 ; i < this.bgList.length ; i ++){\n                // this.bgList[i].position = cc.p(this.bgList[i].position.x - this.bgSpeed * dt * defines.timeScale, this.bgList[i].position.y);\n                this.bgList[i].x -=  speed* dt * defines.timeScale;\n            }\n            for (let i = 0; i < this.bgList.length; i++) {\n                if (this.bgList[i].position.x < -this.bgList[i].width) {\n                    let index = i + 1;\n                    if (index > this.bgList.length - 1) {\n                        index = 0;\n                    }\n                    // this.bgList[i].position = cc.p(this.bgList[index].position.x + this.bgList[i].width, this.bgList[i].position.y);\n                    this.bgList[i].x = this.bgList[index].x + this.bgList[i].width;\n                }\n            }\n        }\n    }\n});\n","\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    onLoad(){\n        this.node.dead = false;\n        this.node.on('fly', ()=>{\n            console.log('硬币飞走');\n            let action = cc.bezierTo(0.4, [this.node.position,cc.p(this.node.x, this.node.y + 200), cc.p(-530,269)]);\n            this.node.runAction(cc.sequence(action, cc.callFunc(()=>{\n                console.log('动作结束');\n                // this.node.dead = true;\n                this.node.x = -1000;\n            })));\n            this.node.runAction(cc.scaleTo(0.4, 0.2,0.2));\n        });\n        this.node.on('pause',()=>{\n           //暂停\n           this.node.getComponent(cc.Animation).pause();\n        });\n        this.node.on('resume',()=>{\n           //继续\n            this.node.getComponent(cc.Animation).resume();\n        });\n    },\n    onEnable(){\n        console.log(\"on enable\");\n    },\n    onDestroy(){\n        console.log('销毁硬笔');\n    }\n});\n","import global from './../../global'\n\nconst AnimateState = {\n    invalid: -1,\n    default: 1,\n    idle: 2,\n    walk: 3,\n    run: 4,\n    jump: 5,\n    attack: 6\n};\ncc.Class({\n    extends: cc.Component,\n    editor: {\n        requireComponent: dragonBones.ArmatureDisplay\n    },\n\n    properties: {\n\n        defaultAnimate: \"\",\n        idleAnimate: \"\",\n        walkAnimate: \"\",\n        jumpAnimate: \"\",\n        attackAnimate: \"\",\n        happyWalkAnimate: \"\",\n        angryWalkAnimate: \"\",\n        saidWalkAnimate: \"\"\n\n\n    },\n    onLoad: function () {\n        this.displayTimeScale = 1;\n        this._armatureDisplay = this.getComponent(dragonBones.ArmatureDisplay);\n        this._armature = this._armatureDisplay.armature();\n        // this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE, this.animateCompleteListener, this);\n        this._armatureDisplay.addEventListener(dragonBones.EventObject.FADE_IN_COMPLETE, this.animateCompleteListener, this);\n        dragonBones.WorldClock.clock.add(this._armature);\n        this.state = AnimateState.invalid;\n        this.node.parent.on('jump', (event) => {\n            console.log('跳起来');\n            this.setState(AnimateState.jump);\n        });\n\n        this.node.parent.on('jump-end', () => {\n            console.log('跳起来结束' + this.oldState);\n            if (this.oldState === AnimateState.walk || this.oldState === AnimateState.default) {\n                this.setState(AnimateState.walk);\n            }\n        });\n\n        this.node.parent.on('walk', (event) => {\n            console.log('走路');\n            this.setState(AnimateState.walk);\n        });\n\n        this.node.parent.on('idle', (event) => {\n            console.log('动画播放，idle');\n            this.animateSpeed = event.detail;\n            this.setState(AnimateState.idle);\n        });\n        this.node.parent.on('attack', (event) => {\n            console.log('播放攻击动画');\n            this.setState(AnimateState.attack);\n        });\n\n        this.node.parent.on('pause', () => {\n            this._armatureDisplay.timeScale = 0;\n        });\n        this.node.parent.on('resume', ()=>{\n            this._armatureDisplay.timeScale = 1;\n        });\n\n        this.node.parent.on('time-scale', (event)=>{\n           //时间降低\n           //  console.log('时间 降低' + this._armatureDisplay.timeScale);\n            this._armatureDisplay.timeScale = event.detail;\n        });\n\n        global.account.gameCtl.onRun(() => {\n            this.setState(AnimateState.default);\n        });\n        this.setState(AnimateState.default);\n    },\n    animateFrameListener() {\n\n    },\n    animateCompleteListener(event) {\n        console.log('播放动画完成');\n        console.log('event = ' + event.type);\n        // console.log('动作完成' + this.state);\n        // console.log('完成' + this.oldState);\n        // if (this.state === AnimateState.jump && this.oldState === AnimateState.walk){\n        //     console.log('重新跑起来');\n        //     this.setState(AnimateState.walk);\n        // }\n\n    },\n    idle: function () {\n    },\n    walk: function () {\n        this.setState(AnimateState.walk);\n    },\n    jump: function () {\n    },\n    attack: function () {\n    },\n    playAnimate: function (state) {\n\n    },\n    setState(state) {\n        if (this.state === state) {\n            return;\n        }\n        this.oldState = this.state;\n        switch (state) {\n            case AnimateState.default:\n                this._armature.animation.fadeIn(this.defaultAnimate, 0.2, -1, 0);\n                break;\n            case AnimateState.jump:\n\n                this._armature.animation.fadeIn(this.jumpAnimate, 0, 1, 0);\n                // setTimeout(()=>{\n                //     this.setState(AnimateState.walk);\n                // }, 300);\n                break;\n            case AnimateState.walk:\n\n                console.log('dragon bone walk');\n                this._armature.animation.fadeIn(this.walkAnimate, 0.2, -1, 0);\n\n\n                break;\n            case AnimateState.run:\n                break;\n            case AnimateState.idle:\n                console.log('播放idle 动画');\n                this._armature.animation.fadeIn(this.idleAnimate, 0.2, -1, 0);\n\n                break;\n            case AnimateState.attack:\n                this._armature.animation.fadeIn(this.attackAnimate, 0, 1, 0);\n\n                break;\n            default:\n                break;\n        }\n\n        this.state = state;\n    },\n    // update(dt) {\n    //     this._armatureDisplay.timeScale = defines.timeScale;\n    // }\n\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        numSpriteFrameList: {\n            default: [],\n            type: cc.SpriteFrame\n        },\n        mileIcon: {\n            default: null,\n            type: cc.Node\n        }\n    },\n    onLoad(){\n        this.numNodeMap = {};\n        this.setNumber(0);\n        this.node.on('distance-change',  (event)=> {\n            let detail = event.detail;\n            this.setNumber(detail);\n        })\n    },\n    setNumber(value){\n        // let node = cc.Node('node');\n        let str = value + '';\n        for (let i = str.length  - 1 ; i >= 0 ; i --){\n            let char = str[i];\n            if (this.numNodeMap.hasOwnProperty(i)){\n               this.numNodeMap[i].getComponent(cc.Sprite).spriteFrame = this.numSpriteFrameList[char];\n            }else {\n                this.numNodeMap[i] = new cc.Node('node');\n                this.numNodeMap[i].parent = this.node;\n                let sp = this.numNodeMap[i].addComponent(cc.Sprite);\n                sp.spriteFrame = this.numSpriteFrameList[char];\n                this.numNodeMap[i].x +=this.numNodeMap[i].width * i;\n                this.mileIcon.x = this.numNodeMap[i].x + this.numNodeMap[i].width * 0.5 + this.mileIcon.width * 0.5;\n\n            }\n        }\n\n    }\n});\n","import global from './../../global'\n\nconst EnemyState = {\n    invalid: -1,\n    run: 1,\n    tipsBegan: 2,\n    tipsEnd: 3\n\n};\ncc.Class({\n    extends: cc.Component,\n\n    properties: {},\n\n    onLoad() {\n\n        this.state = EnemyState.invalid;\n        this.setState(EnemyState.run);\n        this.node.on('fly', () => {\n            console.log('飞走');\n            let action1 = cc.bezierTo(1, [cc.p(78, 9), cc.p(86, 302), cc.p(418, 319)]);\n            this.node.runAction(cc.sequence(action1, cc.callFunc(() => {\n                this.node.dead = true;\n            })));\n            let raaction = cc.rotateTo(1, 360 * 4);\n            this.node.runAction(raaction);\n            this.setState(EnemyState.tipsEnd);\n            let scal1 = cc.scaleTo(1, 0.2, 0.2);\n            this.node.runAction(scal1);\n            this.node.isFly = true;\n\n        });\n\n        // global.account.gameCtl.onPause(() => {\n        //     this.node.emit('time-scale', 0);\n        // });\n        // global.account.gameCtl.onResume(() => {\n        //     this.node.emit('time-scale', defines.timeScale);\n        // });\n\n    },\n    update() {\n        if (this.state === EnemyState.run && !global.account.gameCtl.isQuick()) {\n            let dis = cc.pDistance(this.node.position, global.account.playerData.playerNode.position);\n            let speedX=this.node.getComponent(\"stub\").speedX;\n            if (dis/speedX<2.4) {\n                this.setState(EnemyState.tipsBegan);\n            }\n        }\n\n    },\n    setState(state) {\n        if (this.state === state) {\n            return\n        }\n        switch (state) {\n            case EnemyState.tipsBegan:\n                global.account.gameCtl.tipsBegan();\n                break;\n            case EnemyState.tipsEnd:\n                break;\n            default:\n                break;\n        }\n        this.state = state;\n    },\n    onDestroy() {\n        console.log('销毁了敌人');\n    }\n});\n","const EventListener = function (obj) {\n    let Register = {};\n\n    obj.on = function (type, method) {\n        if (Register.hasOwnProperty(type)){\n            Register[type].push(method);\n        }else {\n            Register[type] = [method];\n        }\n    }\n    ;\n    obj.fire = function (type) {\n        if (Register.hasOwnProperty(type)){\n            let handlerList = Register[type];\n            for (let i = 0 ; i < handlerList.length; i ++){\n                let args = [];\n                for (let j = 1 ; j < arguments.length ; j ++){\n                    args.push(arguments[j]);\n                }\n                let handler = handlerList[i];\n                // console.log('args = ' + JSON.stringify(args));\n                handler.apply(this, args);\n            }\n        }\n    };\n\n\n    return obj;\n};\nexport default EventListener;","import EventListener from './../utility/event-listener'\nconst GameState = {\n    invalid: -1,\n    run: 1,\n    pause: 2,\n    resume: 3,\n    tipsBegan: 4,\n    quick: 5\n};\nconst GameCtl = function () {\n    let that = {};\n    let _event = EventListener({});\n    that.event=_event;\n    let _state = GameState.invalid;\n    let _timeSpeed = undefined;\n    let _distance = 0;\n    let _distanceTimeCount = 0;\n    const setState = function (state, data) {\n        if (_state === state){\n            return\n        }\n        switch (state){\n            case GameState.run:\n                _event.fire('game-run');\n                break;\n            case GameState.pause:\n                _event.fire('game-pause');\n                break;\n            case GameState.resume:\n                _event.fire('game-resume');\n                break;\n            case GameState.tipsBegan:\n                _event.fire('tips-began', data);\n                _timeSpeed = - 0.02;\n\n                break;\n            case GameState.quick:\n                //加速跑\n                _event.fire('quick');\n\n                break;\n            default:\n                break;\n        }\n        _state = state;\n    };\n    that.pause = function () {\n        setState(GameState.pause);\n    };\n    that.run = function () {\n        setState(GameState.run);\n    };\n    that.resume = function () {\n        setState(GameState.resume);\n    };\n\n    that.tipsBegan = function (data) {\n        //开始答题\n        setState(GameState.tipsBegan, data);\n    };\n    that.tipsEnd = function (data) {\n        console.log('tips end = ' + JSON.stringify(data));\n        defines.timeScale = 1;\n        _event.fire('tips-end', data);\n        setState(GameState.resume);\n    };\n\n\n    that.quick = function () {\n        //加速\n        setState(GameState.quick);\n\n    };\n    that.qucikEnd = function () {\n        _event.fire('quick-end');\n        setState(GameState.run);\n    };\n    that.onQuickEnd = function (method) {\n        _event.on('quick-end', method);\n    };\n\n\n\n    that.attackEnd = function () {\n        //玩家攻击结束\n        _event.fire('attack-end');\n    };\n\n\n    that.onQuick = function (method) {\n        console.log('注册加速事件');\n        _event.on('quick', method);\n    };\n\n    that.onAttackEnd = function (method) {\n        _event.on('attack-end', method)\n    };\n\n\n    that.onTipsBegan = function (method) {\n      //开始答题\n        console.log('开始答题');\n        _event.on('tips-began', method);\n\n        //时间变慢\n    };\n    that.onTipsEnd = function (method) {\n        _event.on('tips-end', method);\n    };\n\n\n    that.isRunning = function () {\n        if (_state === GameState.run || _state === GameState.resume || _state === GameState.tipsBegan || _state === GameState.quick){\n            return true;\n        }\n        return false;\n    };\n    that.isQuick = function () {\n        if (_state === GameState.quick){\n            return true;\n        }\n        return false;\n    };\n\n    that.onPause = function (method) {\n        _event.on('game-pause', method);\n    };\n    that.onRun = function (method) {\n        _event.on('game-run', method);\n    };\n    that.onResume = function (method) {\n        _event.on('game-resume', method);\n    };\n    that.onTimeScale = function (method) {\n        _event.on('time-scale', method);\n    };\n    that.onDistanceChange = function (method) {\n        _event.on('distance-change', method);\n    };\n\n    that.update = function (dt) {\n\n\n\n\n\n        if (that.isRunning()){\n\n\n            if (_timeSpeed !== undefined ){\n                defines.timeScale += _timeSpeed;\n                _event.fire('time-scale', defines.timeScale);\n                if (defines.timeScale < 0.05){\n                    defines.timeScale = 0.05;\n                    _timeSpeed = undefined;\n                }\n            }\n\n            if (_distanceTimeCount > 1){\n                _distanceTimeCount = 0;\n                _distance ++;\n                _event.fire('distance-change', _distance);\n            }else {\n                _distanceTimeCount += dt * defines.timeScale;\n            }\n\n        }\n\n    };\n\n\n    return that;\n};\nexport default GameCtl;","\nimport global from './../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        playerNode: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // let collisionManager = new cc.director.getCollisionManager();\n        // collisionManager.enabled = true;\n        // collisionManager.enabledDrawBoundingBox = true;\n        // collisionManager.enabledDebugDraw = true;\n        // console.log('画出来彭状体0');\n        cc.director.getCollisionManager().enabled = true;\n        // cc.director.getCollisionManager().enabledDebugDraw = true;\n        console.log('enter animate');\n        this.playerNode.emit('walk');\n        let action = cc.moveTo(1, cc.p(this.playerNode.position.x + 400, this.playerNode.position.y));\n        this.playerNode.runAction(cc.sequence(action, cc.callFunc(()=>{console.log('开始游戏');\n            global.account.gameCtl.run();\n        })));\n    },\n\n    start () {\n\n\n    },\n    update(dt){\n        global.account.gameCtl.update(dt);\n    }\n});\n","import Account from './data/account'\nconst global = {};\nglobal.account = Account();\nexport default global","import global from '../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        accY: 0,\n        jumpSpeed: 0,\n    },\n    onLoad(){\n        let self=this;\n        global.account.gameCtl.event.on(\"speed-changed\",function(opt){\n            if(opt.currentLevel===0){\n                self.jumpSpeed=1300;\n            }else{\n                self.jumpSpeed=1600;\n            }\n        });\n        this.node.on('jump', this.jump.bind(this));\n        this.initPosY = this.node.position.y;\n        this.timeSubSpeed = 0;\n    },\n    jump(){\n        if (this.speedY === undefined){\n            this.speedY = this.jumpSpeed;\n        }\n    },\n    playJumpSound(sound){\n        if (this.speedY === undefined){\n            cc.audioEngine.play(sound,false,1);\n        }\n    },\n    update: function (dt) {\n        if (this.speedY !== undefined){\n            this.node.position = cc.p(this.node.position.x, this.node.position.y + this.speedY * dt * defines.timeScale);\n            this.speedY += (this.accY * dt * defines.timeScale);\n        }\n        if (this.node.position.y <= this.initPosY && this.speedY !== undefined){\n            this.node.position = cc.p(this.node.position.x, this.initPosY);\n            this.speedY = undefined;\n            console.log('落地');\n            this.node.emit('jump-end');\n        }\n\n        // if (defines.timeScale > 0.1 && this.timeSubSpeed !== 0){\n        //     defines.timeScale += this.timeSubSpeed;\n        //     setTimeout(()=> {\n        //         defines.timeScale = 1;\n        //         this.timeSubSpeed = 0;\n        //     }, 1000);\n        // }\n\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n       progress: 0\n    },\n    onLoad(){\n\n        this.currentWidth = this.node.width;\n\n    },\n    update(){\n        this.node.width = this.currentWidth * this.progress;\n    },\n    setProgress(progress){\n        // console.log('progress = ' + progress);\n        this.progress = progress;\n    }\n}\n);\n","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    onLoad() {\n\n    },\n    onButtonClick(event, customData){\n        switch (customData){\n            case 'resume':\n                global.account.gameCtl.resume();\n                this.node.destroy();\n                break;\n            default:\n                break;\n        }\n    }\n});\n","const TitleType = {\n    'say': 1,\n    'listen': 2\n};\n\nconst Title = function () {\n\n};\nlet PlayerData = function () {\n    let that = {};\n    that.titleList = [];\n    that.goldCount = 0;\n    that.gameData = ['word1', 'word2', 'word3', 'word4', 'word5', 'word6', 'word7', 'word8', 'word9', 'word10','word11', 'word12', 'word13', 'word14', 'word15'];\n    that.initTitle = function (data) {\n        for (let i = 0 ; i < data.length ; i ++){\n            \n        }\n    };\n    that.initTitle(that.gameData);\n    return that;\n};\nexport default PlayerData;\n","// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\nimport global from './../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        body: {\n            default: null,\n            type: cc.Node\n        },\n        jumpAudio:cc.AudioClip,\n        attackAudio:cc.AudioClip,\n        eatAudio:cc.AudioClip,\n        speeds:[cc.Float],\n        speedLevel:0,\n        uiSpeed:cc.ProgressBar\n    },\n\n    onLoad(){\n        // this.node.on('jump', ()=>{\n        //     this.body.emit('jump');\n        // });\n        global.account.gameCtl.onTipsBegan(()=>{\n           //游戏暂停注册\n            console.log('游戏暂停');\n            // this.node.emit('idle');\n            // this.node.emit('time-scale');\n\n        });\n        global.account.gameCtl.onTipsEnd((data)=>{\n            console.log('答题结束' + JSON.stringify(data));\n            this.tipsResult = data.result;\n            this.node.emit('attack');\n            this.node.emit('time-scale', 1);\n        });\n        this.node.zIndex = 1;\n        this.node.on('jump', this.onJump.bind(this));\n\n\n        global.account.gameCtl.onTimeScale(()=>{\n           this.node.emit('time-scale',defines.timeScale);\n        });\n\n        global.account.gameCtl.onPause(()=>{\n            this.node.emit('time-scale',0);\n        });\n        global.account.gameCtl.onResume(()=>{\n\n            this.node.emit('time-scale',defines.timeScale);\n        });\n        global.account.playerData.playerNode = this.node;\n    },\n    start(){\n        \n    },\n\n    onJump(event){\n        console.log(\"on jump\");\n        let com=this.node.getComponent(\"jump\");\n        com.playJumpSound(this.jumpAudio);\n    },\n\n    onCollisionEnter: function (other, self) {\n        // console.log('on collision enter');\n        // other.node.removeComponent(cc.BoxCollider);\n        //开始碰撞\n        if (this.tipsResult === 'success'){\n            // this.tipsResult = undefined;\n            if (other.getComponent('enemy')){\n                cc.audioEngine.play(this.attackAudio,false,1);\n                other.node.emit('fly');\n                // this.node.emit('walk');\n                // setTimeout(()=>{\n                //     this.node.emit('walk');\n                // },200);\n                this.node.emit('walk');\n                global.account.gameCtl.attackEnd();\n                this.speedLevel++;\n                this.speedLevel=Math.min(this.speedLevel,this.speeds.length-1);\n                global.account.gameCtl.event.fire(\"speed-changed\",{currentLevel:this.speedLevel,maxLevel:this.speeds.length-1,speedValue:this.speeds[this.speedLevel]});\n            }\n        }\n\n        if (other.getComponent('coin')){\n            cc.audioEngine.play(this.eatAudio,false,1);\n            other.node.emit('fly');\n            global.account.playerData.goldCount ++;\n        }\n\n    },\n    onCollisionStay: function (other, self) {\n        // console.log('on collision stay');\n    },\n    onCollisionExit: function (other, self) {\n        // console.log('on collision exit');\n    },\n\n\n    start () {\n\n    }\n});\n","import global from \"../global\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        gameNode: {\n            default: null,\n            type: cc.Node\n        },\n        stubPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        prizePrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        enemyPrefabList: {\n            default: [],\n            type: cc.Prefab\n        },\n        initPosNode: {\n            default: null,\n            type: cc.Node\n        },\n        initPrizePosNodeList: {\n            default: [],\n            type: cc.Node\n        },\n        playerNode:cc.Node\n    },\n    onLoad() {\n        this.player=this.playerNode.getComponent(\"player\");\n        this.stubList = [];\n\n        this.addStubIndex = 0;\n\n        this.prizeList = [];\n\n        this.enemyList = [];\n\n\n        this.coinList = [];\n\n        this.addStub();\n\n\n        //\n        this.addCoinFlag = 0;\n\n\n        this.addCoinFlagDurection = 4;\n\n\n        this.addCoinDurection = 0;\n\n        global.account.gameCtl.onPause(() => {\n            for (let i = 0; i < this.stubList.length; i++) {\n                let node = this.stubList[i];\n                node.emit('time-scale', 0);\n            }\n\n            for (let i = 0; i < this.coinList.length; i++) {\n                let coin = this.coinList[i];\n                coin.emit('pause');\n            }\n        });\n        global.account.gameCtl.onResume(() => {\n            for (let i = 0; i < this.stubList.length; i++) {\n                let node = this.stubList[i];\n                console.log('on resume = ' + defines.timeScale);\n                node.emit('time-scale', defines.timeScale);\n            }\n            for (let i = 0; i < this.coinList.length; i++) {\n                let coin = this.coinList[i];\n                coin.emit('resume');\n            }\n        });\n        global.account.gameCtl.onQuick(() => {\n            for (let i = 0; i < this.stubList.length; i++) {\n                let node = this.stubList[i];\n                node.emit('quick');\n            }\n            for (let i = 0; i < this.coinList.length; i++) {\n                let coin = this.coinList[i];\n                coin.emit('quick');\n            }\n        });\n        global.account.gameCtl.onQuickEnd(() => {\n            for (let i = 0; i < this.stubList.length; i++) {\n                let node = this.stubList[i];\n                node.emit('quick-end');\n            }\n            for (let i = 0; i < this.coinList.length; i++) {\n                let coin = this.coinList[i];\n                coin.emit('quick-end');\n            }\n        });\n        global.account.gameCtl.onTimeScale(() => {\n            for (let i = 0; i < this.stubList.length; i++) {\n                let node = this.stubList[i];\n                node.emit('time-scale', defines.timeScale);\n            }\n        });\n\n        this.initPool();\n\n    },\n    initPool() {\n        this.coinPool = new cc.NodePool();\n        let initCount = 6;\n        for (let i = 0; i < initCount; i++) {\n            let coin = cc.instantiate(this.prizePrefab);\n            this.coinPool.put(coin);\n        }\n    },\n    update(dt) {\n\n        for (let i = 0; i < this.stubList.length; i++) {\n            let enemy = this.stubList[i];\n            if (enemy.dead === true) {\n                this.stubList.splice(i, 1);\n                enemy.destroy();\n            }\n        }\n\n\n        for (let i = 0; i < this.coinList.length; i++) {\n            let coin = this.coinList[i];\n            if (coin.x < cc.winSize.width * -0.5){\n                this.coinPool.put(coin);\n                this.coinList.splice(i, 1);\n            }\n        }\n\n\n        if (this.stubList.length !== 0 && this.stubList[this.stubList.length - 1].position.x < cc.winSize.width * 0.2) {\n            if (this.addStubIndex === 3) {\n                this.addStubIndex = 0;\n                this.addEnemy();\n            } else {\n                this.addStub();\n            }\n        }\n\n\n        this.addCoinFlagDurection -= dt;\n        if (this.addCoinFlagDurection <= 0 && this.addCoinFlag === 0) {\n            this.addCoinFlagDurection = 4;\n            this.addCoinFlag = Math.floor(Math.random() * 3 + 2);\n        }\n        if (this.addCoinFlag > 0) {\n            if (this.coinList.length === 0){\n                this.addCoin();\n            }else {\n\n                let maxX = -10000;\n                for (let i = 0 ; i < this.coinList.length ; i ++){\n                    if (this.coinList[i].x > maxX){\n                        maxX = this.coinList[i].x;\n                    }\n                }\n                if (this.initPrizePosNodeList[0].x - maxX > 300){\n                    this.addCoin();\n                }\n            }\n\n        }\n\n\n        //\n        // console.log('stub = ' + this.stubList.length);\n    },\n    addCoin() {\n        this.addCoinFlag--;\n        let node = this.initPrizePosNodeList[Math.floor(Math.random() * this.initPrizePosNodeList.length)];\n        let coin = null;\n        if (this.coinPool.size() > 0) {\n            console.log('取出一个对象来');\n            coin = this.coinPool.get();\n        } else {\n            console.log('对象池不够用了');\n            coin = cc.instantiate(this.prizePrefab);\n        }\n        coin.zIndex = 0;\n        coin.parent = this.gameNode;\n        coin.position = node.position;\n        coin.scale = 1;\n        if (coin.getComponent('stub')) {\n            coin.getComponent('stub').initWithData({speed: this.player.speeds[this.player.speedLevel], isQuick: global.account.gameCtl.isQuick(), manager: this});\n\n        }\n\n        coin.dead = false;\n        this.coinList.push(coin);\n    },\n    addStub() {\n        let stub = this.createStub(this.initPosNode, this.stubPrefab);\n        this.stubList.push(stub);\n        this.addStubIndex++;\n    },\n    addPrize() {\n        let stub = this.createStub(this.initPrizePosNodeList[Math.floor(Math.random() * this.initPrizePosNodeList.length)], this.prizePrefab);\n        stub.zIndex = 2;\n        this.prizeList.push(stub);\n    },\n    addEnemy() {\n        let enemy = this.createStub(this.initPosNode, this.enemyPrefabList[0]);\n        enemy.emit('init-manager', this);\n        // this.enemyList.push(enemy);\n        // console.log('add enemy');\n        this.stubList.push(enemy);\n    },\n    createStub(initPos, prefab) {\n        let stub = cc.instantiate(prefab);\n        stub.zIndex = 0;\n        stub.parent = this.gameNode;\n        stub.position = initPos.position;\n        if (stub.getComponent('stub')) {\n            stub.getComponent('stub').initWithData({speed: this.player.speeds[this.player.speedLevel], isQuick: global.account.gameCtl.isQuick()});\n        }\n        return stub\n    }\n\n});\n","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stubSpriteFrameList: {\n            default: [],\n            type: cc.SpriteFrame\n        }\n    },\n    initWithData: function (data) {\n        this.node.dead=false;\n        this.speedX = data.speed;\n        this.oldSpeedX = this.speedX;\n        let isQuick = data.isQuick;\n        console.log('is qucik' + isQuick);\n        if (isQuick){\n            this.node.emit('quick');\n        }\n\n        this.fly = false;\n    },\n    onLoad(){\n        let self=this;\n        if (this.stubSpriteFrameList.length !== 0){\n            this.addComponent(cc.Sprite).spriteFrame = this.stubSpriteFrameList[0];\n            let collider = this.node.addComponent(cc.BoxCollider);\n            collider.size = cc.size(this.node.width, this.node.height);\n        }\n        this.node.on('fly', ()=>{\n            this.fly = true;\n            console.log('飞走了');\n        });\n\n        global.account.gameCtl.event.on(\"speed-changed\",function(opt){\n            console.log(\"player speed changed:\",opt.speedValue);\n            self.speedX =opt.speedValue;\n        });\n    },\n    update(dt){\n        if (global.account.gameCtl.isRunning()){\n            if (this.speedX && this.fly === false){\n                this.node.position = cc.p(this.node.position.x - this.speedX * dt * defines.timeScale, this.node.position.y);\n            }\n        }\n\n        if ((this.node.position.x + this.node.width * 0.5) < cc.winSize.width * -0.5){\n            this.node.dead = true;\n        }else{\n            this.node.dead = false;\n        }\n    },\n    onDestroy(){\n        console.log('销毁障碍物');\n    }\n});\n","import global from './../../global'\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        timeCutDownLabel: {\n            default: null,\n            type: cc.Label\n        },\n        resultLabel: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    onLoad(){\n        global.account.gameCtl.onTipsBegan((data)=> {\n            console.log('开始答题了' + JSON.stringify(data));\n            this.node.active = true;\n            this.timeCutDown = 4;\n        });\n\n        global.account.gameCtl.onTipsEnd(()=>{\n            this.node.active = false;\n        });\n\n\n    },\n\n    start () {\n        this.node.active = false;\n\n    },\n    update(dt){\n        if (global.account.gameCtl.isRunning()){\n            if (this.timeCutDown > 0){\n                this.timeCutDown -= dt;\n                if (this.timeCutDown <= 0){\n                    this.timeCutDown = 0;\n                    this.resultLabel.string = '真棒!';\n                    setTimeout(()=>{\n                        this.resultLabel.string = '';\n                    }, 1000);\n                    global.account.gameCtl.tipsEnd({\n                        result: 'success'\n                    })\n                }\n                this.timeCutDownLabel.string = Math.floor(this.timeCutDown) + '';\n\n            }\n        }\n\n    }\n});\n","import global from './../global'\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        totalTime: 0,\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        runProgress: {\n            default: null,\n            type: cc.Node\n        },\n        upButton: {\n            default: null,\n            type: cc.Node\n        },\n        runButton: {\n            default: null,\n            type: cc.Node\n        },\n        runActiveButton: {\n            default: null,\n            type: cc.Node\n        },\n        runButtonProgress: {\n            default: null,\n            type: cc.ProgressBar\n        },\n        coinCountLabel: {\n            default: null,\n            type: cc.Label\n        },\n        distanceNode: {\n            default: null,\n            type: cc.Node\n        },\n        pauseLayer: {\n            default: null,\n            type: cc.Prefab\n        },\n        runButtonIcon: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n\n    onLoad() {\n        this.currentTime = 0;\n        // global.account.gameCtl.onPause(()=>{\n        //    //游戏暂停\n        //    this.upButton.opacity = 100;\n        //    this.runButton.opacity = 100;\n        // });\n        let self=this;\n        global.account.gameCtl.event.on(\"speed-changed\",function(opt){\n            self.runButtonProgress.progress=opt.currentLevel/opt.maxLevel;\n        });\n        global.account.gameCtl.onTipsBegan((data) => {\n            console.log('开始答题 = ' + JSON.stringify(data));\n            this.upButton.opacity = 100;\n            this.runButton.opacity = 100;\n        });\n        // global.account.gameCtl.onTipsEnd((data)=>{\n        //     console.log('答题结束' + JSON.stringify(data));\n        //     this.upButton.opacity = 255;\n        //     this.runButton.opacity = 255;\n        // });\n        global.account.gameCtl.onAttackEnd(() => {\n            //玩家攻击结束\n            this.upButton.opacity = 255;\n            this.runButton.opacity = 255;\n        });\n        global.account.gameCtl.onDistanceChange((distance)=>{\n            this.distanceNode.emit('distance-change', distance);\n        });\n\n\n\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            onKeyPressed: (keyCode, event) => {\n                this._keyHandler(keyCode, true);\n            },\n            onKeyReleased: (keyCode, event) => {\n                this._keyHandler(keyCode, false);\n            },\n        }, this.node);\n\n\n        this.isCanRun = false;\n        this.runButtonProgressSpeed = 0.01;\n        this.runButtonIcon.active = false;\n\n    },\n    _keyHandler(code, isDown){\n        switch (code){\n            case cc.KEY.up:\n            case cc.KEY.space:\n                console.log('跳');\n                if (this.upButton.opacity === 255){\n                    this.player.emit('jump');\n                }\n                break;\n            case cc.KEY.enter:\n                console.log('加速');\n                // this.player.emit('quick');\n                if (this.isCanRun){\n                    global.account.gameCtl.quick();\n                }\n                break;\n            default:\n                break;\n        }\n    },\n    onButtonClick: function (event, customData) {\n        switch (customData) {\n            case 'up-button':\n                //上按钮\n                if (this.upButton.opacity === 255) {\n                    this.player.emit('jump');\n                }\n                break;\n            case 'run-button':\n                if (this.runButton.opacity === 255 && this.isCanRun) {\n                    console.log('run button');\n                    global.account.gameCtl.quick();\n                    this.runButtonIcon.active = false;\n\n\n                }\n                break;\n            case 'pause':\n                let node = cc.instantiate(this.pauseLayer);\n                node.parent = this.node;\n                global.account.gameCtl.pause();\n                break;\n            default:\n                break;\n        }\n    },\n    update(dt) {\n\n\n        if (global.account.gameCtl.isRunning()){\n            this.currentTime += dt;\n            this.runProgress.getComponent('mask-progress').setProgress((this.totalTime - this.currentTime) / this.totalTime);\n            this.coinCountLabel.string = global.account.playerData.goldCount + '';\n\n\n            // if (global.account.gameCtl.isQuick()){\n            //     if (this.runButtonProgress.progress > 0){\n            //         this.runButtonProgress.progress -= this.runButtonProgressSpeed;\n            //         if (this.runButtonProgress.progress <= 0){\n            //             this.runButtonProgress.progress = 0;\n            //             this.isCanRun = false;\n            //             global.account.gameCtl.qucikEnd();\n\n            //         }\n            //     }\n            // }else {\n            //     if (this.runButtonProgress.progress < 1){\n            //         this.runButtonProgress.progress += this.runButtonProgressSpeed;\n            //         if (this.runButtonProgress.progress >= 1){\n            //             this.runButtonProgress.progress = 1;\n            //             console.log('可以点击开始了');\n            //             this.isCanRun = true;\n            //             this.runButtonIcon.active = true;\n\n            //         }\n            //     }\n            // }\n\n        }\n    }\n\n\n});\n"],"sourceRoot":"/source/","file":"project.dev.js"}